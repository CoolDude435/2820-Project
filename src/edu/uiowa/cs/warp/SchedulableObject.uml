<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_myzvMN0yEe2-WKuFT59MHQ" name="SchedulableObject">
    <eAnnotations xmi:id="_nkBwwN0yEe2-WKuFT59MHQ" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_nkPzMN0yEe2-WKuFT59MHQ" source="codegen">
        <details xmi:id="_nkRoYN0yEe2-WKuFT59MHQ" key="codegenDirectory" value="/cs2820/src"/>
        <details xmi:id="_uYRrwN0yEe2-WKuFT59MHQ" key="AssociatedSourceCode" value="/cs2820/src/edu/uiowa/cs/warp/AbstractMap.java;1424622298/1;/cs2820/src/edu/uiowa/cs/warp/Activation.java;1809359660/1;/cs2820/src/edu/uiowa/cs/warp/Activations.java;820905503/1;/cs2820/src/edu/uiowa/cs/warp/BasicPoset.java;2224306677/1;/cs2820/src/edu/uiowa/cs/warp/ChannelAnalysis.java;3281869805/1;/cs2820/src/edu/uiowa/cs/warp/ChannelVisualization.java;4278626487/1;/cs2820/src/edu/uiowa/cs/warp/Channels.java;4123949576/1;/cs2820/src/edu/uiowa/cs/warp/CodeFragment.java;1317884368/1;/cs2820/src/edu/uiowa/cs/warp/CombinedActivation.java;2029188156/1;/cs2820/src/edu/uiowa/cs/warp/CommunicationGraph.java;1885349989/1;/cs2820/src/edu/uiowa/cs/warp/ConnectivityPoset.java;79606901/1;/cs2820/src/edu/uiowa/cs/warp/DeadlineComparator.java;2664873414/1;/cs2820/src/edu/uiowa/cs/warp/Description.java;1965213309/1;/cs2820/src/edu/uiowa/cs/warp/Edge.java;3709953189/1;/cs2820/src/edu/uiowa/cs/warp/FileManager.java;27414850/1;/cs2820/src/edu/uiowa/cs/warp/Flow.java;3319535548/1;/cs2820/src/edu/uiowa/cs/warp/FlowMap.java;4084289374/1;/cs2820/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;1064623610/1;/cs2820/src/edu/uiowa/cs/warp/GraphViz.java;2298633738/1;/cs2820/src/edu/uiowa/cs/warp/GraphVizListener.java;1295846020/1;/cs2820/src/edu/uiowa/cs/warp/GuiVisualization.java;176383205/1;/cs2820/src/edu/uiowa/cs/warp/InputGraphFile.java;1686457629/1;/cs2820/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;888741420/1;/cs2820/src/edu/uiowa/cs/warp/LatencyAnalysis.java;1775762007/1;/cs2820/src/edu/uiowa/cs/warp/LatencyVisualization.java;2356346042/1;/cs2820/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;459276445/1;/cs2820/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1826505669/1;/cs2820/src/edu/uiowa/cs/warp/Node.java;1981269113/1;/cs2820/src/edu/uiowa/cs/warp/NodeMap.java;1346116292/1;/cs2820/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;1765515208/1;/cs2820/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;4124722036/1;/cs2820/src/edu/uiowa/cs/warp/PeriodComparator.java;3701604498/1;/cs2820/src/edu/uiowa/cs/warp/Poset.java;1044364042/1;/cs2820/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;4276577887/1;/cs2820/src/edu/uiowa/cs/warp/PriorityComparator.java;3500031587/1;/cs2820/src/edu/uiowa/cs/warp/Program.java;1733998689/1;/cs2820/src/edu/uiowa/cs/warp/ProgramSchedule.java;1201325015/1;/cs2820/src/edu/uiowa/cs/warp/ProgramVisualization.java;1758355314/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;76739592/1;/cs2820/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;2628899863/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;58883770/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityParameters.java;3957624923/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityRow.java;4035734164/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityTable.java;3240623619/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;3298264252/1;/cs2820/src/edu/uiowa/cs/warp/ReliabilityVisualizationTest.java;735307596/1;/cs2820/src/edu/uiowa/cs/warp/ReportVisualization.java;392587375/1;/cs2820/src/edu/uiowa/cs/warp/Row.java;2072540828/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;2628500970/1;/cs2820/src/edu/uiowa/cs/warp/Schedule.java;240224972/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTable.java;820659454/1;/cs2820/src/edu/uiowa/cs/warp/ScheduleTime.java;3343049115/1;/cs2820/src/edu/uiowa/cs/warp/SimulatorInput.java;3110368559/1;/cs2820/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;2370839513/1;/cs2820/src/edu/uiowa/cs/warp/SystemAttributes.java;3931163786/1;/cs2820/src/edu/uiowa/cs/warp/SystemFactory.java;1232525323/1;/cs2820/src/edu/uiowa/cs/warp/Table.java;27306893/1;/cs2820/src/edu/uiowa/cs/warp/Visualization.java;3371724965/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationFactory.java;1441226277/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationImplementation.java;1155617066/1;/cs2820/src/edu/uiowa/cs/warp/VisualizationObject.java;1377291719/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadListener.java;3074030464/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadDescription.java;1384976735/1;/cs2820/src/edu/uiowa/cs/warp/WarpInterface.java;485526877/1;/cs2820/src/edu/uiowa/cs/warp/WarpPoset.java;346020847/1;/cs2820/src/edu/uiowa/cs/warp/WarpSystem.java;1549849953/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoad.java;1342401124/1;/cs2820/src/edu/uiowa/cs/warp/WarpDSL.java;790761677/1;/cs2820/src/edu/uiowa/cs/warp/Warp.java;2413321654/1;/cs2820/src/edu/uiowa/cs/warp/WorkLoadTest.java;4253322364/1;/cs2820/src/edu/uiowa/cs/warp/SchedulableObject.java;987848086/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_qBIsYN0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_qBM90N0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_qBNk4N0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_qBNk4d0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_qBNk4t0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_qBNk490yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_qBOL8N0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_qBOzAN0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_qBRPQN0yEe2-WKuFT59MHQ">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_p8zmAN0yEe2-WKuFT59MHQ" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_p86TsN0yEe2-WKuFT59MHQ" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_p866wN0yEe2-WKuFT59MHQ" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_p9N1sN0yEe2-WKuFT59MHQ" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_qCD5cN0yEe2-WKuFT59MHQ" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_rCGaIN0yEe2-WKuFT59MHQ" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_qDutYN0yEe2-WKuFT59MHQ" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_rE3aQd0yEe2-WKuFT59MHQ" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_qDzl4N0yEe2-WKuFT59MHQ" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_rE7EoN0yEe2-WKuFT59MHQ" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_rE7rsd0yEe2-WKuFT59MHQ" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qHwRwN0yEe2-WKuFT59MHQ" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_rGfx8N0yEe2-WKuFT59MHQ" general="_q-4HAN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIJXwN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rIKl4N0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLFXAN0yEe2-WKuFT59MHQ" name="AbstractMap" specification="_qIjjAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLGlIN0yEe2-WKuFT59MHQ" type="_qHwRwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qIjjAN0yEe2-WKuFT59MHQ" name="AbstractMap" method="_rLFXAN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qItUAN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qIvJMN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qIvwQN0yEe2-WKuFT59MHQ" type="_qHwRwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qI2d8N0yEe2-WKuFT59MHQ" name="Activation">
              <generalization xmi:id="_rAB9kd0yEe2-WKuFT59MHQ" general="_qXJ_sN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rILM8N0yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ" isReadOnly="true" association="_rOoaQN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rINCIN0yEe2-WKuFT59MHQ" name="edges" type="_q_dV0N0yEe2-WKuFT59MHQ" isReadOnly="true" association="_rOt50N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rINpMd0yEe2-WKuFT59MHQ" name="additionalScheduleTimes" type="_q_dV0N0yEe2-WKuFT59MHQ" isReadOnly="true" association="_rOvH8N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIOQQd0yEe2-WKuFT59MHQ" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rIOQQt0yEe2-WKuFT59MHQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rGoU0d0yEe2-WKuFT59MHQ" client="_qI2d8N0yEe2-WKuFT59MHQ" supplier="_rGntwN0yEe2-WKuFT59MHQ" contract="_rGntwN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLSyYN0yEe2-WKuFT59MHQ" name="Activation" specification="_qJJ_8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLTZcN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLTZcd0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		setName(name);
		this.edges = new ArrayList&lt;Edge>();
		this.coordinators = new ArrayList&lt;String>();
		this.conflicts = new HashSet&lt;String>();
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLUAgN0yEe2-WKuFT59MHQ" name="Activation" specification="_q_nt4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLUAgd0yEe2-WKuFT59MHQ" name="elem" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLUAgt0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLUAg90yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(elem, time);
		this.edges = new ArrayList&lt;Edge>();
		this.edges.addAll(elem.getEdges());
		this.coordinators = new ArrayList&lt;String>();
		this.coordinators.addAll(elem.getCoordinators());
		// conflicts = new Set&lt;String>();
		this.conflicts = new HashSet&lt;String>();
		this.conflicts.addAll(elem.getConflicts());
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLUnkN0yEe2-WKuFT59MHQ" name="clone" specification="_qJORYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLUnkd0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();
		var clone = new Activation(this, time);
		return clone;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLUnkt0yEe2-WKuFT59MHQ" name="getEdgesByReleaseTime" specification="_qJglQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLUnk90yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLUnlN0yEe2-WKuFT59MHQ" name="getEdgesByLatestReleaseTime" specification="_qJjokN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLUnld0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLVOoN0yEe2-WKuFT59MHQ" name="getEdgesByPeriod" specification="_qJnS8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLVOod0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLVOot0yEe2-WKuFT59MHQ" name="getEdgesByDeadline" specification="_qJq9UN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLVOo90yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new 
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLV1sN0yEe2-WKuFT59MHQ" name="getEdgesByPriority" specification="_qJuAoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLV1sd0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new 
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLV1st0yEe2-WKuFT59MHQ" name="addEdges" specification="_rGrYIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLV1s90yEe2-WKuFT59MHQ" name="edges" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.edges.addAll(edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLV1tN0yEe2-WKuFT59MHQ" name="addEdge" specification="_q_wQwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLV1td0yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.edges.add(edge);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLV1tt0yEe2-WKuFT59MHQ" name="increaseEdgePhases" specification="_qJ4_wN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLV1t90yEe2-WKuFT59MHQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed
			for (Edge edge: this.edges) {
				var oldPhase = edge.getPhase();
				edge.setPhase(oldPhase+additionalOffset);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLWcwN0yEe2-WKuFT59MHQ" name="updatePriorityAndRelease" specification="_qJ6N4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLWcwd0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();
		if (currentTime >= lastUpdateTime) {
			for(Edge edge: edges) {
				edge.setNextReleaseTime(currentTime);
			}
			
			/* get the edges with earliest release time and 
			 * highest priority ==> get head of the queue just built
			 */
			var edgesByReleaseTime = getEdgesByReleaseTime();
			var firstEdge = edgesByReleaseTime.element();
			setPhase(firstEdge.getPhase()); 
			var edgesByPeriod = getEdgesByPeriod();
			firstEdge = edgesByPeriod.element();
			setPeriod(firstEdge.getPeriod()); // shortest period 
			var edgesByDeadline = getEdgesByDeadline();
			firstEdge = edgesByDeadline.element();
			setDeadline(firstEdge.getDeadline()); // earliest deadline
			var edgesByPrioriy = getEdgesByPriority();
			firstEdge = edgesByPrioriy.element();
			setPriority(firstEdge.getPriority());
			
			/* With the partition scheduling parameters set to match  
			 * the highest priority edge with respect to the parameter, 
			 * we can now set the next release time based on the
			 * current time.
			 * */
			setNextReleaseTime(currentTime);
			
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLWcwt0yEe2-WKuFT59MHQ" name="addConflict" specification="_qJ608N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLWcw90yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLWcxN0yEe2-WKuFT59MHQ" name="addConflicts" specification="_rGsmQd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLWcxd0yEe2-WKuFT59MHQ" name="conflicts" type="_q_fyEd0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLWcxt0yEe2-WKuFT59MHQ" name="addCoordinator" specification="_qJ8qIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLWcx90yEe2-WKuFT59MHQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLWcyN0yEe2-WKuFT59MHQ" name="addCoordinators" specification="_rGt0Yd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLWcyd0yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLXD0N0yEe2-WKuFT59MHQ" name="addScheduleTimes" specification="_rGubcd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLXq4N0yEe2-WKuFT59MHQ" name="scheduleTime" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLaHIN0yEe2-WKuFT59MHQ" name="getNextScheduleTime" specification="_qJ9RMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLaHId0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLaHIt0yEe2-WKuFT59MHQ" type="_qTFYAd0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);
		var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		while (iter.hasNext() ) {
			var next = iter.next();
			if (next.getStartTime() > time) {
				result = next;
				break;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLbVQN0yEe2-WKuFT59MHQ" name="getMatchingEndTime" specification="_qJ94QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLbVQd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLbVQt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;
		var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		// var nextEndTime = time;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {
			// nextEndTime = iter.next().getEndTime();
			var scheduleTime = iter.next();
			if (time == scheduleTime.getStartTime()) {
				result = scheduleTime.getEndTime();
				break;
			}
		}
		
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLdKcN0yEe2-WKuFT59MHQ" name="getNextStartTime" specification="_qKA7kN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLdKcd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLdKct0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		var nextStartTime = time;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {
			nextStartTime = iter.next().getStartTime();
		}
		if (nextStartTime == time) {
			/* no next StartTime found 
			 * could be an error 
			 */
			nextStartTime = Integer.MAX_VALUE;
			
		}
		return nextStartTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLdxgN0yEe2-WKuFT59MHQ" name="getNextEndTime" specification="_qKCJsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLdxgd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLdxgt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();
		var nextEndTime = time;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {
			nextEndTime = iter.next().getEndTime();
		}
		if (nextEndTime == time) {
			/* no next StartTime found 
			 * could be an error 
			 */
			nextEndTime = Integer.MAX_VALUE;
			
		}
		return nextEndTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLdxg90yEe2-WKuFT59MHQ" name="getNumEdges" specification="_qKCwwt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLdxhN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLeYkN0yEe2-WKuFT59MHQ" name="compareTo" specification="_q_zUEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLeYkd0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLeYkt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLeYk90yEe2-WKuFT59MHQ" name="conflictExists" specification="_q_6Bwd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLeYlN0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLeYld0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* create a copy of this.conflicts and obj.conflicts
		 * and then check the intersection of the two 
		 * sets. 
		 * Conflicts exists if |intersection| > 0
		 */
		var conflicts = new HashSet&lt;String>();
		conflicts.addAll(getConflicts());
		var objConflicts = new HashSet&lt;String>();
		objConflicts.addAll(obj.getConflicts());
		conflicts.retainAll(objConflicts); // get the intersection
		if (conflicts.size() > 0) {
			result = true; // |intersection| > 0 => conflict
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLeYlt0yEe2-WKuFT59MHQ" name="canCombine" specification="_q_6o0t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLeYl90yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLeYmN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* make sure a2 is not null */
		if (a2 != null) {
			var newEntryCoordinator = a2.getCoordinators().get(0);
			if (getCoordinators().contains(newEntryCoordinator)) {
				/* The (first) coordinator of the newEntry
				 * is in the list of coordinators of the prior entry.
				 * Thus, these two can be combined for efficiency.
				 */
				result = true;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLeYmd0yEe2-WKuFT59MHQ" name="getDelta" specification="_qKEl8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLeYmt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;
		for (Edge edge: getEdges()) {
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());
		}
		return maxTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLeYm90yEe2-WKuFT59MHQ" name="getExecutionDuration" specification="_qKHpQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLeYnN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming 
		 * the WARP pipeline scheduling approach, the activation only
		 * executes for Delta + (numEdges - 1) time units, because
		 * a new edge will be added to the pipeline every time unit
		 * it executes.
		 */
		return getDelta() + (getNumEdges() - 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLgNwN0yEe2-WKuFT59MHQ" name="getCombinedExecutionDuration" specification="_q_6o1d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLgNwd0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLgNwt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming 
		 * the WARP pipeline scheduling approach, the activation only
		 * executes for Delta + (numEdges - 1) time units, because
		 * a new edge will be added to the pipeline every time unit
		 * it executes.
		 * So, if combined, we consider edges in both activations
		 */
		var result = 0;
		if (a2 != null) {
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLg00N0yEe2-WKuFT59MHQ" name="printAll" specification="_qKKFgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLg00d0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.printAll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLiC8N0yEe2-WKuFT59MHQ" name="printAll" specification="_qKL6sN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>super.print();
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLjREN0yEe2-WKuFT59MHQ" name="printEdges" specification="_q_7P4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLj4IN0yEe2-WKuFT59MHQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLj4Id0yEe2-WKuFT59MHQ" name="edges" type="_qR2o8N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);
		printEdges(edges);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLj4It0yEe2-WKuFT59MHQ" name="printEdges" specification="_rAAIYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLj4I90yEe2-WKuFT59MHQ" name="edges" type="_qR2o8N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();
 		q.addAll(edges);
 		Iterator&lt;Edge> qValue = q.iterator();
         while (qValue.hasNext()) {
         	var next = q.poll();
         	next.print();
         }
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qJJ_8N0yEe2-WKuFT59MHQ" name="Activation" visibility="package" method="_rLSyYN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qJL1IN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qJL1Id0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qJKnAN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qJL1It0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJORYN0yEe2-WKuFT59MHQ" name="clone" method="_rLUnkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_ubkN0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJglQN0yEe2-WKuFT59MHQ" name="getEdgesByReleaseTime" method="_rLUnkt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNIlcN0yEe2-WKuFT59MHQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_q_vpsN0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJjokN0yEe2-WKuFT59MHQ" name="getEdgesByLatestReleaseTime" method="_rLUnlN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJMgN0yEe2-WKuFT59MHQ">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_q_vpsd0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJnS8N0yEe2-WKuFT59MHQ" name="getEdgesByPeriod" method="_rLVOoN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJMgd0yEe2-WKuFT59MHQ">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_q_vpst0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJq9UN0yEe2-WKuFT59MHQ" name="getEdgesByDeadline" method="_rLVOot0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJMgt0yEe2-WKuFT59MHQ">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_q_vps90yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJuAoN0yEe2-WKuFT59MHQ" name="getEdgesByPriority" method="_rLV1sN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJMg90yEe2-WKuFT59MHQ">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_q_vptN0yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJ4_wN0yEe2-WKuFT59MHQ" name="increaseEdgePhases" method="_rLV1tt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJMhN0yEe2-WKuFT59MHQ">
                  <body>Increase the phase of each edge by the input parameter.
	 * 
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_qJ5m0N0yEe2-WKuFT59MHQ" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qJ6N4N0yEe2-WKuFT59MHQ" name="updatePriorityAndRelease" method="_rLWcwN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJMhd0yEe2-WKuFT59MHQ">
                  <body>Updates priority and release time of 
	 * this activation.&lt;br>
	 * 
	 * The priority of the element is equal to the
	 * edge priority with the earliest release time.
	 * Thus, it can change dynamically. &lt;br>
	 *
	 * The release time of the element is equal to the
	 * edge priority with the earliest release time.
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_qJ6N4d0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qJ608N0yEe2-WKuFT59MHQ" name="addConflict" method="_rLWcwt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qJ7cAN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qJ8qIN0yEe2-WKuFT59MHQ" name="addCoordinator" method="_rLWcxt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qJ8qId0yEe2-WKuFT59MHQ" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qJ9RMN0yEe2-WKuFT59MHQ" name="getNextScheduleTime" method="_rLaHIN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJzkd0yEe2-WKuFT59MHQ">
                  <body>getNextScheduleTime returns the next entry in the additional
	 * schedule time array list whose start time is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_qJ9RMd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q_w30N0yEe2-WKuFT59MHQ" type="_qTFYAd0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qJ94QN0yEe2-WKuFT59MHQ" name="getMatchingEndTime" method="_rLbVQN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJzkt0yEe2-WKuFT59MHQ">
                  <body>getMatchingEndTime returns the next end time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_qJ94Qd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qJ94Qt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKA7kN0yEe2-WKuFT59MHQ" name="getNextStartTime" method="_rLdKcN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJzk90yEe2-WKuFT59MHQ">
                  <body>getNextStartTime returns the next start time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_qKBioN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qKBiod0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKCJsN0yEe2-WKuFT59MHQ" name="getNextEndTime" method="_rLdxgN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJzlN0yEe2-WKuFT59MHQ">
                  <body>getNextEndTime returns the next end time in the additional
	 * schedule time array list that is greater than the input
	 * parameter time. MAX_INT is returned if such a time
	 * is not found
	 * @param next
	 * @param time
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_qKCwwN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qKCwwd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKCwwt0yEe2-WKuFT59MHQ" name="getNumEdges" method="_rLdxg90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qKDX0N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKEl8N0yEe2-WKuFT59MHQ" name="getDelta" method="_rLeYmd0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJzld0yEe2-WKuFT59MHQ">
                  <body>Returns the maximum number of transmissions
	 * needed on any link in activation to ensure e2e 
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qKHCMN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKHpQN0yEe2-WKuFT59MHQ" name="getExecutionDuration" method="_rLeYm90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qKIQUN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKKFgN0yEe2-WKuFT59MHQ" name="printAll" method="_rLg00N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qKKFgd0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qKL6sN0yEe2-WKuFT59MHQ" name="printAll" method="_rLiC8N0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_q_nt4N0yEe2-WKuFT59MHQ" name="Activation" visibility="package" method="_rLUAgN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_q_qKIN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_q_rYQN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_q_oU8N0yEe2-WKuFT59MHQ" name="elem" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_q_o8AN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q_smYN0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_q_wQwN0yEe2-WKuFT59MHQ" name="addEdge" method="_rLV1tN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_wQwd0yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_q_zUEN0yEe2-WKuFT59MHQ" name="compareTo" method="_rLeYkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_z7IN0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_q_1JQN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_q_6Bwd0yEe2-WKuFT59MHQ" name="conflictExists" method="_rLeYk90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_6o0N0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_q_6o0d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_q_6o0t0yEe2-WKuFT59MHQ" name="canCombine" method="_rLeYlt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_6o090yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_q_6o1N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_q_6o1d0yEe2-WKuFT59MHQ" name="getCombinedExecutionDuration" method="_rLgNwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_7P4N0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_q_7P4d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_q_7P4t0yEe2-WKuFT59MHQ" name="printEdges" visibility="private" method="_rLjREN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_q_7P490yEe2-WKuFT59MHQ" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q_728N0yEe2-WKuFT59MHQ" name="edges" type="_qR2o8N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAAIYN0yEe2-WKuFT59MHQ" name="printEdges" visibility="private" method="_rLj4It0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAAvcN0yEe2-WKuFT59MHQ" name="edges" type="_qR2o8N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGrYIN0yEe2-WKuFT59MHQ" name="addEdges" method="_rLV1st0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGrYId0yEe2-WKuFT59MHQ" name="edges" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGsmQd0yEe2-WKuFT59MHQ" name="addConflicts" method="_rLWcxN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGtNUN0yEe2-WKuFT59MHQ" name="conflicts" type="_q_fyEd0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGt0Yd0yEe2-WKuFT59MHQ" name="addCoordinators" method="_rLWcyN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGt0Yt0yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGubcd0yEe2-WKuFT59MHQ" name="addScheduleTimes" method="_rLXD0N0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNJzkN0yEe2-WKuFT59MHQ">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGubct0yEe2-WKuFT59MHQ" name="scheduleTime" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qKfcsN0yEe2-WKuFT59MHQ" name="Activations">
              <generalization xmi:id="_rAFA4N0yEe2-WKuFT59MHQ" general="_qHwRwN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIShsN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rIShsd0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qKnYgN0yEe2-WKuFT59MHQ" name="BasicPoset">
              <ownedComment xmi:id="_rNJzlt0yEe2-WKuFT59MHQ">
                <body>ConnectivityPoset extends Poset by selecting
primary coordinator in the flow based on highest
local connectivity.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_rAGPA90yEe2-WKuFT59MHQ" general="_qQNDIN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLmUYN0yEe2-WKuFT59MHQ" name="BasicPoset" specification="_rAFn8d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLmUYd0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLmUYt0yEe2-WKuFT59MHQ" type="_qKnYgN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(workload);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rAFn8d0yEe2-WKuFT59MHQ" name="BasicPoset" visibility="package" method="_rLmUYN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAGPAN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAGPAd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAFn8t0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAGPAt0yEe2-WKuFT59MHQ" type="_qKnYgN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qKrp8N0yEe2-WKuFT59MHQ" name="ChannelAnalysis">
              <ownedComment xmi:id="_rNJzl90yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rITIwN0yEe2-WKuFT59MHQ" name="program" visibility="private" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rOvvAN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rITv0d0yEe2-WKuFT59MHQ" name="programTable" visibility="private" type="_qRgDoN0yEe2-WKuFT59MHQ" association="_rOvvA90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIUW4N0yEe2-WKuFT59MHQ" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLm7cN0yEe2-WKuFT59MHQ" name="ChannelAnalysis" specification="_rAG2EN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLm7cd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLm7ct0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();
 this.programTable = program.getSchedule();
 conflictExists = false;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLp-wN0yEe2-WKuFT59MHQ" name="ChannelAnalysis" specification="_rAIrQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLql0N0yEe2-WKuFT59MHQ" name="program" type="_qQ6NwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLql0d0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.program = program;
 this.programTable = program.getSchedule();
 conflictExists = false;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLrz8N0yEe2-WKuFT59MHQ" name="isChannelConflict" specification="_qKuGMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLrz8d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qKuGMN0yEe2-WKuFT59MHQ" name="isChannelConflict" method="_rLrz8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qKutQN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rAG2EN0yEe2-WKuFT59MHQ" name="ChannelAnalysis" visibility="package" method="_rLm7cN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAHdIN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAHdId0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAG2Ed0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAHdIt0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAIrQN0yEe2-WKuFT59MHQ" name="ChannelAnalysis" visibility="package" method="_rLp-wN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAIrQt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAIrQ90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAIrQd0yEe2-WKuFT59MHQ" name="program" type="_qQ6NwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAIrRN0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qK66gN0yEe2-WKuFT59MHQ" name="ChannelVisualization">
              <ownedComment xmi:id="_rNJzmN0yEe2-WKuFT59MHQ">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.
&lt;p>

CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested
in Warp.

@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <generalization xmi:id="_rAKgcN0yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIU98N0yEe2-WKuFT59MHQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rIU98d0yEe2-WKuFT59MHQ" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rIU98t0yEe2-WKuFT59MHQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rIU9890yEe2-WKuFT59MHQ" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rIU99N0yEe2-WKuFT59MHQ" name="warp" visibility="private" type="_qUzPQN0yEe2-WKuFT59MHQ" association="_rOwWEd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIVlAd0yEe2-WKuFT59MHQ" name="ca" visibility="private" type="_qKrp8N0yEe2-WKuFT59MHQ" association="_rOw9Id0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLrz8t0yEe2-WKuFT59MHQ" name="ChannelVisualization" specification="_rAJ5YN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLrz890yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLrz9N0yEe2-WKuFT59MHQ" type="_qK66gN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
 this.warp = warp;
 this.ca = warp.toChannelAnalysis();
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rAJ5YN0yEe2-WKuFT59MHQ" name="ChannelVisualization" visibility="package" method="_rLrz8t0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAJ5Yt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAJ5Y90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAJ5Yd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAJ5ZN0yEe2-WKuFT59MHQ" type="_qK66gN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qLCPQN0yEe2-WKuFT59MHQ" name="Channels">
              <ownedComment xmi:id="_rNJzmd0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rIWMEt0yEe2-WKuFT59MHQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rIWzId0yEe2-WKuFT59MHQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rIWzI90yEe2-WKuFT59MHQ" name="channelsAvailable" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rOw9JN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLuQMN0yEe2-WKuFT59MHQ" name="Channels" specification="_qLXmcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLuQMd0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLuQMt0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLuQM90yEe2-WKuFT59MHQ" type="_qLCPQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;
 this.verbose = verbose;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLuQNN0yEe2-WKuFT59MHQ" name="getChannelSet" specification="_qLY0kN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLuQNd0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLuQNt0yEe2-WKuFT59MHQ" type="_q_ej8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));
 return channelSet;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLuQN90yEe2-WKuFT59MHQ" name="addNewChannelSet" specification="_qLb34N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);
 channelsAvailable.add(channels);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLuQON0yEe2-WKuFT59MHQ" name="isEmpty" specification="_qLce8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLuQOd0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLuQOt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this
                                                          // timeSlot
 return channelSet.isEmpty(); // returns true channel set is empty and false if not
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLuQO90yEe2-WKuFT59MHQ" name="removeChannel" specification="_qLce890yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLuQPN0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLuQPd0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLuQPt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;
 ChannelSet channels = channelsAvailable.get(timeSlot);
 result = channels.remove(channel);
 return result;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLu3QN0yEe2-WKuFT59MHQ" name="addChannel" specification="_qLdtEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLu3Qd0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLu3Qt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLu3Q90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set
 result = channels.add(channel); // remove the channel, returning the result
 return result;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLu3RN0yEe2-WKuFT59MHQ" name="getNumChannels" specification="_qLe7MN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLu3Rd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qLXmcN0yEe2-WKuFT59MHQ" name="Channels" visibility="package" method="_rLuQMN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qLYNgt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qLYNg90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qLYNgN0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLYNgd0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLYNhN0yEe2-WKuFT59MHQ" type="_qLCPQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qLY0kN0yEe2-WKuFT59MHQ" name="getChannelSet" method="_rLuQNN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qLY0kd0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGw3sN0yEe2-WKuFT59MHQ" type="_q_ej8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qLb34N0yEe2-WKuFT59MHQ" name="addNewChannelSet" method="_rLuQN90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qLce8N0yEe2-WKuFT59MHQ" name="isEmpty" method="_rLuQON0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qLce8d0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLce8t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qLce890yEe2-WKuFT59MHQ" name="removeChannel" method="_rLuQO90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qLdGAN0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLdGAd0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLdGAt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qLdtEN0yEe2-WKuFT59MHQ" name="addChannel" method="_rLu3QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qLeUIN0yEe2-WKuFT59MHQ" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLeUId0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qLeUIt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qLe7MN0yEe2-WKuFT59MHQ" name="getNumChannels" method="_rLu3RN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qLe7Md0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_qLJkAN0yEe2-WKuFT59MHQ" name="ChannelSet" visibility="private">
                <generalization xmi:id="_rGwQoN0yEe2-WKuFT59MHQ" general="_q_ej8N0yEe2-WKuFT59MHQ"/>
                <ownedAttribute xmi:id="_rIWMEN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rIWMEd0yEe2-WKuFT59MHQ" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLsbAN0yEe2-WKuFT59MHQ" name="ChannelSet" specification="_qLRf0N0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rLsbAd0yEe2-WKuFT59MHQ" type="_qLJkAN0yEe2-WKuFT59MHQ" direction="return"/>
                  <language>java</language>
                  <body>super();
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLtpIN0yEe2-WKuFT59MHQ" name="ChannelSet" specification="_qLT8EN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rLtpId0yEe2-WKuFT59MHQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rLtpIt0yEe2-WKuFT59MHQ" type="_qLJkAN0yEe2-WKuFT59MHQ" direction="return"/>
                  <language>java</language>
                  <body>super();
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1
     this.add(String.valueOf(i));
   }
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_qLRf0N0yEe2-WKuFT59MHQ" name="ChannelSet" visibility="private" method="_rLsbAN0yEe2-WKuFT59MHQ">
                  <eAnnotations xmi:id="_qLSt8N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_qLSt8d0yEe2-WKuFT59MHQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_qLTVAN0yEe2-WKuFT59MHQ" type="_qLJkAN0yEe2-WKuFT59MHQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qLT8EN0yEe2-WKuFT59MHQ" name="ChannelSet" visibility="private" method="_rLtpIN0yEe2-WKuFT59MHQ">
                  <eAnnotations xmi:id="_qLVxQN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_qLVxQd0yEe2-WKuFT59MHQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_qLVKMN0yEe2-WKuFT59MHQ" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_qLVxQt0yEe2-WKuFT59MHQ" type="_qLJkAN0yEe2-WKuFT59MHQ" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qLwoAN0yEe2-WKuFT59MHQ" name="CodeFragment">
              <ownedAttribute xmi:id="_rIYBQN0yEe2-WKuFT59MHQ" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rIYBQd0yEe2-WKuFT59MHQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rIYoUN0yEe2-WKuFT59MHQ" name="edges" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rOxkMd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIZPYd0yEe2-WKuFT59MHQ" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rIZPY90yEe2-WKuFT59MHQ" name="codeFragment" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rOyLQN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIadgN0yEe2-WKuFT59MHQ" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rImqwN0yEe2-WKuFT59MHQ" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLu3Rt0yEe2-WKuFT59MHQ" name="CodeFragment" specification="_qMEKAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLu3R90yEe2-WKuFT59MHQ" type="_qLwoAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;
		this.channel = 0;
		this.edges = null;
		this.coordinator = null;
		this.codeFragment = new ArrayList&lt;String>();
		this.codeFragment.add(SLEEP);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLu3SN0yEe2-WKuFT59MHQ" name="CodeFragment" specification="_rGxewN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLu3Sd0yEe2-WKuFT59MHQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLu3St0yEe2-WKuFT59MHQ" name="edges" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLu3S90yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLu3TN0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLu3Td0yEe2-WKuFT59MHQ" type="_qLwoAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;
		this.channel = channel;
		this.edges = edges;
		this.coordinator = coordinators.get(0);
		this.codeFragment = new ArrayList&lt;String>();
		if (multipleCoordinators(coordinators)) {
			reportIfDifferentCoordinators(coordinators);
		}	
		generateCodeFragment();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLveUN0yEe2-WKuFT59MHQ" name="getCoordinator" specification="_qMIbcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLveUd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLveUt0yEe2-WKuFT59MHQ" name="instructions" specification="_qMJpkd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLveU90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return codeFragment;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLveVN0yEe2-WKuFT59MHQ" name="size" specification="_qMMF0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLveVd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLveVt0yEe2-WKuFT59MHQ" name="generateCodeFragment" specification="_qMMs4d0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new 
				PriorityComparator&lt;Edge>(),this.edges);
		Iterator&lt;Edge> q = edgeQueue.iterator();
		var size = edgeQueue.size();
		/* the code length will be equal to 
		 * delta + #edges -1
		 */
		var codeLength = delta + size -1;
		var basicInstructions = new ArrayList&lt;String>();
		/* create basic instructions for each edge 
		 * and initial receiver set for each instruction
		 * */
		while(q.hasNext()) {
			var edge = edgeQueue.poll();
			var src = edge.getSrc();
			var snk = edge.getSnk();
			var flow = edge.getFlow();
			var instr = getBaseInstruction(flow,src,snk);
			basicInstructions.add(instr);
		}
		/* start building code fragments */
		
		codeFragment.add(basicInstructions.get(0));
		
		/* when size &lt; delta, we need to repeat the
		 * middle stage delta - size times
		 */
		var numRepeatStages = Math.max(0, delta - size);
		if (size &lt; delta) {
			numRepeatStages = delta - size;
		}
		
		/* build the initial code fragment */
		Integer localDelta = Math.min(size, delta);
		var instr = new String();
		var dropInstr = new String();
		var priorInstr = new String();
		for (int i = 1; i &lt; localDelta ; i++) { 
			instr = codeFragment.get(i-1) +
					&quot; else &quot; + basicInstructions.get(i);
			codeFragment.add(instr);
		}
		/* now repeat middle stage if size &lt; delta 
		 * otherwise, this for loop will be skipped
		 */
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { 
			instr = codeFragment.get(i-1);
			codeFragment.add(instr);
		}
		/* The first Instruction has been repeated
		 * delta times. Now it gets removed from
		 * the pipeline. E.g., with delta = 3 and
		 * size = 3
		 *  a &lt;-- dropInstr
		 *  ab
		 *  abc &lt;-- priorInstr
		 *  bc &lt;-- instr
		 */

		/* Now loop through dropping old instructions
		 * and adding new ones for size - localDelta times.
		 * This loop will be skipped if size = localDelta.
		 */
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { 
			priorInstr = codeFragment.get(i-1);
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);
			codeFragment.add(instr);
		}
		/* Now loop through dropping old instructions, draining
		 * the pipleline.
		 */
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { 
			priorInstr = codeFragment.get(i-1);
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);
			codeFragment.add(instr);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLveV90yEe2-WKuFT59MHQ" name="getBaseInstruction" specification="_qMSzgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLveWN0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLveWd0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLveWt0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLveW90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();
		if (coordinator.equals(src)) {
			/* push instruction */
			instr += ifHas(flow,src,snk) + push(flow,src,snk);
		} else {
			/* pull instruction */
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);
		}
		return instr;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLwFYN0yEe2-WKuFT59MHQ" name="push" specification="_qMXE8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLwFYd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLwFYt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLwFY90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLwFZN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLwscN0yEe2-WKuFT59MHQ" name="pull" specification="_qMY6IN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLwscd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLwsct0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLwsc90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLwsdN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLxTgN0yEe2-WKuFT59MHQ" name="ifHas" specification="_qMaIQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLxTgd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxTgt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxTg90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxThN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLxThd0yEe2-WKuFT59MHQ" name="ifNotHas" specification="_qMavUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLxTht0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxTh90yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxTiN0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxTid0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLxTit0yEe2-WKuFT59MHQ" name="wait" specification="_qMbWYd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLxTi90yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLxTjN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLxTjd0yEe2-WKuFT59MHQ" name="sleep" specification="_qMb9cN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLxTjt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;
		return instruction;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLx6kN0yEe2-WKuFT59MHQ" name="reportIfDifferentCoordinators" specification="_rGys4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLx6kd0yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;
		var coordinatorNames = this.coordinator;
		if (coordinators.size() > 1) {
			for (int i = 1 ; i &lt; coordinators.size(); i++) {
				if (!this.coordinator.equals(coordinators.get(i))) {
					coordinatorNames += &quot;, &quot; + coordinators.get(i);
					numUniqueCoordinators++;
				}
			}
			if (numUniqueCoordinators > 1) {
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, 
						numUniqueCoordinators, this.coordinator, coordinatorNames);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLyhoN0yEe2-WKuFT59MHQ" name="multipleCoordinators" specification="_rGzT8d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLyhod0yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLyhot0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (coordinators.size() > 1) {
			for (int i = 1 ; i &lt; coordinators.size(); i++) {
				if (!this.coordinator.equals(coordinators.get(i))) {
					result = true;
				}
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qMEKAN0yEe2-WKuFT59MHQ" name="CodeFragment" visibility="package" method="_rLu3Rt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qMFYIN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qMFYId0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNJzmt0yEe2-WKuFT59MHQ">
                  <body>Constructor generates a SLEEP instruction for the
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qMFYIt0yEe2-WKuFT59MHQ" type="_qLwoAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qMIbcN0yEe2-WKuFT59MHQ" name="getCoordinator" method="_rLveUN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNKaoN0yEe2-WKuFT59MHQ">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_qMJpkN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMJpkd0yEe2-WKuFT59MHQ" name="instructions" method="_rLveUt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNKaod0yEe2-WKuFT59MHQ">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGys4d0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qMMF0N0yEe2-WKuFT59MHQ" name="size" method="_rLveVN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNKaot0yEe2-WKuFT59MHQ">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_qMMs4N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMMs4d0yEe2-WKuFT59MHQ" name="generateCodeFragment" visibility="private" method="_rLveVt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qMSzgN0yEe2-WKuFT59MHQ" name="getBaseInstruction" visibility="private" method="_rLveV90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMTakN0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMUosN0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMUosd0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMVPwN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMXE8N0yEe2-WKuFT59MHQ" name="push" visibility="private" method="_rLwFYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMXE8d0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMXsAN0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMYTEN0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMYTEd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMY6IN0yEe2-WKuFT59MHQ" name="pull" visibility="private" method="_rLwscN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMZhMN0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMZhMd0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMZhMt0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMZhM90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMaIQN0yEe2-WKuFT59MHQ" name="ifHas" visibility="private" method="_rLxTgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMaIQd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMaIQt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMaIQ90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMaIRN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMavUN0yEe2-WKuFT59MHQ" name="ifNotHas" visibility="private" method="_rLxThd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMavUd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMavUt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMavU90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMbWYN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMbWYd0yEe2-WKuFT59MHQ" name="wait" method="_rLxTit0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMbWYt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMbWY90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qMb9cN0yEe2-WKuFT59MHQ" name="sleep" isStatic="true" method="_rLxTjd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qMb9cd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGxewN0yEe2-WKuFT59MHQ" name="CodeFragment" visibility="package" method="_rLu3SN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rGxexd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rGxext0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNJzm90yEe2-WKuFT59MHQ">
                  <body>Constructor generates DSL instructions to transmit
	 * the data over edges using the coordinator and channel
	 * to determine the type of instruction and delta to 
	 * determine the number of times each instructions must
	 * be attempted.
	 * 
	 * @param delta
	 * @param edges
	 * @param coordinators
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGxewd0yEe2-WKuFT59MHQ" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGxewt0yEe2-WKuFT59MHQ" name="edges" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGxew90yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGxexN0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGxex90yEe2-WKuFT59MHQ" type="_qLwoAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGys4t0yEe2-WKuFT59MHQ" name="reportIfDifferentCoordinators" visibility="private" method="_rLx6kN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGys490yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGzT8d0yEe2-WKuFT59MHQ" name="multipleCoordinators" visibility="private" method="_rLyhoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGzT8t0yEe2-WKuFT59MHQ" name="coordinators" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGzT890yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qMg18N0yEe2-WKuFT59MHQ" name="CombinedActivation">
              <generalization xmi:id="_rAU4g90yEe2-WKuFT59MHQ" general="_qI2d8N0yEe2-WKuFT59MHQ"/>
              <interfaceRealization xmi:id="_rG0iEN0yEe2-WKuFT59MHQ" client="_qMg18N0yEe2-WKuFT59MHQ" supplier="_rGntwN0yEe2-WKuFT59MHQ" contract="_rGntwN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLyho90yEe2-WKuFT59MHQ" name="CombinedActivation" specification="_qMj5QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLyhpN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLyhpd0yEe2-WKuFT59MHQ" type="_qMg18N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(name);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLyhpt0yEe2-WKuFT59MHQ" name="CombinedActivation" specification="_rAROIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLyhp90yEe2-WKuFT59MHQ" name="elem" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLyhqN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLyhqd0yEe2-WKuFT59MHQ" type="_qMg18N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLyhqt0yEe2-WKuFT59MHQ" name="CombinedActivation" specification="_rATDUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLyhq90yEe2-WKuFT59MHQ" name="priorEntry" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLyhrN0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLyhrd0yEe2-WKuFT59MHQ" type="_qMg18N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry 
		 * and next as subObjects. The new name is 
		 * &quot;PriorName + NextName&quot;. 
		 */
		super(priorEntry,next.getLastUpdateTime());
		String combinedName = 
				priorEntry.getName() + &quot;+&quot; + next.getName();
		/* initially, this will be a clone of priorEntry */;
		/* now update its name and add relevant attributes from next */
		this.setName(combinedName);
		this.addSubObject(priorEntry);
		this.addSubObject(next);
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());
		this.setEndTime(endTime);
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());
		this.setStartTime(startTime);
		this.addEdges(next.getEdges());
		this.addCoordinators(next.getCoordinators());
		this.addConflicts(next.getConflicts());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzIsN0yEe2-WKuFT59MHQ" name="canCombine" specification="_rAURcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzIsd0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzIst0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;
		/* make sure a2 is not null */
		if (a2 != null) {
			var newEntryCoordinator = a2.getCoordinators().get(0);
			if (getCoordinators().contains(newEntryCoordinator)) {
				/* The (first) coordinator of the newEntry
				 * is in the list of coordinators of the prior entry.
				 * Thus, these two can be combined for efficiency 
				 */

				result = true;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qMj5QN0yEe2-WKuFT59MHQ" name="CombinedActivation" visibility="package" method="_rLyho90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qMoKsN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qMoKsd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qMlucN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qMoxwN0yEe2-WKuFT59MHQ" type="_qMg18N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAROIN0yEe2-WKuFT59MHQ" name="CombinedActivation" visibility="package" method="_rLyhpt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAScQN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAScQd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAR1MN0yEe2-WKuFT59MHQ" name="elem" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAR1Md0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rAScQt0yEe2-WKuFT59MHQ" type="_qMg18N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rATDUN0yEe2-WKuFT59MHQ" name="CombinedActivation" visibility="package" method="_rLyhqt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rATqYN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rATqYd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rATDUd0yEe2-WKuFT59MHQ" name="priorEntry" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rATDUt0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rATqYt0yEe2-WKuFT59MHQ" type="_qMg18N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAURcN0yEe2-WKuFT59MHQ" name="canCombine" method="_rLzIsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAURcd0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAURct0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qMrOAN0yEe2-WKuFT59MHQ" name="CommunicationGraph">
              <ownedComment xmi:id="_rNKao90yEe2-WKuFT59MHQ">
                <body>@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_rAXUx90yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rIy4AN0yEe2-WKuFT59MHQ" name="wfm" visibility="package" type="_qNr6oN0yEe2-WKuFT59MHQ" association="_rOyLQ90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI0GIN0yEe2-WKuFT59MHQ" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI0GIt0yEe2-WKuFT59MHQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI0tMd0yEe2-WKuFT59MHQ" name="workLoad" visibility="package" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rOyyUd0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzIs90yEe2-WKuFT59MHQ" name="CommunicationGraph" specification="_rAWGoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzItN0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzItd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzItt0yEe2-WKuFT59MHQ" type="_qMrOAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class
		super(fm, workLoad, &quot;.wf&quot;);
		this.wfm = fm;
		this.workLoad = workLoad;
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzIt90yEe2-WKuFT59MHQ" name="CommunicationGraph" specification="_rAWttN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzIuN0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzIud0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzIut0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rLzIu90yEe2-WKuFT59MHQ" type="_qMrOAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class
		super(fm, workLoad, &quot;.wf&quot;);
		this.wfm = fm;
		this.workLoad = workLoad;
		this.verbose = verbose; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzIvN0yEe2-WKuFT59MHQ" name="createHeader" specification="_qMu4YN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzIvd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));
		return header;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzvwN0yEe2-WKuFT59MHQ" name="createFooter" specification="_qM1mEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzvwd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
		footer.add(&quot;}\n&quot;);
		return footer;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzvwt0yEe2-WKuFT59MHQ" name="visualization" specification="_qM4CUt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzvw90yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
     String line = String.format(
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,
     	String.valueOf(workLoad.getMinPacketReceptionRate()),
     	String.valueOf(workLoad.getE2e()));
     content.add(line);
     var flowNames = workLoad.getFlowNames();
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {
         var flowName = flowNames[flowIndex];
         var nodesInFlow = workLoad.getNodesInFlow(flowName);
         var nNodesInFlow = (nodesInFlow.length);
         /* array of communications costs per link */
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); 
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);
         var minCost = nNodesInFlow - 1 ;
         /*
          * nEdges in the flow is the minimum communication cost, 
          * i.e., min nTx to go E2E with no errors
          */
         line = String.format(
         		&quot;// Flow %s has a minimum communication cost of %d &quot;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, 
         		flowName, minCost, totalCost);
         content.add(line);
         line = String.format(
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, 
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), 
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); 
         String nodeName;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  
             nodeName = nodesInFlow[i];
             var nTx = linkCostArray[i];
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); 
             /* This version of the file has nTx in the edges of the flow */
         }
         nodeName = nodesInFlow[nNodesInFlow-1];
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow
         content.add(line);
     }
     return content;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzvxN0yEe2-WKuFT59MHQ" name="createWarpFileContent" specification="_qM5Qct0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzvxd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();
     if (verbose) {
     	System.out.println(&quot;************************************&quot;);
     	System.out.println(&quot;Warp File Contents:&quot;);
     	System.out.println(wfFileContents);
     	System.out.println(&quot;************************************\n&quot;);
     }
     return wfFileContents;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qMu4YN0yEe2-WKuFT59MHQ" name="createHeader" method="_rLzIvN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAXUxN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qM1mEN0yEe2-WKuFT59MHQ" name="createFooter" method="_rLzvwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAXUxd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qM4CUt0yEe2-WKuFT59MHQ" name="visualization" method="_rLzvwt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAXUxt0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qM5Qct0yEe2-WKuFT59MHQ" name="createWarpFileContent" method="_rLzvxN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qM5Qc90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rAWGoN0yEe2-WKuFT59MHQ" name="CommunicationGraph" method="_rLzIs90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAWtsd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAWtst0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAWGod0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAWtsN0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAWts90yEe2-WKuFT59MHQ" type="_qMrOAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAWttN0yEe2-WKuFT59MHQ" name="CommunicationGraph" method="_rLzIt90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAXUwd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAXUwt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAWttd0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAWttt0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAXUwN0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rAXUw90yEe2-WKuFT59MHQ" type="_qMrOAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qM860N0yEe2-WKuFT59MHQ" name="ConnectivityPoset">
              <ownedComment xmi:id="_rNKapN0yEe2-WKuFT59MHQ">
                <body>ConnectivityPoset extends Poset by selecting
primary coordinator in the flow based on highest
global connectivity.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_rAeCct0yEe2-WKuFT59MHQ" general="_qQNDIN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzvxt0yEe2-WKuFT59MHQ" name="ConnectivityPoset" specification="_rAdbYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzvx90yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzvyN0yEe2-WKuFT59MHQ" type="_qM860N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(workload);
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rLzvyd0yEe2-WKuFT59MHQ" name="findCoordinator" specification="_rG1wMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rLzvyt0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rLzvy90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;
		var maxConnections = 0;
		var size = nodesInFlow.size();
		for (Integer i = 0; i &lt; size; i++) {
			/* get the #connections for this node from the
			 * connectivity Map and see if it is the max so far
			 * if so, store its index in the flow
			 */
			var node = nodesInFlow.get(i);
			var numConnections = nodeConnectivityMap.get(node.getName());
			if (numConnections > maxConnections) {
				maxConnections = numConnections;
				coordinatorIndex = i;
			}
		}	
		/* return the index with the largest connectivity */
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rAdbYN0yEe2-WKuFT59MHQ" name="ConnectivityPoset" visibility="package" method="_rLzvxt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rAdbYt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rAeCcN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rAdbYd0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAeCcd0yEe2-WKuFT59MHQ" type="_qM860N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rG1wMN0yEe2-WKuFT59MHQ" name="findCoordinator" visibility="protected" method="_rLzvyd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rG1wMd0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rG1wMt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qNCaYN0yEe2-WKuFT59MHQ" name="DeadlineComparator">
              <interfaceRealization xmi:id="_rG7PwN0yEe2-WKuFT59MHQ" client="_qNCaYN0yEe2-WKuFT59MHQ" supplier="_rAepgN0yEe2-WKuFT59MHQ" contract="_rAepgN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL0W0N0yEe2-WKuFT59MHQ" name="compare" specification="_rG9E8d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL0W0d0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL0W0t0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL0W090yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rG9E8d0yEe2-WKuFT59MHQ" name="compare" method="_rL0W0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rG9E8t0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rG9E890yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rG9sAN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qNLkUN0yEe2-WKuFT59MHQ" name="Description">
              <ownedComment xmi:id="_rNKapd0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_rG-TEN0yEe2-WKuFT59MHQ" general="_q_dV0N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI0tM90yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI1UQN0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL0W1N0yEe2-WKuFT59MHQ" name="Description" specification="_qNNZgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL0W1d0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL0W1t0yEe2-WKuFT59MHQ" name="Description" specification="_qNOAkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL0W190yEe2-WKuFT59MHQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL0W2N0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);
		for (String line : lines) {
			this.add(line+&quot;\n&quot;);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL0W2d0yEe2-WKuFT59MHQ" name="toString" specification="_qNP1wN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL0W2t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();
		for (String row: this) { 
			sb.append(row);
		}
		return sb.toString();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qNNZgN0yEe2-WKuFT59MHQ" name="Description" method="_rL0W1N0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qNNZgd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qNNZgt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qNNZg90yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qNOAkN0yEe2-WKuFT59MHQ" name="Description" method="_rL0W1t0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qNPOsN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qNPOsd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qNOnoN0yEe2-WKuFT59MHQ" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNPOst0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qNP1wN0yEe2-WKuFT59MHQ" name="toString" method="_rL0W2d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qNP1wd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qNRD4N0yEe2-WKuFT59MHQ" name="Edge">
              <generalization xmi:id="_rAjiAt0yEe2-WKuFT59MHQ" general="_qXJ_sN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI1UQd0yEe2-WKuFT59MHQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI1UQt0yEe2-WKuFT59MHQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI1UQ90yEe2-WKuFT59MHQ" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI17UN0yEe2-WKuFT59MHQ" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI17Ud0yEe2-WKuFT59MHQ" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI17Ut0yEe2-WKuFT59MHQ" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI17U90yEe2-WKuFT59MHQ" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI17VN0yEe2-WKuFT59MHQ" name="state" type="_qNTgIN0yEe2-WKuFT59MHQ" association="_rNOFAN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI3wgN0yEe2-WKuFT59MHQ" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rG-6IN0yEe2-WKuFT59MHQ" client="_qNRD4N0yEe2-WKuFT59MHQ" supplier="_rGntwN0yEe2-WKuFT59MHQ" contract="_rGntwN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL0W290yEe2-WKuFT59MHQ" name="Edge" specification="_qNfGUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL0W3N0yEe2-WKuFT59MHQ" type="_qNRD4N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		this.flow = UNKNOWN;
		this.src = UNKNOWN;
		this.snk = UNKNOWN;
		this.instance = 0;
		this.coordinator = UNKNOWN;
		this.state = EdgeState.NOT_READY;
		this.numTx = 0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL094N0yEe2-WKuFT59MHQ" name="Edge" specification="_qNgUcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL094d0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL094t0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL09490yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL095N0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL095d0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL095t0yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL09590yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL096N0yEe2-WKuFT59MHQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL096d0yEe2-WKuFT59MHQ" type="_qNRD4N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);
		this.flow = flow;
		this.src =src;
		this.snk = snk;
		this.instance = 0;
		this.coordinator = UNKNOWN;
		this.state = EdgeState.NOT_READY;	
		this.numTx = numTx;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL096t0yEe2-WKuFT59MHQ" name="compareTo" specification="_rAiT4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL09690yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL097N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL097d0yEe2-WKuFT59MHQ" name="toString" specification="_qNl0AN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL097t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, 
 			this.flow, this.src, this.snk);
     return result;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL09790yEe2-WKuFT59MHQ" name="print" specification="_qNnpMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL098N0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL098d0yEe2-WKuFT59MHQ" name="print" specification="_qNo3Ut0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>super.print();
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qNfGUN0yEe2-WKuFT59MHQ" name="Edge" visibility="package" method="_rL0W290yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qNfGUd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qNfGUt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qNfGU90yEe2-WKuFT59MHQ" type="_qNRD4N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qNgUcN0yEe2-WKuFT59MHQ" name="Edge" visibility="package" method="_rL094N0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qNg7g90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qNhikN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qNgUcd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNgUct0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNgUc90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNgUdN0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNgUdd0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNg7gN0yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNg7gd0yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNg7gt0yEe2-WKuFT59MHQ" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNjXwN0yEe2-WKuFT59MHQ" type="_qNRD4N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qNl0AN0yEe2-WKuFT59MHQ" name="toString" method="_rL097d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qNl0Ad0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qNnpMN0yEe2-WKuFT59MHQ" name="print" method="_rL09790yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qNnpMd0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qNo3Ut0yEe2-WKuFT59MHQ" name="print" method="_rL098d0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_rAiT4N0yEe2-WKuFT59MHQ" name="compareTo" method="_rL096t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAiT4d0yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAi68N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_qNTgIN0yEe2-WKuFT59MHQ" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_qNcqEN0yEe2-WKuFT59MHQ" name="RELEASED"/>
                <ownedLiteral xmi:id="_qNd4MN0yEe2-WKuFT59MHQ" name="EXECUTING"/>
                <ownedLiteral xmi:id="_qNefQN0yEe2-WKuFT59MHQ" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qNr6oN0yEe2-WKuFT59MHQ" name="FileManager">
              <ownedComment xmi:id="_rNXO8N0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rI4XkN0yEe2-WKuFT59MHQ" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI4Xkd0yEe2-WKuFT59MHQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL1k8N0yEe2-WKuFT59MHQ" name="FileManager" specification="_qNvlAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL1k8d0yEe2-WKuFT59MHQ" type="_qNr6oN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the
                                                 // base directory
 // constructor for this class
 verbose = false; // initialize verbose to false
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL1k8t0yEe2-WKuFT59MHQ" name="FileManager" specification="_qNwMEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL1k890yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL1k9N0yEe2-WKuFT59MHQ" type="_qNr6oN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the
                                                 // base directory
 // constructor for this class
 this.verbose = verbose; // initialize verbose as specified

  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL1k9d0yEe2-WKuFT59MHQ" name="getDocumentsDirectory" specification="_qNwMFd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL1k9t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS
 String documentsDirectory;
 if (OSValidator.isWindows()) {
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
 } else if (OSValidator.isMac()) {
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;
 } else { // for all other Unix systems
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not
                                                         // MACOS)
 }
 return documentsDirectory;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL1k990yEe2-WKuFT59MHQ" name="getCurrentDirectory" specification="_qNwMF90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL1k-N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL2MAN0yEe2-WKuFT59MHQ" name="createFile" specification="_qNwzId0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL2MAd0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2MAt0yEe2-WKuFT59MHQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2MA90yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2MBN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
  * we don't actually create the file...it will be created when written to this routine really
  * just creates the file name ;-)
  */
 Integer suffixIndex = file.lastIndexOf('.');
 String fileString = file;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix
 }
 /*
  * fileString has no suffix at this point (removed if it existed) Now add file name extension
  * and suffix
  */
 fileString = fileString + nameExtension + suffix;

 if (verbose) {
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);
 }
 return fileString;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL2zEN0yEe2-WKuFT59MHQ" name="createFile" specification="_qNyBQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL2zEd0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2zEt0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2zE90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');
 String fileString = file;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix
 }
 // fileString has no suffix at this point (removed if it existed)
 // Now add file name extension and suffix
 fileString = fileString + suffix;
 // we don't actually create the file...it will be created when written to
 // this routine really just creates the file name ;-)
 if (verbose) {
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);
 }
 return fileString;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL2zFN0yEe2-WKuFT59MHQ" name="createDirectory" specification="_qN1EkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL2zFd0yEe2-WKuFT59MHQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2zFt0yEe2-WKuFT59MHQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL2zF90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided
   newDirectory = subDirectory; // if subDirectory is a full path, use it.
 } else { // subDirectory has relative path, so just append
   newDirectory = directory + File.separator + subDirectory;
 }
 try {
   Path path = Paths.get(newDirectory);
   Files.createDirectories(path);
   if (verbose) {
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);
   }
 } catch (IOException e) {
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());
   newDirectory = directory; // in case of error, just use the initial directory
 }
 return newDirectory;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL3aIN0yEe2-WKuFT59MHQ" name="writeFile" specification="_qN1rot0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL3aId0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL3aIt0yEe2-WKuFT59MHQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);
 Path fileName = Path.of(file);
 try {
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)
 } catch (IOException e) {
   // handle error
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());
 } // the file will be closed automatically upon exit of this try block
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL3aI90yEe2-WKuFT59MHQ" name="readFile" specification="_qN2Sst0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL3aJN0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL3aJd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;
 Path fileName = Path.of(file);
 String contents = null;
 try {
   contents = Files.readString(fileName);
 } catch (IOException e) {
   // handle error
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());
 } // the file will be closed automatically upon exit of this try block
 return contents;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qNvlAN0yEe2-WKuFT59MHQ" name="FileManager" method="_rL1k8N0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qNvlAd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qNvlAt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNX2AN0yEe2-WKuFT59MHQ">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_qNvlA90yEe2-WKuFT59MHQ" type="_qNr6oN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qNwMEN0yEe2-WKuFT59MHQ" name="FileManager" method="_rL1k8t0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qNwMEt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qNwME90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qNwMEd0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNwMFN0yEe2-WKuFT59MHQ" type="_qNr6oN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qNwMFd0yEe2-WKuFT59MHQ" name="getDocumentsDirectory" method="_rL1k9d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qNwMFt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qNwMF90yEe2-WKuFT59MHQ" name="getCurrentDirectory" method="_rL1k990yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qNwzIN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qNwzId0yEe2-WKuFT59MHQ" name="createFile" method="_rL2MAN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2Ad0yEe2-WKuFT59MHQ">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be
   * added to the base input file name so that all of the output files can be associated with the
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are
   * not identified in the NameExtension All parameters used to create the file, should be listed
   * near the top of the file in the Parameter Section, followed by the file contents.
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_qNwzIt0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNxaMN0yEe2-WKuFT59MHQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNxaMd0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNxaMt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qNyBQN0yEe2-WKuFT59MHQ" name="createFile" method="_rL2zEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qNyBQd0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qNz2cN0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN0dgN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qN1EkN0yEe2-WKuFT59MHQ" name="createDirectory" method="_rL2zFN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qN1Ekd0yEe2-WKuFT59MHQ" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN1roN0yEe2-WKuFT59MHQ" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN1rod0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qN1rot0yEe2-WKuFT59MHQ" name="writeFile" method="_rL3aIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qN2SsN0yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN2Ssd0yEe2-WKuFT59MHQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qN2Sst0yEe2-WKuFT59MHQ" name="readFile" method="_rL3aI90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qN2Ss90yEe2-WKuFT59MHQ" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN2StN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qN3g0N0yEe2-WKuFT59MHQ" name="Flow">
              <ownedComment xmi:id="_rNX2At0yEe2-WKuFT59MHQ">
                <body>The Flow class is a constructor class that helps create the schedule for each node and edge in WARP.
Some of the default values in Flow can be adjusted to conform to different E2E reliability targets.

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_rAw9Yt0yEe2-WKuFT59MHQ" general="_qXJ_sN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI4-od0yEe2-WKuFT59MHQ" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI5lsN0yEe2-WKuFT59MHQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI6MwN0yEe2-WKuFT59MHQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI6Mwd0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI6Mwt0yEe2-WKuFT59MHQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI6Mw90yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI6MxN0yEe2-WKuFT59MHQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI6Mxd0yEe2-WKuFT59MHQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI6z0N0yEe2-WKuFT59MHQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI7a4N0yEe2-WKuFT59MHQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI7a4d0yEe2-WKuFT59MHQ" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI7a4t0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI8B8N0yEe2-WKuFT59MHQ" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rI8B8d0yEe2-WKuFT59MHQ" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI8B890yEe2-WKuFT59MHQ" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI8pAN0yEe2-WKuFT59MHQ" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rI8pAt0yEe2-WKuFT59MHQ" name="nodes" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rOzZYN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI93Id0yEe2-WKuFT59MHQ" name="linkTxAndTotalCost" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rOzZY90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI-eMd0yEe2-WKuFT59MHQ" name="edges" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rO0Acd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI_FQd0yEe2-WKuFT59MHQ" name="nodePredecessor" visibility="package" type="_qPji4N0yEe2-WKuFT59MHQ" association="_rO0ngd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rI_FQ90yEe2-WKuFT59MHQ" name="edgePredecessor" visibility="package" type="_qNRD4N0yEe2-WKuFT59MHQ" association="_rO0nhN0yEe2-WKuFT59MHQ"/>
              <interfaceRealization xmi:id="_rHAIQN0yEe2-WKuFT59MHQ" client="_qN3g0N0yEe2-WKuFT59MHQ" supplier="_rGntwN0yEe2-WKuFT59MHQ" contract="_rGntwN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL3aJt0yEe2-WKuFT59MHQ" name="Flow" specification="_qN8ZUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL3aJ90yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL3aKN0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL3aKd0yEe2-WKuFT59MHQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL3aKt0yEe2-WKuFT59MHQ" type="_qN3g0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);
 	this.index = index;
     /*
      *  Default numTxPerLink is 1 transmission per link. Will be updated based
      *  on flow updated based on flow length and reliability parameters
      */
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; 
     this.nodes = new ArrayList&lt;>();
     this.edges  = new ArrayList&lt;>();
     this.linkTxAndTotalCost = new ArrayList&lt;>();
     this.edges = new ArrayList&lt;>();	
     this.nodePredecessor = null;
     this.edgePredecessor = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL3aK90yEe2-WKuFT59MHQ" name="Flow" specification="_qN-OgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL3aLN0yEe2-WKuFT59MHQ" type="_qN3g0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
 	this.index = DEFAULT_INDEX;
 	/*
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based
 	 *  on flow updated based on flow length and reliability parameters
 	 */
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; 
 	this.nodes = new ArrayList&lt;>();
 	this.linkTxAndTotalCost = new ArrayList&lt;>();
 	this.edges = new ArrayList&lt;>();
 	this.nodePredecessor = null;
     this.edgePredecessor = null;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4BMN0yEe2-WKuFT59MHQ" name="getInitialPriority" specification="_qN-1k90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4BMd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4BMt0yEe2-WKuFT59MHQ" name="getIndex" specification="_qN-1ld0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4BM90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4BNN0yEe2-WKuFT59MHQ" name="getNumTxPerLink" specification="_qOBR0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4BNd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4BNt0yEe2-WKuFT59MHQ" name="getNodes" specification="_qOEVIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4BN90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return nodes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4BON0yEe2-WKuFT59MHQ" name="getEdges" specification="_qOH_gN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4BOd0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return edges;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4BOt0yEe2-WKuFT59MHQ" name="addEdge" specification="_rAsE4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4BO90yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */
		edge.setPredecessor(edgePredecessor);
		edges.add(edge);
		/* update predecessor for next edge added */
		edgePredecessor = edge;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4oQN0yEe2-WKuFT59MHQ" name="addNode" specification="_rAsr8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4oQd0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */
		node.setPredecessor(nodePredecessor);
		nodes.add(node);
		/* update predecessor for next edge added */
		nodePredecessor = node;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4oQt0yEe2-WKuFT59MHQ" name="getLinkTxAndTotalCost" specification="_qOM4AN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4oQ90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4oRN0yEe2-WKuFT59MHQ" name="setInitialPriority" specification="_qOS-oN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4oRd0yEe2-WKuFT59MHQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4oRt0yEe2-WKuFT59MHQ" name="setIndex" specification="_qOUMwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4oR90yEe2-WKuFT59MHQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4oSN0yEe2-WKuFT59MHQ" name="setNumTxPerLink" specification="_qOVa4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4oSd0yEe2-WKuFT59MHQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL4oSt0yEe2-WKuFT59MHQ" name="setNodes" specification="_rHBWY90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL4oS90yEe2-WKuFT59MHQ" name="nodes" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.nodes = nodes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL5PUN0yEe2-WKuFT59MHQ" name="setLinkTxAndTotalCost" specification="_rHCkgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL5PUd0yEe2-WKuFT59MHQ" name="linkTxAndTotalCost" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL5PUt0yEe2-WKuFT59MHQ" name="compareTo" specification="_rAt6EN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL5PU90yEe2-WKuFT59MHQ" name="flow" type="_qN3g0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL5PVN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL5PVd0yEe2-WKuFT59MHQ" name="toString" specification="_qOWB8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL5PVt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qN8ZUN0yEe2-WKuFT59MHQ" name="Flow" visibility="package" method="_rL3aJt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qN9ncN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qN9ncd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNX2A90yEe2-WKuFT59MHQ">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_qN9AYN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN9AYd0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN9AYt0yEe2-WKuFT59MHQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qN9nct0yEe2-WKuFT59MHQ" type="_qN3g0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qN-OgN0yEe2-WKuFT59MHQ" name="Flow" visibility="package" method="_rL3aK90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qN-1kN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qN-1kd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNX2BN0yEe2-WKuFT59MHQ">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_qN-1kt0yEe2-WKuFT59MHQ" type="_qN3g0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qN-1k90yEe2-WKuFT59MHQ" name="getInitialPriority" method="_rL4BMN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2Bd0yEe2-WKuFT59MHQ">
                  <body>getInitialPriority returns an Integer that is the value stored in
	 * initialPriority.
	 * 
	 * @return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_qN-1lN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qN-1ld0yEe2-WKuFT59MHQ" name="getIndex" method="_rL4BMt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2Bt0yEe2-WKuFT59MHQ">
                  <body>getIndex returns an Integer of whatever the current index is.
	 * 
	 * @return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_qOADsN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOBR0N0yEe2-WKuFT59MHQ" name="getNumTxPerLink" method="_rL4BNN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2B90yEe2-WKuFT59MHQ">
                  <body>getNumTxPerLink returns the current numTxPerLink value which dictates the
	 * number of transmissions per link.
	 * 
	 * @return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_qOBR0d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOEVIN0yEe2-WKuFT59MHQ" name="getNodes" method="_rL4BNt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2CN0yEe2-WKuFT59MHQ">
                  <body>getNodes returns an ArrayList of the nodes.
	 * 
	 * @return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHBWYN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qOH_gN0yEe2-WKuFT59MHQ" name="getEdges" method="_rL4BON0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2Cd0yEe2-WKuFT59MHQ">
                  <body>getEdges returns an ArrayList of the edges.
	 * @return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHBWYd0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qOM4AN0yEe2-WKuFT59MHQ" name="getLinkTxAndTotalCost" method="_rL4oQt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2DN0yEe2-WKuFT59MHQ">
                  <body>getLinkTxAndTotalCost returns the ArrayList linkTxAndTotalCost.
	 * 
	 * @return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHBWYt0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qOS-oN0yEe2-WKuFT59MHQ" name="setInitialPriority" method="_rL4oRN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2Dd0yEe2-WKuFT59MHQ">
                  <body>setInitialPriority updates the constructor's priority.
	 * 
	 * @param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qOTlsN0yEe2-WKuFT59MHQ" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOUMwN0yEe2-WKuFT59MHQ" name="setIndex" method="_rL4oRt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNYdEN0yEe2-WKuFT59MHQ">
                  <body>setIndex updates the index.
	 * 
	 * @param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qOUz0N0yEe2-WKuFT59MHQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOVa4N0yEe2-WKuFT59MHQ" name="setNumTxPerLink" method="_rL4oSN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNYdEd0yEe2-WKuFT59MHQ">
                  <body>setNumTxPerLink updates the numTxPerLink.
	 * 
	 * @param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qOVa4d0yEe2-WKuFT59MHQ" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOWB8N0yEe2-WKuFT59MHQ" name="toString" method="_rL5PVd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOWpAN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rAsE4N0yEe2-WKuFT59MHQ" name="addEdge" method="_rL4BOt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2Ct0yEe2-WKuFT59MHQ">
                  <body>addEdge adds an edge to the flow.
	 * uses edgePredecessor to add the new edge to the end of the ArrayList
	 * 
	 * @param edge is the edge that is being added</body>
                </ownedComment>
                <ownedParameter xmi:id="_rAsE4d0yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAsr8N0yEe2-WKuFT59MHQ" name="addNode" method="_rL4oQN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNX2C90yEe2-WKuFT59MHQ">
                  <body>addNode adds a node to the flow.
	 * uses nodePredecessor to add the new node to the end of the ArrayList
	 * 
	 * @param node is the node that is being added</body>
                </ownedComment>
                <ownedParameter xmi:id="_rAtTAN0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rAt6EN0yEe2-WKuFT59MHQ" name="compareTo" method="_rL5PUt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rAt6Ed0yEe2-WKuFT59MHQ" name="flow" type="_qN3g0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rAvvQN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rHBWY90yEe2-WKuFT59MHQ" name="setNodes" method="_rL4oSt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNYdEt0yEe2-WKuFT59MHQ">
                  <body>setNodes updates nodes and take an ArrayList as its parameter.
	 * 
	 * @param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHBWZN0yEe2-WKuFT59MHQ" name="nodes" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHCkgN0yEe2-WKuFT59MHQ" name="setLinkTxAndTotalCost" method="_rL5PUN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNYdE90yEe2-WKuFT59MHQ">
                  <body>setLinkTxAndTotalCost takes an ArrayList and sets the linkTxAndTotalCost.
	 * 
	 * @param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHCkgd0yEe2-WKuFT59MHQ" name="linkTxAndTotalCost" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qOek0N0yEe2-WKuFT59MHQ" name="FlowMap">
              <ownedComment xmi:id="_rNYdFN0yEe2-WKuFT59MHQ">
                <body>FlowMap creates a mapping from flow name to 
flow object (&lt;name, Flow>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_rA0nwN0yEe2-WKuFT59MHQ" general="_qHwRwN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJATYN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJATYd0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qOiPMN0yEe2-WKuFT59MHQ" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_rNYdFd0yEe2-WKuFT59MHQ">
                <body>FlowNodeToActivationMap creates a mapping from flow node  
to an activation (&lt;Node, Activation>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_rA114N0yEe2-WKuFT59MHQ" general="_qHwRwN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJATYt0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJA6cN0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qOi2QN0yEe2-WKuFT59MHQ" name="GraphViz">
              <ownedComment xmi:id="_rNYdFt0yEe2-WKuFT59MHQ">
                <body>@author sgoddard2
Copyright © 2020 Steve Goddard. All rights reserved.
 *</body>
              </ownedComment>
              <generalization xmi:id="_rA3rEt0yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJA6cd0yEe2-WKuFT59MHQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJA6ct0yEe2-WKuFT59MHQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJA6c90yEe2-WKuFT59MHQ" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJA6dN0yEe2-WKuFT59MHQ" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJA6dd0yEe2-WKuFT59MHQ" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJBhgd0yEe2-WKuFT59MHQ" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJBhg90yEe2-WKuFT59MHQ" name="wfm" visibility="package" type="_qNr6oN0yEe2-WKuFT59MHQ" association="_rO1Okd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJCIkN0yEe2-WKuFT59MHQ" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJCIkt0yEe2-WKuFT59MHQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJCIlN0yEe2-WKuFT59MHQ" name="gv" visibility="package" type="_qOi2QN0yEe2-WKuFT59MHQ" association="_rO11od0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL5PV90yEe2-WKuFT59MHQ" name="GraphViz" specification="_rA2c8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL5PWN0yEe2-WKuFT59MHQ" name="wfm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL5PWd0yEe2-WKuFT59MHQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL5PWt0yEe2-WKuFT59MHQ" type="_qOi2QN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor
     this.wfm = wfm; // used to access the basic WARP file management functions
     this.graphFile = graphFile;
     this.gv = this;
     verbose = false;
     createGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL52YN0yEe2-WKuFT59MHQ" name="GraphViz" specification="_rA3EA90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL52Yd0yEe2-WKuFT59MHQ" name="wfm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL52Yt0yEe2-WKuFT59MHQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL52Y90yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL52ZN0yEe2-WKuFT59MHQ" type="_qOi2QN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor
     this.wfm = wfm; // used to access the basic WARP file management functions
     this.graphFile = graphFile;
     this.gv = this;
     this.verbose = verbose;
     createGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL52Zd0yEe2-WKuFT59MHQ" name="visualization" specification="_qOkrcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL52Zt0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL52Z90yEe2-WKuFT59MHQ" name="initializeGraphVizContent" specification="_qOmgoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL52aN0yEe2-WKuFT59MHQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);
     /* remove 'strict' if multiple edges in the same direction are to be shown */
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.
     /* 
      * create a title caption for the rendered graph in the .gv file
      * label string is in html format, so need an end delimeter after adding flows
      */
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL52ad0yEe2-WKuFT59MHQ" name="finalizeGraphVizContent" specification="_qOpj8N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>/* 
      * wrap up the gv file content by finalizing title caption
      * then add it to the file contents and terminate the graph viz structure
      */
     gvTitleCaption += &quot;>\n&quot;;
     /* 
      * end the gv file by adding the caption for rendering and the last line 
      * to the contents string
      */
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL52at0yEe2-WKuFT59MHQ" name="getGraphVizContent" specification="_qOpj8d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL52a90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7EgN0yEe2-WKuFT59MHQ" name="createGraphVizContent" specification="_qOqLAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7Egd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
 	 * GraphVizListener reads the graphFile string and calls the functions
 	 * in this class, as it walks the input graphFile structure to build
 	 * the GraphViz contents.
 	 */
     GraphVizListener.buildGraphViz(gv); 
     if (verbose) {
     	System.out.println(&quot;************************************&quot;);
     	System.out.println(&quot;GraphViz File Contents:&quot;);
     	System.out.println(getGraphVizContent());
     	System.out.println(&quot;************************************\n&quot;);
     }
     return getGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7Egt0yEe2-WKuFT59MHQ" name="addFlowToGraphViz" specification="_qOqLAt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7Eg90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */
     gvFileContents = gvFileContents + &quot;   &quot;;  
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7EhN0yEe2-WKuFT59MHQ" name="addSrcNodeToGraphViz" specification="_qOqyEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7Ehd0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);
 	addNodeName(fileContents,titleCaption);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7Eht0yEe2-WKuFT59MHQ" name="addSnkNodeToGraphViz" specification="_qOrZIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7Eh90yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);
 	addNodeName(fileContents,titleCaption);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7EiN0yEe2-WKuFT59MHQ" name="finalizeCurrentFlowInGraphViz" specification="_qOuccN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */
     gvFileContents = gvFileContents + &quot;; \n&quot; ;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7rkN0yEe2-WKuFT59MHQ" name="addNodeName" specification="_qOuccd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7rkd0yEe2-WKuFT59MHQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL7rkt0yEe2-WKuFT59MHQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */
     gvFileContents += fileContents;  
     /* add the node name and edge to this line of the rendered graph caption */
     gvTitleCaption += titleCaption;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qOkrcN0yEe2-WKuFT59MHQ" name="visualization" method="_rL52Zd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rA3rEd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qOmgoN0yEe2-WKuFT59MHQ" name="initializeGraphVizContent" method="_rL52Z90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOoV0N0yEe2-WKuFT59MHQ" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOpj8N0yEe2-WKuFT59MHQ" name="finalizeGraphVizContent" method="_rL52ad0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qOpj8d0yEe2-WKuFT59MHQ" name="getGraphVizContent" method="_rL52at0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNYdF90yEe2-WKuFT59MHQ">
                  <body>public function to return the string gvFileContents.
     * designed to be called after finalizeGraphVizContent() is called by the listener
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_qOpj8t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOqLAN0yEe2-WKuFT59MHQ" name="createGraphVizContent" method="_rL7EgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOqLAd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOqLAt0yEe2-WKuFT59MHQ" name="addFlowToGraphViz" method="_rL7Egt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOqLA90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOqyEN0yEe2-WKuFT59MHQ" name="addSrcNodeToGraphViz" method="_rL7EhN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOqyEd0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOrZIN0yEe2-WKuFT59MHQ" name="addSnkNodeToGraphViz" method="_rL7Eht0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOtOUN0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qOuccN0yEe2-WKuFT59MHQ" name="finalizeCurrentFlowInGraphViz" method="_rL7EiN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qOuccd0yEe2-WKuFT59MHQ" name="addNodeName" visibility="private" method="_rL7rkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qOucct0yEe2-WKuFT59MHQ" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qOvDgN0yEe2-WKuFT59MHQ" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rA2c8N0yEe2-WKuFT59MHQ" name="GraphViz" visibility="package" method="_rL5PV90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rA3EAN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rA3EAd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rA2c8d0yEe2-WKuFT59MHQ" name="wfm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rA2c8t0yEe2-WKuFT59MHQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rA3EAt0yEe2-WKuFT59MHQ" type="_qOi2QN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rA3EA90yEe2-WKuFT59MHQ" name="GraphViz" visibility="package" method="_rL52YN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rA3EB90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rA3ECN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rA3EBN0yEe2-WKuFT59MHQ" name="wfm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rA3EBd0yEe2-WKuFT59MHQ" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rA3EBt0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rA3rEN0yEe2-WKuFT59MHQ" type="_qOi2QN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qOw4sN0yEe2-WKuFT59MHQ" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_rNYdGN0yEe2-WKuFT59MHQ">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.
GraphVizListener reads the graphFile string and calls the functions
in this class, as it walks the input graphFile structure to build
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_rHDyoN0yEe2-WKuFT59MHQ" general="_rA-Yw90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJCvod0yEe2-WKuFT59MHQ" name="gv" visibility="package" type="_qOi2QN0yEe2-WKuFT59MHQ" association="_rO2csN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7rk90yEe2-WKuFT59MHQ" name="GraphVizListener" specification="_rBCqMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7rlN0yEe2-WKuFT59MHQ" name="gv" type="_qOi2QN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rL7rld0yEe2-WKuFT59MHQ" type="_qOw4sN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object
  // Read input file and build AST of graphFile
     try {
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);
     	var lexer = new WARPLexer(inputGraph);
     	var tokens = new CommonTokenStream(lexer);
     	var parser = new WARPParser(tokens);
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens
     	warp.walk(this, warpTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7rlt0yEe2-WKuFT59MHQ" name="buildGraphViz" specification="_rBEfYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7rl90yEe2-WKuFT59MHQ" name="gv" type="_qOi2QN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>/*
 	 * Create the listener object, which will read the workLoad 
 	 * description and then buid the node and flow objects that
 	 * instantiates the workLoad. This object is not needed
 	 * after that.
 	 */
 	new GraphVizListener(gv); 
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL7rmN0yEe2-WKuFT59MHQ" name="enterWarpName" specification="_rBG7oN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL7rmd0yEe2-WKuFT59MHQ" name="ctx" type="_rBFGcd0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name
     gv.initializeGraphVizContent(graphName); // start creating the gv file content
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL8SoN0yEe2-WKuFT59MHQ" name="exitWarp" specification="_rBNCQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL8Sod0yEe2-WKuFT59MHQ" name="ctx" type="_rBKmAd0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL8Sot0yEe2-WKuFT59MHQ" name="enterFlowName" specification="_rBU-EN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL8So90yEe2-WKuFT59MHQ" name="ctx" type="_rBSh0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();
     gv.addFlowToGraphViz(currentFlow);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL8SpN0yEe2-WKuFT59MHQ" name="exitSrcNode" specification="_rBZ2kd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL8Spd0yEe2-WKuFT59MHQ" name="ctx" type="_rBYoct0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name
     gv.addSrcNodeToGraphViz(nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL8Spt0yEe2-WKuFT59MHQ" name="exitSnkNode" specification="_rBbrwd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL8Sp90yEe2-WKuFT59MHQ" name="ctx" type="_rBado90yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name
     gv.addSnkNodeToGraphViz(nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL85sN0yEe2-WKuFT59MHQ" name="exitFlow" specification="_rBgkQd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL85sd0yEe2-WKuFT59MHQ" name="ctx" type="_rBfWIN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rBCqMN0yEe2-WKuFT59MHQ" name="GraphVizListener" visibility="private" method="_rL7rk90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rBCqMt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rBCqM90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rBCqMd0yEe2-WKuFT59MHQ" name="gv" type="_qOi2QN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rBCqNN0yEe2-WKuFT59MHQ" type="_qOw4sN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBEfYN0yEe2-WKuFT59MHQ" name="buildGraphViz" isStatic="true" method="_rL7rlt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBFGcN0yEe2-WKuFT59MHQ" name="gv" type="_qOi2QN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBG7oN0yEe2-WKuFT59MHQ" name="enterWarpName" method="_rL7rmN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBG7od0yEe2-WKuFT59MHQ" name="ctx" type="_rBFGcd0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBNCQN0yEe2-WKuFT59MHQ" name="exitWarp" method="_rL8SoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBNCQd0yEe2-WKuFT59MHQ" name="ctx" type="_rBKmAd0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBU-EN0yEe2-WKuFT59MHQ" name="enterFlowName" method="_rL8Sot0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBVlIN0yEe2-WKuFT59MHQ" name="ctx" type="_rBSh0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBZ2kd0yEe2-WKuFT59MHQ" name="exitSrcNode" method="_rL8SpN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBZ2kt0yEe2-WKuFT59MHQ" name="ctx" type="_rBYoct0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBbrwd0yEe2-WKuFT59MHQ" name="exitSnkNode" method="_rL8Spt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBbrwt0yEe2-WKuFT59MHQ" name="ctx" type="_rBado90yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rBgkQd0yEe2-WKuFT59MHQ" name="exitFlow" method="_rL85sN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rBhLUN0yEe2-WKuFT59MHQ" name="ctx" type="_rBfWIN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qOz8AN0yEe2-WKuFT59MHQ" name="GuiVisualization">
              <ownedComment xmi:id="_rNYdGd0yEe2-WKuFT59MHQ">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column
headings.

@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJDWsd0yEe2-WKuFT59MHQ" name="frame" visibility="package" type="_rBk1sd0yEe2-WKuFT59MHQ" association="_rO2cs90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJDWs90yEe2-WKuFT59MHQ" name="jtable" visibility="package" type="_rBlcw90yEe2-WKuFT59MHQ" association="_rO3Dwd0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rL_9AN0yEe2-WKuFT59MHQ" name="GuiVisualization" specification="_qO730N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rL_9Ad0yEe2-WKuFT59MHQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL_9At0yEe2-WKuFT59MHQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rL_9A90yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL_9BN0yEe2-WKuFT59MHQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rL_9Bd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rL_9Bt0yEe2-WKuFT59MHQ" type="_qOz8AN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>// Frame initialization
 frame = new JFrame();

 // Frame Title
 frame.setTitle(title);

 // Initializing the JTable with input parameters
 jtable = new JTable(table, columnNames);
 jtable.setBounds(30, 40, 200, 300); // default size
 // resizeColumnWidth(jtable); // uncomment to auto size column widths

 // attached the table to a JScrollPane and then add both to the frame
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar
 frame.add(sp);
 // Frame Size
 frame.setSize(500, 200);
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 // Frame Visible = false
 frame.setVisible(false);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMAkEN0yEe2-WKuFT59MHQ" name="setVisible" specification="_qPDMkN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>frame.setVisible(true);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMAkEd0yEe2-WKuFT59MHQ" name="resizeColumnWidth" specification="_rHEZsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMAkEt0yEe2-WKuFT59MHQ" name="table" type="_rBlcw90yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();
 for (int column = 0; column &lt; table.getColumnCount(); column++) {
   int width = 70; // Min width
   for (int row = 0; row &lt; table.getRowCount(); row++) {
     TableCellRenderer renderer = table.getCellRenderer(row, column);
     Component comp = table.prepareRenderer(renderer, row, column);
     width = Math.max(comp.getPreferredSize().width + 5, width);
   }
   if (width > 300)
     width = 300;
   columnModel.getColumn(column).setPreferredWidth(width);
 }
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qO730N0yEe2-WKuFT59MHQ" name="GuiVisualization" method="_rL_9AN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qO8e490yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qO9F8N0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNYdGt0yEe2-WKuFT59MHQ">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window
   * is initially not visible, and is made visible by a call to setVisible().
   * 
   * @param title Window title
   * @param columnNames Column heading names
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_qO8e4N0yEe2-WKuFT59MHQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qO8e4d0yEe2-WKuFT59MHQ" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qO-UEN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qO8e4t0yEe2-WKuFT59MHQ" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qPBXYN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qO9tAN0yEe2-WKuFT59MHQ" type="_qOz8AN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qPDMkN0yEe2-WKuFT59MHQ" name="setVisible" method="_rMAkEN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNYdG90yEe2-WKuFT59MHQ">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_rHEZsN0yEe2-WKuFT59MHQ" name="resizeColumnWidth" visibility="private" method="_rMAkEd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHEZsd0yEe2-WKuFT59MHQ" name="table" type="_rBlcw90yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPFo0N0yEe2-WKuFT59MHQ" name="InputGraphFile">
              <ownedComment xmi:id="_rNZEIN0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJD9wd0yEe2-WKuFT59MHQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJD9wt0yEe2-WKuFT59MHQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJD9w90yEe2-WKuFT59MHQ" name="wfm" visibility="private" type="_qNr6oN0yEe2-WKuFT59MHQ" association="_rO3q0N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJEk0d0yEe2-WKuFT59MHQ" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJEk0t0yEe2-WKuFT59MHQ" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJFL4N0yEe2-WKuFT59MHQ" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJFL4d0yEe2-WKuFT59MHQ" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMBLIN0yEe2-WKuFT59MHQ" name="InputGraphFile" specification="_rB2igN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMBLId0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMBLIt0yEe2-WKuFT59MHQ" type="_qPFo0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>wfm = fm;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class
		verbose = false; // initialize verbose to false
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMBLI90yEe2-WKuFT59MHQ" name="InputGraphFile" specification="_rB8CEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMBLJN0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMBLJd0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMBLJt0yEe2-WKuFT59MHQ" type="_qPFo0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>wfm = fm;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class
		this.verbose = verbose; // initialize verbose as specified

	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMBLJ90yEe2-WKuFT59MHQ" name="setGraphFileName" specification="_qPJTMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMBLKN0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMBLKd0yEe2-WKuFT59MHQ" name="verifyGraphFileName" specification="_qPJ6QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMBLKt0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */
		try {
			getInputGraphFileName(inputFile);
		} catch (Exception e) {
			// e.printStackTrace();
			System.err.println(&quot;Failed get an input file.&quot;);
			System.exit(-1);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMBLK90yEe2-WKuFT59MHQ" name="readGraphFile" specification="_qPKhUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMBLLN0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMBLLd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits
		String inputFileName = getGraphFileName();
		graphFileContents = readGraphFileContents(inputFileName);
		return graphFileContents;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMByMN0yEe2-WKuFT59MHQ" name="getInputGraphFileName" specification="_qPKhU90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMByMd0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMByMt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;
		String fileName = UNKNOWN;
		workingDirectory = wfm.getBaseDirectory();
		if (inputFile == null) { // if fileName is nil, then prompt for input file
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);
			System.out.print(&quot;Enter input file: &quot;);
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));
			try {
				fileName = bufferRead.readLine();
			} catch (IOException e) {
				// e.printStackTrace();
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());
			}
		} else {
			fileName = inputFile;
		}
		setGraphFileName(fileName);
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName
		if (tempFile.exists()) {  // see if the file exists
			if (verbose) {
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());
			}
		} else { // try the working directory
			setGraphFileName(workingDirectory + File.separator + fileName);
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName
			if (tempFile.exists()) {  // see if the file exists
				if (verbose) {
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());
				}
			} else {
				if (verbose) {
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());
				}
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);
				throw new RuntimeException();
			}
		}
		return fileName;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMByM90yEe2-WKuFT59MHQ" name="readGraphFileContents" specification="_qPLIYd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMByNN0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMByNd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);
		if (verbose) {
			System.out.println(&quot;************************************&quot;);
			System.out.println(&quot;Graph File Read:&quot;);
			System.out.println(graphFileContents);
			System.out.println(&quot;************************************\n&quot;);
		}
		return graphFileContents;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMByNt0yEe2-WKuFT59MHQ" name="printVerboseMessage" specification="_qPLvcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMByN90yEe2-WKuFT59MHQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMByON0yEe2-WKuFT59MHQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMByOd0yEe2-WKuFT59MHQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qPJTMN0yEe2-WKuFT59MHQ" name="setGraphFileName" visibility="private" method="_rMBLJ90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPJTMd0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPJ6QN0yEe2-WKuFT59MHQ" name="verifyGraphFileName" visibility="private" method="_rMBLKd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPJ6Qd0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPKhUN0yEe2-WKuFT59MHQ" name="readGraphFile" method="_rMBLK90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPKhUd0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPKhUt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPKhU90yEe2-WKuFT59MHQ" name="getInputGraphFileName" visibility="private" method="_rMByMN0yEe2-WKuFT59MHQ" raisedException="_rHFAwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPKhVN0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPLIYN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPLIYd0yEe2-WKuFT59MHQ" name="readGraphFileContents" visibility="private" method="_rMByM90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPLIYt0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPLIY90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPLvcN0yEe2-WKuFT59MHQ" name="printVerboseMessage" visibility="private" method="_rMByNt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPLvcd0yEe2-WKuFT59MHQ" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPLvct0yEe2-WKuFT59MHQ" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPLvc90yEe2-WKuFT59MHQ" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rB2igN0yEe2-WKuFT59MHQ" name="InputGraphFile" method="_rMBLIN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rB4-wN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rB5l0N0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rB3JkN0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rB5l0d0yEe2-WKuFT59MHQ" type="_qPFo0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rB8CEN0yEe2-WKuFT59MHQ" name="InputGraphFile" method="_rMBLI90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rB8CE90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rB8CFN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rB8CEd0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rB8CEt0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rB8CFd0yEe2-WKuFT59MHQ" type="_qPFo0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPNkoN0yEe2-WKuFT59MHQ" name="InstructionTimeSlot">
              <generalization xmi:id="_rB_FYN0yEe2-WKuFT59MHQ" general="_qSkaoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJFL490yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJFy8N0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMByOt0yEe2-WKuFT59MHQ" name="InstructionTimeSlot" specification="_qPOLsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMByO90yEe2-WKuFT59MHQ" type="_qPNkoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMCZQN0yEe2-WKuFT59MHQ" name="InstructionTimeSlot" specification="_qPQA4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMCZQd0yEe2-WKuFT59MHQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMCZQt0yEe2-WKuFT59MHQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMCZQ90yEe2-WKuFT59MHQ" type="_qPNkoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMCZRN0yEe2-WKuFT59MHQ" name="InstructionTimeSlot" specification="_qPRPAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMCZRd0yEe2-WKuFT59MHQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMCZRt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMCZR90yEe2-WKuFT59MHQ" type="_qPNkoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(rowArray);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qPOLsN0yEe2-WKuFT59MHQ" name="InstructionTimeSlot" method="_rMByOt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qPOLsd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qPOLst0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qPOLs90yEe2-WKuFT59MHQ" type="_qPNkoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qPQA4N0yEe2-WKuFT59MHQ" name="InstructionTimeSlot" visibility="package" method="_rMCZQN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qPQn8t0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qPQn890yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qPQn8N0yEe2-WKuFT59MHQ" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPQn8d0yEe2-WKuFT59MHQ" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPQn9N0yEe2-WKuFT59MHQ" type="_qPNkoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qPRPAN0yEe2-WKuFT59MHQ" name="InstructionTimeSlot" visibility="package" method="_rMCZRN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qPR2Ed0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qPR2Et0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qPR2EN0yEe2-WKuFT59MHQ" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qPR2FN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPR2E90yEe2-WKuFT59MHQ" type="_qPNkoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPSdIN0yEe2-WKuFT59MHQ" name="LatencyAnalysis">
              <ownedComment xmi:id="_rNZrMN0yEe2-WKuFT59MHQ">
                <body>@author sgoddard2
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJGaAN0yEe2-WKuFT59MHQ" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJGaAd0yEe2-WKuFT59MHQ" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJHBEd0yEe2-WKuFT59MHQ" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJHoId0yEe2-WKuFT59MHQ" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJI2QN0yEe2-WKuFT59MHQ" name="latencyReport" visibility="private" type="_qNLkUN0yEe2-WKuFT59MHQ" association="_rO3q090yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJJdUN0yEe2-WKuFT59MHQ" name="program" visibility="private" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rO4R4d0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJJdUt0yEe2-WKuFT59MHQ" name="workload" visibility="private" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rO448N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJJdVN0yEe2-WKuFT59MHQ" name="programTable" visibility="private" type="_qRgDoN0yEe2-WKuFT59MHQ" association="_rO44890yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJKEYd0yEe2-WKuFT59MHQ" name="nodeIndex" visibility="private" type="_q-4HAN0yEe2-WKuFT59MHQ" association="_rO5gAd0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDAUN0yEe2-WKuFT59MHQ" name="LatencyAnalysis" specification="_rCKEgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDAUd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDAUt0yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();
 this.program = warp.toProgram();
 this.workload = warp.toWorkload();
 this.programTable = program.getSchedule();
 this.nodeIndex = program.getNodeMapIndex();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDAU90yEe2-WKuFT59MHQ" name="LatencyAnalysis" specification="_rCLSoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDAVN0yEe2-WKuFT59MHQ" name="program" type="_qQ6NwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDAVd0yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();
 this.program = program;
 this.workload = program.toWorkLoad();
 this.programTable = program.getSchedule();
 this.nodeIndex = program.getNodeMapIndex();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDAVt0yEe2-WKuFT59MHQ" name="latencyReport" specification="_qPTrQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDAV90yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>/*
  * Build a latency report. Flows are output in priority order (based on the priority used to
  * build the program. The latency for each instance of the flow is reported as follows
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;
  * 
  * For flow instances that have latency > deadline, then the latency message is appended with
  * the string &quot; => DEADLINE MISS&quot;
  * 
  * A line of 30 '*' characters separates each group of flow instance reports.
  * 
  * When there are not enough transmissions attempted between the release and the next release of
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;
  * 
  */

 var flows = workload.getFlowNamesInPriorityOrder();
 for (String flowName : flows) {
   var time = 0;

   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow
   var flowSnkIndex = nodes.length - 1;
   /* get snk of last link in the flow, which is also the Flow snk node */
   String snk = nodes[flowSnkIndex];
   /* get the src of last link in the flow */
   String src = nodes[flowSnkIndex - 1];
   /* get (column) indexes into programTable of these nodes */
   var snkIndex = nodeIndex.get(snk);
   var srcIndex = nodeIndex.get(src);
   /* get the array containing the number of transmissions required for each link in the flow */
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);
   /* get the number of transmission required for the last link in the flow */
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far
   var instance = 0;
   while (time &lt; workload.getHyperPeriod()) {
     /* get next release time and absolute deadline of the flow */
     var releaseTime = workload.nextReleaseTime(flowName, time);
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);
     // var latency = 0;
     time = releaseTime;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far
     while (time &lt; nextReleaseTime) {
       /* get instruction strings at these to locations */
       String instr1 = programTable.get(time, srcIndex);
       String instr2 = programTable.get(time, snkIndex);
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);
       if (numTxProcessed == numTxRequired) {
         /*
          * all required Tx attempts have been made compute and record latency
          */
         var latency = time - releaseTime + 1;
         // report latency
         String latencyMsg =
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);
         if (latency > deadline) {
           /* deadline missed, so color the text red */
           latencyMsg += DEADLINE_MISS;
         }
         latencyMsg += &quot;\n&quot;;
         latencyReport.add(latencyMsg);
         time = nextReleaseTime;
       } else {
         time++;
       }

     }
     if (numTxProcessed &lt; numTxRequired) {
       /*
        * This flow missed its deadline with required number of Tx!! This message should not be
        * printed with the schedulers built
        */
       String latencyMsg =
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,
               flowName, instance);
       latencyReport.add(latencyMsg);
     }
     instance++;
   }
   String flowSeparator = FLOW_SEPARATOR;
   latencyReport.add(flowSeparator);
 }
 return latencyReport;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDAWN0yEe2-WKuFT59MHQ" name="numMatchingTx" specification="_qPUSUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDAWd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDAWt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDAW90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDAXN0yEe2-WKuFT59MHQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDAXd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;

 if (flow == null || src == null || snk == null || instr == null) {
   /* make sure all parameters are valid */
   return numTx;
 }
 /*
  * get a Warp instruction parser object and then get the instruction parameters from the
  * instruction string.
  */
 var dsl = new WarpDSL();
 var instructionParametersArray = dsl.getInstructionParameters(instr);

 for (InstructionParameters entry : instructionParametersArray) {
   String flowName = entry.getFlow();
   if (flowName.equals(flow)) {
     /*
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,
      * and snk names in instruction match input parameters, then we have a Tx attempt.
      */
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {
       /* flow, src, and snk match, so increment Tx attempts */
       numTx++;
     }
   }
 }
 return numTx;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qPTrQN0yEe2-WKuFT59MHQ" name="latencyReport" method="_rMDAVt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rCL5st0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qPUSUN0yEe2-WKuFT59MHQ" name="numMatchingTx" method="_rMDAWN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPUSUd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPUSUt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPUSU90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPUSVN0yEe2-WKuFT59MHQ" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPU5YN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rCKEgN0yEe2-WKuFT59MHQ" name="LatencyAnalysis" visibility="package" method="_rMDAUN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rCKEgt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rCKrkN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rCKEgd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCKrkd0yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rCLSoN0yEe2-WKuFT59MHQ" name="LatencyAnalysis" visibility="package" method="_rMDAU90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rCLSot0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rCL5sN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rCLSod0yEe2-WKuFT59MHQ" name="program" type="_qQ6NwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCL5sd0yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPX8sN0yEe2-WKuFT59MHQ" name="LatencyVisualization">
              <ownedComment xmi:id="_rNaSQN0yEe2-WKuFT59MHQ">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.
&lt;p>

CS2820 Spring 2022 Project: Implement this class to create the file visualization that is
requested in Warp.

@author sgoddard
@version 1.3
 *</body>
              </ownedComment>
              <generalization xmi:id="_rCNu490yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJKrcd0yEe2-WKuFT59MHQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJLSgN0yEe2-WKuFT59MHQ" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJLSgd0yEe2-WKuFT59MHQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJLSgt0yEe2-WKuFT59MHQ" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJLSg90yEe2-WKuFT59MHQ" name="warp" visibility="private" type="_qUzPQN0yEe2-WKuFT59MHQ" association="_rO6HEN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJL5kd0yEe2-WKuFT59MHQ" name="la" visibility="private" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rO6HE90yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDAXt0yEe2-WKuFT59MHQ" name="LatencyVisualization" specification="_rCNH0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDAX90yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDAYN0yEe2-WKuFT59MHQ" type="_qPX8sN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
 this.warp = warp;
 this.la = warp.toLatencyAnalysis();
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rCNH0N0yEe2-WKuFT59MHQ" name="LatencyVisualization" visibility="package" method="_rMDAXt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rCNu4N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rCNu4d0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rCNH0d0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCNu4t0yEe2-WKuFT59MHQ" type="_qPX8sN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPaY8N0yEe2-WKuFT59MHQ" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_rHIrIN0yEe2-WKuFT59MHQ" client="_qPaY8N0yEe2-WKuFT59MHQ" supplier="_rAepgN0yEe2-WKuFT59MHQ" contract="_rAepgN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDnYN0yEe2-WKuFT59MHQ" name="compare" specification="_rHJ5QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDnYd0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDnYt0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDnY90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);
		return result; // 0 => tie on release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rHJ5QN0yEe2-WKuFT59MHQ" name="compare" method="_rMDnYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHJ5Qd0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHJ5Qt0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHJ5Q90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPeDUN0yEe2-WKuFT59MHQ" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_rHKgUt0yEe2-WKuFT59MHQ" client="_qPeDUN0yEe2-WKuFT59MHQ" supplier="_rAepgN0yEe2-WKuFT59MHQ" contract="_rAepgN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDnZN0yEe2-WKuFT59MHQ" name="compare" specification="_rHLHYd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDnZd0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDnZt0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMDnZ90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rHLHYd0yEe2-WKuFT59MHQ" name="compare" method="_rMDnZN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHLHYt0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHLHY90yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHLHZN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qPji4N0yEe2-WKuFT59MHQ" name="Node">
              <generalization xmi:id="_rCjGEN0yEe2-WKuFT59MHQ" general="_qXJ_sN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJL5k90yEe2-WKuFT59MHQ" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJL5lN0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJMgoN0yEe2-WKuFT59MHQ" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJMgod0yEe2-WKuFT59MHQ" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJMgot0yEe2-WKuFT59MHQ" name="edges" type="_q_dV0N0yEe2-WKuFT59MHQ" isReadOnly="true" association="_rO6uId0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJNHsd0yEe2-WKuFT59MHQ" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rJNuwN0yEe2-WKuFT59MHQ" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rHLuct0yEe2-WKuFT59MHQ" client="_qPji4N0yEe2-WKuFT59MHQ" supplier="_rGntwN0yEe2-WKuFT59MHQ" contract="_rGntwN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMDnaN0yEe2-WKuFT59MHQ" name="Node" specification="_qPlYEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMDnad0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDnat0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDna90yEe2-WKuFT59MHQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMDnbN0yEe2-WKuFT59MHQ" type="_qPji4N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
 	setName(name);
 	setPriority(priority);
 	this.index = index;
 	this.channel = DEFAULT_CHANNEL;
 	this.edges = new ArrayList&lt;Edge>();
 	this.conflicts = new HashSet&lt;String>();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMFckN0yEe2-WKuFT59MHQ" name="compareTo" specification="_rCe0oN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMGDoN0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMGDod0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMH40N0yEe2-WKuFT59MHQ" name="toString" specification="_qPl_It0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMH40d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMH40t0yEe2-WKuFT59MHQ" name="addEdge" specification="_rCifAt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMH4090yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>edges.add(edge);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMIf4N0yEe2-WKuFT59MHQ" name="addConflict" specification="_qPpCcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMIf4d0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMIf4t0yEe2-WKuFT59MHQ" name="numEdges" specification="_qPppgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMIf490yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMIf5N0yEe2-WKuFT59MHQ" name="print" specification="_qPppgt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMIf5d0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		this.print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMIf5t0yEe2-WKuFT59MHQ" name="print" specification="_qPq3ot0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>super.print();
		System.out.print(&quot;Edge info for this partiion\n&quot;);
		for (Edge edge: edges) {
			edge.print();
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qPlYEN0yEe2-WKuFT59MHQ" name="Node" visibility="package" method="_rMDnaN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qPlYFN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qPl_IN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qPlYEd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPlYEt0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPlYE90yEe2-WKuFT59MHQ" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qPl_Id0yEe2-WKuFT59MHQ" type="_qPji4N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qPl_It0yEe2-WKuFT59MHQ" name="toString" method="_rMH40N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPmmMN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPpCcN0yEe2-WKuFT59MHQ" name="addConflict" method="_rMIf4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPpCcd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPppgN0yEe2-WKuFT59MHQ" name="numEdges" method="_rMIf4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPppgd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPppgt0yEe2-WKuFT59MHQ" name="print" method="_rMIf5N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qPppg90yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qPq3ot0yEe2-WKuFT59MHQ" name="print" method="_rMIf5t0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_rCe0oN0yEe2-WKuFT59MHQ" name="compareTo" method="_rMFckN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rCfbsN0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCgCwN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rCifAt0yEe2-WKuFT59MHQ" name="addEdge" method="_rMH40t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rCifA90yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qP_AsN0yEe2-WKuFT59MHQ" name="NodeMap">
              <ownedComment xmi:id="_rNaSQd0yEe2-WKuFT59MHQ">
                <body>NodeMap creates a mapping from graph node name to 
node object (&lt;name, Node>).

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_rCkUMN0yEe2-WKuFT59MHQ" general="_qHwRwN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJNuwd0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJNuwt0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQAO0N0yEe2-WKuFT59MHQ" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_rNaSQt0yEe2-WKuFT59MHQ">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_rCnXgN0yEe2-WKuFT59MHQ" general="_qSxO8N0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMJG8N0yEe2-WKuFT59MHQ" name="NonPreemptiveSchedule" specification="_rCmJYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMJG8d0yEe2-WKuFT59MHQ" name="poset" type="_qQNDIN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMJG8t0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMJG890yEe2-WKuFT59MHQ" type="_qQAO0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rCmJYN0yEe2-WKuFT59MHQ" name="NonPreemptiveSchedule" visibility="package" method="_rMJG8N0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rCmJY90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rCmwcN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rCmJYd0yEe2-WKuFT59MHQ" name="poset" type="_qQNDIN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCmJYt0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rCmwcd0yEe2-WKuFT59MHQ" type="_qQAO0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQCrEN0yEe2-WKuFT59MHQ" name="NotImplentedVisualization">
              <generalization xmi:id="_rCn-kN0yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJOV0N0yEe2-WKuFT59MHQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJOV0d0yEe2-WKuFT59MHQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJO84N0yEe2-WKuFT59MHQ" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJO84d0yEe2-WKuFT59MHQ" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJO84t0yEe2-WKuFT59MHQ" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJO8490yEe2-WKuFT59MHQ" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMJG9N0yEe2-WKuFT59MHQ" name="NotImplentedVisualization" specification="_qQHjkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMJG9d0yEe2-WKuFT59MHQ" type="_qQCrEN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMJuAN0yEe2-WKuFT59MHQ" name="NotImplentedVisualization" specification="_qQIKoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMJuAd0yEe2-WKuFT59MHQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMJuAt0yEe2-WKuFT59MHQ" type="_qQCrEN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMJuA90yEe2-WKuFT59MHQ" name="visualization" specification="_qQIxsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMJuBN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qQHjkN0yEe2-WKuFT59MHQ" name="NotImplentedVisualization" visibility="package" method="_rMJG9N0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qQHjkd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qQHjkt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qQHjk90yEe2-WKuFT59MHQ" type="_qQCrEN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qQIKoN0yEe2-WKuFT59MHQ" name="NotImplentedVisualization" visibility="package" method="_rMJuAN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qQIKot0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qQIKo90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qQIKod0yEe2-WKuFT59MHQ" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qQIKpN0yEe2-WKuFT59MHQ" type="_qQCrEN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qQIxsN0yEe2-WKuFT59MHQ" name="visualization" method="_rMJuA90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rCnXgd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQJ_0N0yEe2-WKuFT59MHQ" name="PeriodComparator">
              <interfaceRealization xmi:id="_rHM8kN0yEe2-WKuFT59MHQ" client="_qQJ_0N0yEe2-WKuFT59MHQ" supplier="_rAepgN0yEe2-WKuFT59MHQ" contract="_rAepgN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMJuBd0yEe2-WKuFT59MHQ" name="compare" specification="_rHNjod0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMJuBt0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMJuB90yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMJuCN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rHNjod0yEe2-WKuFT59MHQ" name="compare" method="_rMJuBd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHNjot0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHNjo90yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHNjpN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQNDIN0yEe2-WKuFT59MHQ" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_rNaSQ90yEe2-WKuFT59MHQ">
                <body>Poset is a partially ordered set of activations
that are partitions of the workload to be scheduled.
This version assumes each activation is a node
and each node has a list of edges associated with it.
Each node/activation in an edge is identified as either 
a transmitter or sender for that edge.

@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJO85N0yEe2-WKuFT59MHQ" name="activations" visibility="private" type="_qKfcsN0yEe2-WKuFT59MHQ" association="_rO7VMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJPj8d0yEe2-WKuFT59MHQ" name="workload" visibility="private" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rO7VM90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJQLAN0yEe2-WKuFT59MHQ" name="flows" visibility="protected" type="_qN3g0N0yEe2-WKuFT59MHQ" association="_rO78Qd0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rJQLAt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rJQyEN0yEe2-WKuFT59MHQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rJQLAd0yEe2-WKuFT59MHQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJSAMd0yEe2-WKuFT59MHQ" name="nodes" visibility="private" type="_qPji4N0yEe2-WKuFT59MHQ" association="_rO8jUN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rJSnQN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rJSnQd0yEe2-WKuFT59MHQ" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rJSAMt0yEe2-WKuFT59MHQ" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJTOUN0yEe2-WKuFT59MHQ" name="nodeMap" visibility="private" type="_qP_AsN0yEe2-WKuFT59MHQ" association="_rO9KYd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJTOUt0yEe2-WKuFT59MHQ" name="priorityQueue" visibility="private" type="_qR5sQN0yEe2-WKuFT59MHQ" association="_rO9xcd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJT1Yt0yEe2-WKuFT59MHQ" name="nodeConnectivityMap" visibility="protected" type="_q-4HAN0yEe2-WKuFT59MHQ" association="_rO-YgN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJVqkN0yEe2-WKuFT59MHQ" name="activationMap" visibility="package" type="_qOiPMN0yEe2-WKuFT59MHQ" association="_rO-Yg90yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMJuCd0yEe2-WKuFT59MHQ" name="Poset" specification="_rCwhcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMJuCt0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMJuC90yEe2-WKuFT59MHQ" type="_qQNDIN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;
		this.activations = new Activations();
		this.activationMap = new FlowNodeToActivationMap();
		/* init map to return a null activation if null key intered */
		this.activationMap.put(null, null);
		flows = workload.getFlows().values();
		nodeMap = workload.getNodes();
		nodes = nodeMap.values();
		priorityQueue = new 
				SchedulableObjectQueue&lt;Activation>(new 
						PriorityComparator&lt;Activation>());
		/* get global node connectivity */
		nodeConnectivityMap = getNodeConnectivity();
		buildPosetOfActivations();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVEN0yEe2-WKuFT59MHQ" name="getNodeConnectivity" specification="_qQQGcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMKVEd0yEe2-WKuFT59MHQ" type="_q-4HAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();
		
		for (Flow flow: flows) {
			var nodesInFlow = flow.getNodes();
			var size = nodesInFlow.size();
			for (Integer i =0 ; i &lt; size; i++) {
				var nodeName = nodesInFlow.get(i).getName();
				var connectivity = map.get(nodeName);
				var connections = 2; // default # of connections
				if (i == 0 || i == size-1) {
					/* src or snk => connections = 1 */
					connections = 1;
				}
				if (connectivity != null) {
					connectivity += connections;
					map.put(nodeName,connectivity);
				} else {
					map.put(nodeName,connections); // initial connection
				}
			}
		}
		return map;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVEt0yEe2-WKuFT59MHQ" name="getNodeNames" specification="_qQW0IN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMKVE90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();
		var nodeNames = new ArrayList&lt;String>(keys.size());
		nodeNames.addAll(keys);
		return nodeNames;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVFN0yEe2-WKuFT59MHQ" name="getNodesNamesOrderedAlphabetically" specification="_qQZ3cN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMKVFd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMKVFt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();
		return nodeNames;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVF90yEe2-WKuFT59MHQ" name="buildPosetOfActivations" specification="_qQfXAN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */

		/*
		 * (1) Create edges, setting priority and release time
		 * 		add edges to node respective node lists as edge is created
		 * (2) Create conflict set for each node (adjacent nodes)
		 * (3) Create activations by selecting coordinators within 
		 * 		each flow and adding that coordinator's edges and
		 * 		release times to an activation with the coordinator's name
		 * 		(each activation will have one coordinator and the
		 * 			number of activations &lt;= number nodes)
		 * (4) Order the activations
		 */

		createEdgeLists(); // (1)
		createConflictLists(); // (2)
		createInitialActivations(); // (3)
		orderActivations(); // (4)
		/* At this point, each flow has been partitioned 
		 */
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVGN0yEe2-WKuFT59MHQ" name="createEdgeLists" specification="_qQf-EN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */
		var maxFlowLength = workload.maxFlowLength();
		for (Flow flow: flows) {
			var flowNodes = flow.getNodes();
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());
			var flowPhase = flow.getPhase();
			var flowPriority = flow.getPriority();
			var period = flow.getPeriod();
			var deadline = flow.getDeadline();
			Edge edge = null;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {
				/* Create edges, setting priority and release time */
				/* This version adds edges to the main node in NodeMap.
				 * This allows creation of large partitions, with at most one per node.
				 * An alternative, we can have a lot of small partitions that can be
				 * combined later, which may create more parallelism.
				 * So, both the global NodeMap nodes and the nodes in the
				 * flows are updated with the same edge information. 
				 * This let's us play with partition creation options later.
				 */
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); 
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());
				var flowSrc = flowNodes.get(i);  // node in the flow
				var flowSnk = flowNodes.get(i+1);
				var src = srcNode.getName();
				var snk = snkNode.getName();

				/*
				 * Edge priority within a flow is based on position
				 * in flow. Each Flow has its own priority. This 
				 * creates a 2-dimensional priority. Thus, we
				 * can keep a total ordering of edges if we fold the
				 * table into a single row where we assume each new flow
				 * starts maxFlowSize away from the previous flow nodes:
				 * edgePriority = flowPriority*maxFlowLength + edgePosition
				 */
				// var flowPriority = flow.getPriority();
				var priority = (flowPriority * maxFlowLength) + i;
				//var period = flow.getPeriod();
				// var deadline = flow.getDeadline();
				/* edge phase = flow phase + edge position in flow */
				var phase = flowPhase + i; 
				var numTx = numTxArray[i];
				edge = new Edge(flow.getName(),src,snk,priority, 
						period, deadline, phase, numTx);
				/* Add edge to the nodes in the NodeMap */
				srcNode.addEdge(edge);
				snkNode.addEdge(edge);
				/* Add edge to the nodes in the flow */
				flowSrc.addEdge(edge);
				flowSnk.addEdge(edge);
				/* Add the edege to the flow */
				flow.addEdge(edge);

			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVGd0yEe2-WKuFT59MHQ" name="createConflictLists" specification="_qQglIN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>/* create conflict lists at global and
		 * local levels (i.e., NodeMap and Flow)
		 */
		createGlobalConflictLists();
		createLocalConflictLists();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVGt0yEe2-WKuFT59MHQ" name="createGlobalConflictLists" specification="_qQhMMN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>for (Node node: nodes) {
			for (Edge edge: node.getEdges()) {
				/* get src and snk nodes and names */
				var src = edge.getSrc();
				var snk = edge.getSnk();
				var srcNode = nodeMap.get(src);
				var snkNode = nodeMap.get(snk);
				/* 
				 * conflict list is a set, so just add
				 * don't need to worry about duplicates
				 * as Set ensures that doesn't happen.
				 */
				srcNode.addConflict(snk);
				snkNode.addConflict(src);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMKVG90yEe2-WKuFT59MHQ" name="createLocalConflictLists" specification="_qQhzQN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>for (Flow flow: flows) {
			var flowNodes = flow.getNodes();
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {
				var srcNode = flowNodes.get(i); 
				var snkNode = flowNodes.get(i+1);
				var src = srcNode.getName();
				var snk = snkNode.getName();
				/* 
				 * conflict list is a set, so just add
				 * don't need to worry about duplicates
				 * as Set ensures that doesn't happen.
				 */
				srcNode.addConflict(snk);
				snkNode.addConflict(src);
			}
		}


	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMK8IN0yEe2-WKuFT59MHQ" name="findCoordinator" specification="_rHOxwd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMK8Id0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMK8It0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();
		var coordinatorIndex = 0;
		var maxEdges = 0;
		for (Integer i = 0; i &lt; size; i++) {
			var node = nodesInFlow.get(i);
			var numEdges = node.numEdges();
			if (numEdges > maxEdges) {
				maxEdges = numEdges;
				coordinatorIndex = i;
			}
		}
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMK8I90yEe2-WKuFT59MHQ" name="buildTxArray" specification="_rHPY0d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMK8JN0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMK8Jd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMK8Jt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();
		var txArray = new Integer[size];
		for (Integer i = 0; i &lt; size; i++) {
			var node = nodesInFlow.get(i);
			txArray[i] = getMaxTx(node);
		}
		return txArray;
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMK8J90yEe2-WKuFT59MHQ" name="createInitialActivations" specification="_qQiaUN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>for (Flow flow: flows) {
			var nodesInFlow = flow.getNodes();
			Integer coordinatorIndex = 0;
			/* Find the node with max edges connected.
			 * This will be the first coordinator selected
			 * for this flow.
			 */
			coordinatorIndex = findCoordinator(nodesInFlow);
			var txArray = buildTxArray(nodesInFlow);
			/* if coordinatorIndex is odd, then other coordinators
			 * are also odd numbers, even otherwise. 
			 * */
			Integer startIndex = 0; // for even coordinatorIndex
			if ((coordinatorIndex % 2) == 1) {
				/* coordinatorIndex is odd, so start at 1 */
				startIndex = 1;
			}
			if (startIndex >= nodesInFlow.size()) {
				/* create a partition the single partition */
			}
			var activationPhaseOffset = 0;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {
				var node = nodesInFlow.get(i);
				/* create a partition consisting of node i */
				String name = flow.getName() + &quot;:&quot; + node.getName();
				Activation partition = getActivation(name, node);
				/* Update phase for each edge in new partition based on 
				 * the current offset, which increases after each
				 * partition created.
				 * */
				partition.increaseEdgePhases(activationPhaseOffset);
				activations.put(name,partition);
				/* increase offset for next partition based on the 
				 * max numTx in this partition/node 
				 * But need to account for phase already assumes
				 * 1 Tx already
				 * */
				activationPhaseOffset += txArray[i]-1;  // adjust by one
			} 
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMK8KN0yEe2-WKuFT59MHQ" name="getMaxTx" specification="_rCyWoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMK8Kd0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMK8Kt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;
		for (Edge edge: node.getEdges()) {
			result = Math.max(result, edge.getNumTx());
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMK8K90yEe2-WKuFT59MHQ" name="getActivation" specification="_rC0L0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMK8LN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMK8Ld0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMK8Lt0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);
		if (newPartition == null) {
			// no partition by that name exists, so create one
			newPartition = new Activation(name);
			activationMap.put(node,newPartition);
		}
		/* add the node as the coordinator */
		newPartition.addCoordinator(node.getName());
		/* set the conflicts */
		newPartition.setConflicts(node.getConflicts());
		/* add the edges associated with this coordinator */
		newPartition.addEdges(node.getEdges());
		/* set the predecessor as the node's predecessor */
		var nodePred = node.getPredecessor();
		var pred = activationMap.get(nodePred);
		if (nodePred != null &amp;&amp; pred == null) {
			/* try next node up the flow */
			nodePred = nodePred.getPredecessor();
			pred = activationMap.get(nodePred);
		}
		newPartition.setPredecessor(pred);
		return newPartition;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMK8L90yEe2-WKuFT59MHQ" name="getHyperPeriod" specification="_qQjBYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMK8MN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMLjMN0yEe2-WKuFT59MHQ" name="getMaxPhase" specification="_qQjBYt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMLjMd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMLjMt0yEe2-WKuFT59MHQ" name="orderActivations" specification="_qQjocd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue
		/* Update the release time and priority of each partition activation */
		for (Activation activation: activations.values()) {
			activation.updatePriorityAndRelease(currentTime);
		}
		/* create a queue sorted first by release times and then priorities */
		priorityQueue = new 
				SchedulableObjectQueue&lt;Activation>(new 
						PriorityComparator&lt;Activation>(),activations.values());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMLjM90yEe2-WKuFT59MHQ" name="getNextActivation" specification="_qQjoct0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMLjNN0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMLjNd0yEe2-WKuFT59MHQ" name="addActivation" specification="_rC2BAd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMLjNt0yEe2-WKuFT59MHQ" name="activation" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>priorityQueue.add(activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMLjN90yEe2-WKuFT59MHQ" name="findBaseStation" specification="_qQkPgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMLjON0yEe2-WKuFT59MHQ" type="_qPji4N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;
		Iterator&lt;Flow> iterator = flows.iterator();
		Flow flow = iterator.next();
		var nodes = flow.getNodes();
		var srcBaseStation = nodes.get(0);
		var srcBaseStationName = srcBaseStation.getName();
		var snkBaseStation = nodes.get(nodes.size()-1);
		var snkBaseStationName = snkBaseStation.getName(); 
		var found = false;
 
     while (!found &amp;&amp; iterator.hasNext()) {
     	flow = iterator.next();
 		nodes = flow.getNodes();
     	var src = nodes.get(0);
			var srcName = src.getName();
			var snk = nodes.get(nodes.size()-1);
			var snkName = snk.getName();
			if (!srcBaseStationName.equals(srcName) &amp;&amp; 
					snkBaseStationName.equals(snkName)) {
				baseStation = snkBaseStation;
				found = true;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; 
					!snkBaseStationName.equals(snkName)) {
				baseStation = srcBaseStation;
				found = true;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;
					snkBaseStationName.equals(srcName)) {
				baseStation = snkBaseStation;
				found = true;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; 
					!snkBaseStationName.equals(srcName)) {
				baseStation = srcBaseStation;
				found = true;
			}
     }
     if (!found) {
     	/* initial snk and src tie for base station. That is
     	 * each is always a flow src with the other a snk or
     	 * vice versa. 
     	 * So pick initial snk as the base station */
     	baseStation = snkBaseStation;
     }
		return baseStation;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qQQGcN0yEe2-WKuFT59MHQ" name="getNodeConnectivity" visibility="private" method="_rMKVEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHOKst0yEe2-WKuFT59MHQ" type="_q-4HAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qQW0IN0yEe2-WKuFT59MHQ" name="getNodeNames" method="_rMKVEt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHOxwN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qQZ3cN0yEe2-WKuFT59MHQ" name="getNodesNamesOrderedAlphabetically" method="_rMKVFN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qQaegN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qQbsoN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qQfXAN0yEe2-WKuFT59MHQ" name="buildPosetOfActivations" method="_rMKVF90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQf-EN0yEe2-WKuFT59MHQ" name="createEdgeLists" visibility="private" method="_rMKVGN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQglIN0yEe2-WKuFT59MHQ" name="createConflictLists" visibility="private" method="_rMKVGd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQhMMN0yEe2-WKuFT59MHQ" name="createGlobalConflictLists" visibility="private" method="_rMKVGt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQhzQN0yEe2-WKuFT59MHQ" name="createLocalConflictLists" visibility="private" method="_rMKVG90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQiaUN0yEe2-WKuFT59MHQ" name="createInitialActivations" visibility="private" method="_rMK8J90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQjBYN0yEe2-WKuFT59MHQ" name="getHyperPeriod" method="_rMK8L90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qQjBYd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qQjBYt0yEe2-WKuFT59MHQ" name="getMaxPhase" method="_rMLjMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qQjocN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qQjocd0yEe2-WKuFT59MHQ" name="orderActivations" method="_rMLjMt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQjoct0yEe2-WKuFT59MHQ" name="getNextActivation" method="_rMLjM90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNa5UN0yEe2-WKuFT59MHQ">
                  <body>getNextActivation returns the highest priority
	 * partition that has been released at or before input
	 * parameter time.
	 * 
	 * @param time
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_rC2BAN0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qQkPgN0yEe2-WKuFT59MHQ" name="findBaseStation" visibility="protected" method="_rMLjN90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNa5Ut0yEe2-WKuFT59MHQ">
                  <body>findBaseStation is used by algorithms that generate the
	 * partially ordered set of activations using a base station. 
	 * This method searches the set of flows to find the node that
	 * is always one of the src or snk nodes. In the case of a tie
	 * where there are two candidates the initial snk node is
	 * returned. If there are multiple base stations, only the fist
	 * one found is returned.
	 * 
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_rC2oEN0yEe2-WKuFT59MHQ" type="_qPji4N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rCwhcN0yEe2-WKuFT59MHQ" name="Poset" visibility="package" method="_rMJuCd0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rCxIgN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rCxIgd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNaSRN0yEe2-WKuFT59MHQ">
                  <body>Partition types:
	 *  
	 *  by node--each node is a partition using only one channel
	 *  by channel
	 *  	by node then identify when a coordinator and when not
	 *  	by flow and coordinator in that flow
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_rCwhcd0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCxIgt0yEe2-WKuFT59MHQ" type="_qQNDIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rCyWoN0yEe2-WKuFT59MHQ" name="getMaxTx" visibility="private" method="_rMK8KN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rCyWod0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rCyWot0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rC0L0N0yEe2-WKuFT59MHQ" name="getActivation" visibility="private" method="_rMK8K90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC0L0d0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC0y4N0yEe2-WKuFT59MHQ" name="node" type="_qPji4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rC1Z8N0yEe2-WKuFT59MHQ" type="_qI2d8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC2BAd0yEe2-WKuFT59MHQ" name="addActivation" method="_rMLjNd0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNa5Ud0yEe2-WKuFT59MHQ">
                  <body>addElemement adds the partitionElement to the priority queue
	 * 
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_rC2BAt0yEe2-WKuFT59MHQ" name="activation" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHOxwd0yEe2-WKuFT59MHQ" name="findCoordinator" visibility="protected" method="_rMK8IN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNaSRd0yEe2-WKuFT59MHQ">
                  <body>*
	 * @param nodesInFlow
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHOxwt0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHOxw90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rHPY0d0yEe2-WKuFT59MHQ" name="buildTxArray" visibility="private" method="_rMK8I90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHPY0t0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHPY090yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rHPY1N0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQrkQN0yEe2-WKuFT59MHQ" name="PreemptiveSchedule">
              <ownedComment xmi:id="_rNa5U90yEe2-WKuFT59MHQ">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, 
priority schedule for the Poset using numChannels. 

@author sgoddard2
 *</body>
              </ownedComment>
              <generalization xmi:id="_rC_yAt0yEe2-WKuFT59MHQ" general="_qSxO8N0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMKQN0yEe2-WKuFT59MHQ" name="PreemptiveSchedule" specification="_rC4dQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMKQd0yEe2-WKuFT59MHQ" name="poset" type="_qQNDIN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMKQt0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMKQ90yEe2-WKuFT59MHQ" type="_qQrkQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMKRN0yEe2-WKuFT59MHQ" name="continueSearch" specification="_rC5rYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMKRd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMKRt0yEe2-WKuFT59MHQ" name="activation" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMKR90yEe2-WKuFT59MHQ" type="_rHROAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMKSN0yEe2-WKuFT59MHQ" name="toProgram" specification="_qQtZcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMKSd0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	
		
//TODO write code to support preemption
		
		return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMKSt0yEe2-WKuFT59MHQ" name="findPreeptiveChannelAndTime" specification="_rC7gkt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMKS90yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMKTN0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMKTd0yEe2-WKuFT59MHQ" type="_rHROAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;
		var time = startTime;
		var result = findMaxTimeAvailable(time, schedulableObject);
		var channelConsidered = result.channel;
		var timeAvailable = result.time;
		
		
		if (channelConsidered == numChannels) {
			/* no available time slots near this time, even for preemption */
			return findChannelAndTime(time+1,schedulableObject);
		} else {
			/* can use timeAvailable.time here on timeAvailable.channel
			 * then must find additional time on same channel until 
			 * done
			 */
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);
			var duration = schedulableObject.getExecutionDuration();
			var timeRemaining = duration-timeAvailable;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);
			var numStartTimes = additionalScheduleTimes.size();
			var lastStartTime = endScheduleTime; 
			if (numStartTimes > 0 ) {
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();
			}
			if (lastStartTime &lt; endScheduleTime) {
				// schedulableObject.addAdditionalStartTime(nextStartTime);
				channel = channelConsidered;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);
			} else {
				time = lastStartTime;
			}
		}
		return new ScheduleLocation(channel, time);	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMKTt0yEe2-WKuFT59MHQ" name="findAdditionalTime" specification="_rC8HoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMKT90yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMKUN0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMKUd0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMKUt0yEe2-WKuFT59MHQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMKU90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var time = startTime;
		var results = new ArrayList&lt;ScheduleTime>();
		
		// if (timeRemaining &lt;= )
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {
			time ++; 
		}
		if (time >= endScheduleTime) {
			/* no conflict time available */
			results.add(new ScheduleTime(time,time));
			return results;
		} 
		
		if (isAvailable(a1, channel, time, timeRemaining)) {
			results.add(new ScheduleTime(time,time+timeRemaining-1));
		} else {
			var timeAvailable = availableTime(a1,  channel, time);
			if (timeAvailable > 0) {
				/* found at least one time slot available */
//				a1.addAdditionalStartTime(time);
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));
			} else {
				/* look ahead in time by one unit */
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));
			}
			
		}
		
		return results;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMxUN0yEe2-WKuFT59MHQ" name="findMaxTimeAvailable" specification="_rC9VwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMxUd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMxUt0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMxU90yEe2-WKuFT59MHQ" type="_rHROAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;
		var bestChannel = numChannels;
		
		for (int channel = 0; channel &lt; numChannels ; channel++) {
			var timeAvailable = availableTime(schedulableObject,channel,time);
			if (timeAvailable > maxTime) {
				maxTime = timeAvailable;
				bestChannel = channel;
			}
		}
// TEMP
		if (maxTime > 0) {
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);
		}
// TEMP
		return new ScheduleLocation(bestChannel,maxTime);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMxVN0yEe2-WKuFT59MHQ" name="availableTime" specification="_rC980N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMxVd0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMxVt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMxV90yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMxWN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;
		
		while (isAvailable(a1,channel,start+result,1)) {
			result++;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMxWd0yEe2-WKuFT59MHQ" name="addToSchedule" specification="_rC981d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMxWt0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMxW90yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMxXN0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMxXd0yEe2-WKuFT59MHQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMMxXt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;
		var combineTime = endScheduleTime;
		
		var nextScheduleTime = next.getNextScheduleTime(startTime);
		var nextStartTime = nextScheduleTime.getStartTime();
		var nextEndTime = nextScheduleTime.getEndTime();
		
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {
			/* can't schedule this activation */
			return false;
		}
		
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {
			/* add the next slice of execution to the schedule */
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);
		}
		if (!success) {
			return false;
		}
		
		/* Successful adding next to later points in the schedule.
		 * So, now we see if this is the last
		 * 
		 */
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {
			/* this is the last slice of execution, so wrap things up */
			next.setEndTime(endTime);
			var responseTime = endTime - next.getReleaseTime();
			if (responseTime > next.getDeadline()) {
				return false; // unable to schedule this entry
			}
			/* Add the endTime to the elements endTimes Q
			 * so that we can track predecessor endTimes
			 * and make sure successors don't start before 
			 * predecessors
			 */
			next.addToEndTimes(endTime); 
			/* remove predecessor end time that matches this start time */
			var pred = next.getPredecessor();
			if (pred != null) {
				pred.pollEndTimes(); 
			}
		}
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		/* Check to see we need to combine this activation with
		 * an existing activation in any of the slots. If so,
		 * save that time so we can update the actual start time
		 */
		Activation currentEntry = null;
		for (int i = startTime; i &lt;= endTime; i++) {
			currentEntry = schedule.get(channel,i);
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {
				/* found an entry to combine, record the time,
				 * update the combined duration and new
				 * endTime, then exit the loop
				 */
				combineTime = i;
				// currentEntry = entry;
				break;
			}
		}
		entry.setStartTime(startTime); // set start time for this entry
		entry.setEndTime(endTime); // set end time for this entry
		if (combineTime &lt; endScheduleTime) {
			/* change entry to point to combinedActivation
			 * and set startTime to the beginning of the 
			 * combined entries */
			var combinedActivation = new CombinedActivation(currentEntry, entry);
			entry = combinedActivation;
			startTime = entry.getStartTime();
		}
		for (int i = startTime; i &lt;= endTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		
		return success;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMMxX90yEe2-WKuFT59MHQ" name="addToSchedule" specification="_rC-j5N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMMxYN0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMMxYd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);
		if (channel == numChannels) {
			return false;
		}
		
		/* found a time and channel  that are valid */
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()
		var success = false; 
		
// PREEMPT
		var timeAvailable = availableTime(next, channel, startTime);
		var duration = next.getExecutionDuration();
		
		if (timeAvailable == 0 ) {
			/* then currentEntry at this location in the schedule
			 * is not null and we can combine, but best to check
			 */
			var currentEntry = schedule.get(channel,startTime);
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {
				/* no conflict with this entry, and can
				 * combine so check for combined entry time
				 *  to see if we can combine activations
				 */
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);
				var combinedEntry = new CombinedActivation(currentEntry,next);
				var searchTime = currentEntry.getEndTime()+1;
				var searchLength = combinedDuration - duration;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {
					timeAvailable = combinedDuration;
					duration = combinedDuration;
				}
			}
		}
			if (duration &lt;= timeAvailable) {
				/* can execute without preemption */
				var endTime = startTime+duration-1;
				success = addToSchedule(next,channel,startTime,endTime);
			} else {
				/* Recursively add 'slices' to the schedule.
				 * success == true => all slices added successfully
				 * otherwise, none of the slices were added
				 */
				var endTime = startTime + timeAvailable-1;
				success = addToSchedule(next,channel,startTime,endTime);
			}
		return success;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qQtZcN0yEe2-WKuFT59MHQ" name="toProgram" method="_rMMKSN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC7gkd0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC4dQN0yEe2-WKuFT59MHQ" name="PreemptiveSchedule" visibility="package" method="_rMMKQN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rC5EUt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rC5EU90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rC5EUN0yEe2-WKuFT59MHQ" name="poset" type="_qQNDIN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rC5EUd0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC5EVN0yEe2-WKuFT59MHQ" type="_qQrkQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC5rYN0yEe2-WKuFT59MHQ" name="continueSearch" visibility="protected" method="_rMMKRN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC5rYd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC5rYt0yEe2-WKuFT59MHQ" name="activation" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHR1Ed0yEe2-WKuFT59MHQ" type="_rHROAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC7gkt0yEe2-WKuFT59MHQ" name="findPreeptiveChannelAndTime" visibility="private" method="_rMMKSt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC7gk90yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC7glN0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHR1Et0yEe2-WKuFT59MHQ" type="_rHROAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC8HoN0yEe2-WKuFT59MHQ" name="findAdditionalTime" visibility="private" method="_rMMKTt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC8Hod0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC8Hot0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC8Ho90yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rC8HpN0yEe2-WKuFT59MHQ" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHR1E90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC9VwN0yEe2-WKuFT59MHQ" name="findMaxTimeAvailable" visibility="private" method="_rMMxUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC9Vwd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC9Vwt0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHR1FN0yEe2-WKuFT59MHQ" type="_rHROAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rC980N0yEe2-WKuFT59MHQ" name="availableTime" visibility="private" method="_rMMxVN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC980d0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rC980t0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC98090yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC981N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rC981d0yEe2-WKuFT59MHQ" name="addToSchedule" visibility="private" method="_rMMxWd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC981t0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rC-j4N0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC-j4d0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC-j4t0yEe2-WKuFT59MHQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rC-j490yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rC-j5N0yEe2-WKuFT59MHQ" name="addToSchedule" visibility="protected" method="_rMMxX90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rC_K8N0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rC_K8d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQ0uMN0yEe2-WKuFT59MHQ" name="PriorityComparator">
              <interfaceRealization xmi:id="_rHScIN0yEe2-WKuFT59MHQ" client="_qQ0uMN0yEe2-WKuFT59MHQ" supplier="_rAepgN0yEe2-WKuFT59MHQ" contract="_rAepgN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMNYYN0yEe2-WKuFT59MHQ" name="compare" specification="_rHTDMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMNYYd0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMNYYt0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMNYY90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);
		if (result == 0) {
			// tied for priority, so break tie on release time
			result = obj1.releaseTimeComparison(obj2);
		}
		return result; // 0 => tie on priority and release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rHTDMN0yEe2-WKuFT59MHQ" name="compare" method="_rMNYYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHTqQN0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHTqQd0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHTqQt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qQ6NwN0yEe2-WKuFT59MHQ" name="Program">
              <ownedComment xmi:id="_rNa5VN0yEe2-WKuFT59MHQ">
                <body>@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJWRoN0yEe2-WKuFT59MHQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJWRod0yEe2-WKuFT59MHQ" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJWRot0yEe2-WKuFT59MHQ" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJW4sN0yEe2-WKuFT59MHQ" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJW4sd0yEe2-WKuFT59MHQ" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJW4st0yEe2-WKuFT59MHQ" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJW4s90yEe2-WKuFT59MHQ" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJW4tN0yEe2-WKuFT59MHQ" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJW4td0yEe2-WKuFT59MHQ" name="workLoad" visibility="package" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rO-_kd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJXfwd0yEe2-WKuFT59MHQ" name="scheduleBuilt" visibility="package" type="_qRgDoN0yEe2-WKuFT59MHQ" association="_rO_moN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJXfw90yEe2-WKuFT59MHQ" name="SchedulerSelected" visibility="package" type="_rHU4YN0yEe2-WKuFT59MHQ" association="_rO_mo90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJbKId0yEe2-WKuFT59MHQ" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJbxMd0yEe2-WKuFT59MHQ" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJcYQd0yEe2-WKuFT59MHQ" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJcYQ90yEe2-WKuFT59MHQ" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJc_Ud0yEe2-WKuFT59MHQ" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJc_U90yEe2-WKuFT59MHQ" name="channelsAvailable" visibility="package" type="_qLCPQN0yEe2-WKuFT59MHQ" association="_rPANsd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJdmYN0yEe2-WKuFT59MHQ" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJe0gN0yEe2-WKuFT59MHQ" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJe0gt0yEe2-WKuFT59MHQ" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJfbkd0yEe2-WKuFT59MHQ" name="deadlineMisses" visibility="private" type="_qNLkUN0yEe2-WKuFT59MHQ" association="_rPA0wd0yEe2-WKuFT59MHQ"/>
              <interfaceRealization xmi:id="_rDTUAN0yEe2-WKuFT59MHQ" client="_qQ6NwN0yEe2-WKuFT59MHQ" supplier="_qTUokN0yEe2-WKuFT59MHQ" contract="_qTUokN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMNYZN0yEe2-WKuFT59MHQ" name="Program" specification="_rHVfcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMNYZd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMNYZt0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMNYZ90yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMNYaN0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMNYad0yEe2-WKuFT59MHQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMNYat0yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);
 buildProgram(choice);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMNYa90yEe2-WKuFT59MHQ" name="Program" specification="_rHWGgt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMNYbN0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMNYbd0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMNYbt0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMNYb90yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);
 buildProgram(choice);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_cN0yEe2-WKuFT59MHQ" name="setDefaultParameters" specification="_rDp5UN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMN_cd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMN_ct0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMN_c90yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMN_dN0yEe2-WKuFT59MHQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built
 this.scheduleBuilt = new ProgramSchedule();
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected
 workLoad.setFlowsInPriorityOrder();
 this.schedulerName = &quot;Priority&quot;;
 this.schChoice = &quot;Priority&quot;;
 this.nTransmissions = 0;
 this.realTimeHARTflag = false;
 this.optimizationRequested = true;
 this.nChannels = nChannels;
 this.verbose = verbose;
 this.channelsAvailable = new Channels(nChannels, verbose);
 this.reportLatency = reportLatency;
 this.deadlineMisses = new Description();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_dd0yEe2-WKuFT59MHQ" name="toWorkLoad" specification="_qQ-fMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMN_dt0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return workLoad;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_d90yEe2-WKuFT59MHQ" name="buildProgram" specification="_rHWtkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMN_eN0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>/*
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches
  * the name and then use the newer schedule object to convert the POSET to a program. If it is
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP
  * program by calling buildOriginalProgram();
  */
 switch (choice) { // select the requested scheduler
   case WARP_POSET_PRIORITY: // fall through
   case WARP_POSET_RM: // fall through
   case WARP_POSET_DM: // fall through
     setScheduleSelected(choice);
     var poset1 = new WarpPoset(workLoad);
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);
     var newProgram = schedule1.toProgram();
     setSchedule(newProgram); // store the schedule built
     break;
   case CONNECTIVITY_POSET_PRIORITY: // fall through
   case CONNECTIVITY_POSET_RM: // fall through
   case CONNECTIVITY_POSET_DM: // fall through
   case POSET_PRIORITY: // fall through
   case POSET_RM: // fall through
   case POSET_DM:
     setScheduleSelected(choice);
     // var poset = new BasicPoset(workLoad);
     var poset2 = new ConnectivityPoset(workLoad);
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);
     newProgram = schedule2.toProgram();
     setSchedule(newProgram); // store the schedule built
     break;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through
   // var poset3 = new ConnectivityPoset(workLoad);
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);
   // newProgram = schedule3.toProgram();
   // setSchedule(newProgram); // store the schedule built
   // break;
   case PRIORITY:
     selectPriority();
     buildOriginalProgram(); // build the requested schedule
     break;
   case RM:
     selectRM();
     buildOriginalProgram(); // build the requested schedule
     break;
   case DM:
     selectDM();
     buildOriginalProgram(); // build the requested schedule
     break;
   case RTHART:
     selectRtHART();
     buildOriginalProgram(); // build the requested schedule
     break;
   default:
     selectPriority();
     buildOriginalProgram(); // build the requested schedule
     break; // break from switch
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_ed0yEe2-WKuFT59MHQ" name="buildOriginalProgram" specification="_qQ_GQN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>// builds a Priority schedule

 if (verbose) {
   var scheduleDetails =
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,
           workLoad.getName());
   scheduleDetails =
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,
       String.valueOf(workLoad.getMinPacketReceptionRate()));
   scheduleDetails =
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());
   // The following parameters are only output when special schedules are requested
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed
     scheduleDetails =
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());
   }
   if (getOptimizationFlag()) { // only specify when optimization not requested
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;
   }
   System.out.println(scheduleDetails);
 }
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if
             // nTransmissions == n 0 else flow.nTXperLink
 var nTransmissions = getNumTransmissions();
 Boolean realtimeHART = getRealTimeHartFlag();
 var optimizationRequested = getOptimizationFlag();
 var schedule = new ProgramSchedule(); // create an empty schedule
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node
 // names
 // sorted alphabetically
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule
 var nNodes = nodeIndex.size();
 /*
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map
  * }
  */
 var hyperPeriod = workLoad.getHyperPeriod();
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the
                                         // period and the channels entries are all initialized
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a
                                                                                    // time slot
                                                                                    // for
                                                                                    // nNodes,
                                                                                    // each
                                                                                    // initialized
                                                                                    // with a
                                                                                    // SLEEP_INSTRUCTION
   schedule.add(newInstructionTimeSlot);
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time
                                        // slot
 }
 // create an instance of the Warp DSL class for parsing instructions
 var dsl = new WarpDSL();

 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order
   var nodesInFlow = workLoad.getNodesInFlow(flowName);
   var nNodesInFlow = nodesInFlow.length;
   var e2eFlag = false; // default is to not use e2e to achieve E2E
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX
                              // array otherwise
     e2eFlag = true; // need to meet e2e to hit E2E for flow
     if (realtimeHART) {
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);
     } // else we will computer nTx from the linkTx array for the flow as we go

   } else {
     nTx = nTransmissions;
   }
   var snk = &quot;&quot;;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);
   if (verbose) {
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,
                                     // i.e., min nTx to go E2E with no errors
     System.out.printf(
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,
         flowName, minCost, totalCost);
   }
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx
                   // is dependent on reliability target
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow
   }
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for
                                                   // previous slots to 0
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done
                                                    // scheduling this flow
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this
                                        // flow
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for
                                                          // this flow
   var flowPeriod = workLoad.getFlowPeriod(flowName);
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src
                                               // node can first transmit
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't
                                                                                      // push for
                                                                                      // last
                                                                                      // node, so
                                                                                      // stop at
                                                                                      // node
                                                                                      // n-1,
                                                                                      // which is
                                                                                      // 2 less
                                                                                      // than
                                                                                      // count
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow
                                                         // (aka source of data)
       if (e2eFlag) {
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link
       }
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule
                                                      // for previous node
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this
                                                   // flow meets desired reliability
         var instructionNodeName = currentNodeName; // name of node for which we write an
                                                    // instruction in its program
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the
                                            // priorSrcInstruction during optimization
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or
                                      // not
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to
                                               // UNKNOWN if we don't
         // when not optimizing instructionNodeName is current node, but we might update a
         // different node's instruction to optimize
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the
                                                        // flow release, which happens once every
                                                        // period in the hyperPeriod
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure
                                                                              // precedence
                                                                              // constraints on
                                                                              // flow are
                                                                              // preserved
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current
                                                    // schedule length. Increase schedule and
                                                    // channelsAvailable tables
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create
                                                                                              // a
                                                                                              // time
                                                                                              // slot
                                                                                              // for
                                                                                              // nNodes,
                                                                                              // each
                                                                                              // initialized
                                                                                              // with
                                                                                              // a
                                                                                              // SLEEP_INSTRUCTION
             schedule.add(newInstructionTimeSlot);
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available
                                                   // for all slots. instructionIndex may be >
                                                   // initialized size of array because of
                                                   // phases...
           }
         }
         String channel = findNextAvailableChannel(schedule, instructionNodeName,
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));

         // Now check if we have a valid channel. If not we need to find a new time slot further
         // down the schedule.
         // So, initialize the search to start at the current slot and then increase by one each
         // time we loop if the current slot
         // Now check if we have a valid channel. If not we need to find a new time slot further
         // down the schedule.
         // So, initialize the search to start at the current slot and then increase by one each
         // time we loop if the current slot
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no
                                           // channel was available. In that case, we need to
                                           // find a new slot for this instruction after the last
                                           // index found
           var startSearchIndex = instructionIndex + 1;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current
                                                      // schedule lenght. Increase schedule and
                                                      // channelsAvailable tables
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create
                                                                                                // a
                                                                                                // time
                                                                                                // slot
                                                                                                // for
                                                                                                // nNodes,
                                                                                                // each
                                                                                                // initialized
                                                                                                // with
                                                                                                // a
                                                                                                // SLEEP_INSTRUCTION
               schedule.add(newInstructionTimeSlot);
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available
                                                     // for all slots. instructionIndex may be >
                                                     // initialized size of array because of
                                                     // phases...
             }
           }
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));
         }
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));
         if (realtimeHART) {
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);
         } else {
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);
         }

         // if optimization flag is set, look to see if any optimizations are possible
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get
                                                                                // instruction
                                                                                // scheduled for
                                                                                // snk to execute
                                                                                // in the prior
                                                                                // time slot
           if (index == (nTx - 1)) {
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);
             String elseSubString = &quot;else pull(&quot;;
             if (priorInstruction.contains(hasSubstring)
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {
               // The sink node is not waiting, so add this instruction as an else to it
               // Also need to make sure we haven't already combined a prior instruction by
               // moving it to the else clause. May need a smater way to do this later...
               // The combined instructions both use channels for their respective time slots!
               // The else is being added to the prior time slot, so we need to
               // get a new channel for that time slot and put back the channel we extraced from
               // this time slot. And of course, clean up if any errors occur
               // in the process
               var instructionParametersArrayList =
                   dsl.getInstructionParameters(priorInstruction);
               var priorInstructionChannel = UNKNOWN;
               if (instructionParametersArrayList.size() == 1) {
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy
                                                                                    // of the
                                                                                    // parameters
                 priorInstructionChannel = instructionParameters.getChannel();
               } else { // we just checked above that the prior instruction did not have an else
                        // pull, wait, or sleep. So, there should be only one instruction here
                 String msg = String.format(
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,
                     priorInstruction);
                 System.err.println(msg);
               }
               workLoad.setNodeChannel(instructionNodeName,
                   Integer.valueOf(priorInstructionChannel));
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for
                                                                        // this slot
               channel = priorInstructionChannel; // update this so that the corresponding wait
                                                  // uses this channel
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we
                                      // replace that slot with the new, optimized instruction
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the
                                          // node name of the prior instruction
             }
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)
                   || priorInstruction.contains(WAIT_FRAGMENT))) {
             // We hit this case when combining the last push of one flow with the first push of
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)
             // print (&quot;Skipping optimization of combining \(priorInstruction) with
             // \(newInstruction)\n&quot;)
             // May want to add code here to combine when e2eFlag is true but need to compute new
             // reliability values given less than 1 probablity that
             // this first push/now pull will happen
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,
             // newInstruction, priorInstruction);
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow
                    // with a new instruction
             // Anywhere else? :-) Probably better figure it out!!
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink
                                                                                      // node is
                                                                                      // not
                                                                                      // waiting,
                                                                                      // so add
                                                                                      // this
                                                                                      // instruction
                                                                                      // as an
                                                                                      // else to
                                                                                      // it
               // Also need to make sure we haven't already combined a prior instruction by
               // moving it to the else clause. May need a smarter way to do this later...
               var instructionParametersArrayList =
                   dsl.getInstructionParameters(priorInstruction);
               var priorInstructionChannel = UNKNOWN;
               var priorInstructionSnk = UNKNOWN;
               if (instructionParametersArrayList.size() == 1) {
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy
                                                                                    // of the
                                                                                    // parameters
                 priorInstructionSnk = instructionParameters.getSnk();
                 priorInstructionChannel = instructionParameters.getChannel();
               } else { // we just checked above that the prior instruction did not have an else
                        // pull, wait, or sleep. So, there should be only one instruction here
                 String msg = String.format(
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,
                     priorInstruction);
                 System.err.println(msg);
               }
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get
                                                                                               // instruction
                                                                                               // scheduled
                                                                                               // for
                                                                                               // snk/curentNodeName)
                                                                                               // to
                                                                                               // execute
                                                                                               // in
                                                                                               // the
                                                                                               // prior
                                                                                               // time
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull
                                                                  // to/from the same node, so
                                                                  // use the prior instruction
                                                                  // channel
                 newInstruction = priorInstruction
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so
                                        // we replace that slot with the new, optimized
                                        // instruction
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is
                                            // the node name of the prior instruction
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);
                                                                             // I think it needs
                                                                             // to be a sleep and
                                                                             // then we can add a
                                                                             // wait there
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,
                 // then we combine instructions with new as an else push and add wait at
                 // currentNodeName
                 workLoad.setNodeChannel(instructionNodeName,
                     Integer.valueOf(priorInstructionChannel));
                 newInstruction = priorInstruction
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was
                                                                                                // channel
                 // need to change priorSrcInstruction from sleep to wait on channel
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel
                 priorSrcUpdated = true; // set flag so this instruction is updated when we
                                         // insert currenInstruction into the
                                         // currentInstructionTimeSlot
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so
                                        // we replace that slot with the new, optimized
                                        // instruction
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is
                                            // the node name of the prior instruction
               }
             }
           }
         }
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =
                                                                // schedule.get(instructionIndex);
         String[] currentInstructionTimeSlot; // =
                                              // currentInstructionTimeSlotArrayList.toArray(new
                                              // String[currentInstructionTimeSlotArrayList.size()]);
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this
                                                           // instruction
         if (instructionIndex &lt; schedule.size()) {
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current
                                                                                 // instruction,
                                                                                 // in case
                                                                                 // another
                                                                                 // instruction
                                                                                 // is in this
                                                                                 // time slot for
                                                                                 // another node
                                                                                 // that doesn't
                                                                                 // conflict
                                                                                 // channels
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);
         } else {
           currentInstructionTimeSlotArrayList =
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);
         }
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an
                                                                                          // error
                                                                                          // finding
                                                                                          // the
                                                                                          // right
                                                                                          // location
                                                                                          // will
                                                                                          // result
                                                                                          // in
                                                                                          // location
                                                                                          // of
                                                                                          // snk
                                                                                          // or 0
         if (priorSrcUpdated) {
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an
                                                                                             // error
                                                                                             // finding
                                                                                             // the
                                                                                             // right
                                                                                             // location
                                                                                             // will
                                                                                             // result
                                                                                             // in
                                                                                             // location
                                                                                             // of
                                                                                             // snk
                                                                                             // or
                                                                                             // 0
         }
         // If this is a basic push() then the snk node will have the initial wait instruction in
         // its time slot. Thus, need to add the channel # to that wait
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction
                                                                              // scheduled for
                                                                              // snk to execute
                                                                              // in the current
                                                                              // time slot
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);
         }
         if (flowNodeIndex > 0) {
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the
                                                              // flow (aka predecessor)
           var possibleCombineInstruction =
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,
                   currentNodeName);
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization
                                                                    // possible: combine two
                                                                    // conditional pushes at the
                                                                    // same slot involving a
                                                                    // common node
             var upstreamNodeInstruction =
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);
             if (newInstruction.equals(instr)
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {
               var instructionParametersArrayList =
                   dsl.getInstructionParameters(upstreamNodeInstruction);
               var upstreamNodeChannel = UNKNOWN;
               if (instructionParametersArrayList.size() == 1) {
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy
                                                                                    // of the
                                                                                    // paramaters
                 upstreamNodeChannel = instructionParameters.getChannel();
                 // return upstreamNodeChannel to the available channels for this time slot
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);
               } else { // we just checked above that the prior instruction did not have an else
                        // pull, wait, or sleep. So, there should be only one instruction here
                 String msg = String.format(
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,
                     upstreamNodeInstruction);
                 System.err.println(msg);
               }
               // use the newInstruction channel in upstream instruction that is being combined
               // and return the upstream channel to the available channel set
               newInstruction = newInstruction
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was
                                                                                        // upstreamNodeChannel
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an
                                                                                                // error
                                                                                                // finding
                                                                                                // the
                                                                                                // right
                                                                                                // location
                                                                                                // will
                                                                                                // result
                                                                                                // in
                                                                                                // location
                                                                                                // of
                                                                                                // snk
                                                                                                // or
                                                                                                // 0
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =
                   waitInstruction(channel);; // an error finding the right location will result
                                              // in location of snk or 0 // was
                                              // upstreamNodeChannel
             } else if (newInstruction
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]
                     .contains(possibleCombineInstruction)) {
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =
                   waitInstruction(channel); // Replace combined instruction in prior node
                                             // program with wait()
             }
           }
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,
                                           // so add 'else wait()' for down upstream node when
                                           // needed
             var upstreamNodeInstruction =
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];
             if (newInstruction
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {
               String upstreamNodeChannel =
                   getFirstChannelInInstruction(upstreamNodeInstruction);
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this
                                                                                           // node
                                                                                           // needs
                                                                                           // to
                                                                                           // wait
                                                                                           // for
                                                                                           // upstream
                                                                                           // node
                                                                                           // if
                                                                                           // message
                                                                                           // hasn't
                                                                                           // arrived
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an
                                                                                                // error
                                                                                                // finding
                                                                                                // the
                                                                                                // right
                                                                                                // location
                                                                                                // will
                                                                                                // result
                                                                                                // in
                                                                                                // location
                                                                                                // of
                                                                                                // snk
                                                                                                // or
                                                                                                // 0
               // Don't replace the push instruction in the upstream node in this case, because
               // we added the else in this nodes time slot instead
             }
           }
         }
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check
                                                   // anyway
           schedule.set(instructionIndex, timeSlot);
         } else {
           schedule.add(timeSlot);
           String msg = String.format(
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,
               instructionIndex, schedule.size());
           System.err.println(msg);
           System.err.println(
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);
         }
         flowLastInstruction = instructionIndex;
         if (index == 0) {
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the
                                                          // flow's src node first transmits
         }
       }
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't
                                                         // worry about clearing
                                                         // currentNodeInstrucitons; will be set
                                                         // in loop
     }
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;
     String latencyMsg =
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);
     if (verbose) {
       System.out.printf(latencyMsg);
     }
     if (latency > flowDeadline) {
       String deadlineMsg = String.format(
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,
           flowName, instance, latency, flowDeadline);
       deadlineMisses.add(deadlineMsg);
       // System.out.printf(deadlineMsg);
     }
   }
 }
 setSchedule(schedule); // store the schedule built
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_et0yEe2-WKuFT59MHQ" name="waitInstruction" specification="_qQ_tUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMN_e90yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMN_fN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();
 if (!Utilities.isInteger(channel)) {
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);
 }
 return String.format(&quot;wait(#%s)&quot;, channel);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_fd0yEe2-WKuFT59MHQ" name="elseWaitInstruction" specification="_qRAUYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMN_ft0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMN_f90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();
 if (!Utilities.isInteger(channel)) {
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));
 }
 return String.format(&quot; else wait(#%s)&quot;, channel);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMN_gN0yEe2-WKuFT59MHQ" name="elsePullClause" specification="_qRAUY90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMN_gd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmgN0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmgd0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmgt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmg90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMOmhN0yEe2-WKuFT59MHQ" name="hasPushInstruction" specification="_qRCJkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMOmhd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmht0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmh90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmiN0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmid0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMOmit0yEe2-WKuFT59MHQ" name="pushInstruction" specification="_qRCwoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMOmi90yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmjN0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmjd0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmjt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmj90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMOmkN0yEe2-WKuFT59MHQ" name="getFirstChannelInInstruction" specification="_qRDXsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMOmkd0yEe2-WKuFT59MHQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmkt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the
                                                      // channel #
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel
 return channel;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMOmk90yEe2-WKuFT59MHQ" name="findNextAvailableInstructionTimeSlot" specification="_rDrugd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMOmlN0yEe2-WKuFT59MHQ" name="schedule" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMOmld0yEe2-WKuFT59MHQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOmlt0yEe2-WKuFT59MHQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMOml90yEe2-WKuFT59MHQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNkN0yEe2-WKuFT59MHQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNkd0yEe2-WKuFT59MHQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMPNkt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNk90yEe2-WKuFT59MHQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMPNlN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNld0yEe2-WKuFT59MHQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNlt0yEe2-WKuFT59MHQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNl90yEe2-WKuFT59MHQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNmN0yEe2-WKuFT59MHQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNmd0yEe2-WKuFT59MHQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNmt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting
                                  // location
 if (transIndex > 0) {
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we
                                                                                  // don't start
                                                                                  // looking
                                                                                  // before the
                                                                                  // startLocation
                                                                                  // AND the
                                                                                  // previous
                                                                                  // instruction
                                                                                  // we inserted
 }
 var done = false; // Flag indicating time slot search is done
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and
   // for kth retry
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {
     var currentInstructionTimeSlot = schedule.get(currentTime);
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {
       done = true;
     } else {
       currentTime += 1;
     }
   }
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)
   Integer slotOffsetFromLastPreviousInstructionEntry;
   if (transIndex >= (previousNodeInstruction.length - 1)) {
     slotOffsetFromLastPreviousInstructionEntry =
         transIndex - (previousNodeInstruction.length - 1) + 1;
     var possibleInstructionTimeSlotIndex =
         previousNodeInstruction[previousNodeInstruction.length - 1]
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry
                                                           // entry
     // or continuous past it if more attempts for this instruction
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier
                                                             // than the starting location
       // (which can also mean the start time for searching available slots due to channel
       // unavailability)
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index
     }
     done = false; // However, we need to check if the current slot is available, and if not keep
                   // searching until we find one. This happens with preemptions
     if (!optimizationRequested) {
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {
         var currentInstructionTimeSlot = schedule.get(currentTime);
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get
                                                                                        // the
                                                                                        // proposed
                                                                                        // currentInstructionTimeSlot.
                                                                                        // If
                                                                                        // available,
                                                                                        // done
                                                                                        // is
                                                                                        // true,
                                                                                        // else
                                                                                        // keep
                                                                                        // checking
                                                                                        // for a
                                                                                        // time
           done = true;
         } else {
           currentTime += 1;
         }
       }
     } else {
       // do something to support the optimization
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {
         var currentInstructionTimeSlot = schedule.get(currentTime);
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get
                                                                                        // the
                                                                                        // proposed
                                                                                        // currentInstructionTimeSlot.
                                                                                        // If
                                                                                        // available,
                                                                                        // done
                                                                                        // is
                                                                                        // true,
                                                                                        // else
                                                                                        // keep
                                                                                        // checking
                                                                                        // for a
                                                                                        // time
           done = true;
         } else {
           currentTime += 1;
         }
       }
     }
   } else {
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as
                                                                                     // previous
                                                                                     // node's
                                                                                     // next
                                                                                     // retry
                                                                                     // entry
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't
                                                              // earlier than the starting
                                                              // location
       // (which can also mean the start time for searching available slots due to channel
       // unavailability)
       currentTime = possibleInstructionTimeSlotIndex; //
     }
     done = false; // However, we need to check if the current slot is available, and if not keep
                   // searching until we find one. This happens with preemptions
     if (!optimizationRequested) {
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {
         var currentInstructionTimeSlot = schedule.get(currentTime);
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get
                                                                                        // the
                                                                                        // proposed
                                                                                        // currentInstructionTimeSlot.
                                                                                        // If
                                                                                        // available,
                                                                                        // done
                                                                                        // is
                                                                                        // true,
                                                                                        // else
                                                                                        // keep
                                                                                        // checking
                                                                                        // for a
                                                                                        // time
           done = true;
         } else {
           currentTime += 1;
         }
       }
     } else {
       // do something to support the optimization
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current
                                            // schedule table. If so, no need to optimize.
         // Just return current time and let caller figure out what to do.
         var tmpInstructionTimeSlot = schedule.get(currentTime);
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction
                                                                                       // should
                                                                                       // contain
                                                                                       // a wait,
                                                                                       // so we
                                                                                       // can use
                                                                                       // it
                                                                                       // during
                                                                                       // optimization.
                                                                                       // Only a
                                                                                       // wait
                                                                                       // for
                                                                                       // this
                                                                                       // time
                                                                                       // slot is
                                                                                       // expected
                                                                                       // at this
                                                                                       // point
           // we also need to be sure the snk is sleeping
           // If either condition is not true, then we need to find another time slot
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {
             var currentInstructionTimeSlot = schedule.get(currentTime);
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get
                                                                                            // the
                                                                                            // proposed
                                                                                            // currentInstructionTimeSlot.
                                                                                            // If
                                                                                            // available,
                                                                                            // done
                                                                                            // is
                                                                                            // true,
                                                                                            // else
                                                                                            // keep
                                                                                            // checking
                                                                                            // for
                                                                                            // a
                                                                                            // time
               done = true;
             } else {
               currentTime += 1;
             }
           }
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not
                                                        // sure if it is bad...print an error
                                                        // indicating the issue
           var errorString = String.format(
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,
               currentTime);
           errorString +=
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;
           errorString += srcInstruction;
           System.err.println(errorString);
         }
       }
     }
   }
 }
 return currentTime;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMPNm90yEe2-WKuFT59MHQ" name="slotIsAvailable" specification="_rDv_8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMPNnN0yEe2-WKuFT59MHQ" name="currentInstructionTimeSlot" type="_qPNkoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMPNnd0yEe2-WKuFT59MHQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNnt0yEe2-WKuFT59MHQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNn90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is
                         // done
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk
                                                                                  // are both
                                                                                  // sleeping, so
                                                                                  // slot is
                                                                                  // available
   vacantSlot = true;
 }
 return vacantSlot;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMPNoN0yEe2-WKuFT59MHQ" name="findNextAvailableChannel" specification="_rDxOEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMPNod0yEe2-WKuFT59MHQ" name="schedule" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMPNot0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNo90yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNpN0yEe2-WKuFT59MHQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNpd0yEe2-WKuFT59MHQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMPNpt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check
                           // this result

 // create an instance of the Warp DSL class for parsing instructions
 var dsl = new WarpDSL();
 InstructionTimeSlot priorInstructionTimeSlot;

 var channels = channelsAvailable.getChannelSet(currentTime);
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in
                        // that slot, which have to be avoided here
   Integer priorTime = currentTime - 1;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);

   // extract the channels used by the src and snk nodes in the prior time slot and store them in
   // an array
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get
                                                                                           // the
                                                                                           // parameters
                                                                                           // from
                                                                                           // the
                                                                                           // instruction
                                                                                           // in
                                                                                           // the
                                                                                           // src
                                                                                           // node's
                                                                                           // prior
                                                                                           // time
                                                                                           // slot
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the
                                                                        // paramaters
     channels.remove(instructionParameters.getChannel());
   }
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the
                                                                                       // parameters
                                                                                       // from
                                                                                       // the
                                                                                       // instruction
                                                                                       // in the
                                                                                       // snk
                                                                                       // node's
                                                                                       // prior
                                                                                       // time
                                                                                       // slot
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the
                                                                        // paramaters
     channels.remove(instructionParameters.getChannel());
   }
 }
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node
 channel++; // increment the channel because we don't use the same channel in consecutive time
            // slots for the same node
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits
                                    // max
   channel = 0;
 }
 var channelFound = false;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of
                                                // channels to assign
   var channelString = String.valueOf(channel);
   var channelRemoved = channels.remove(channelString);
   if (channelRemoved) {
     // newChannel has the channel
     newChannel = channelString;
     channelFound = true;
   } else {
     // try another channel
     channel += 1;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel
                                        // hits max
       channel = 0;
     }
   }
 }
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMPNp90yEe2-WKuFT59MHQ" name="selectPriority" specification="_qREl0N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMPNqN0yEe2-WKuFT59MHQ" name="selectRM" specification="_qREl0d0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMP0oN0yEe2-WKuFT59MHQ" name="selectDM" specification="_qREl0t0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMP0od0yEe2-WKuFT59MHQ" name="selectRtHART" specification="_qREl090yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMP0ot0yEe2-WKuFT59MHQ" name="setScheduleSelected" specification="_rHWtkt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMP0o90yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>switch (choice) {
   case PRIORITY:
     schedulerName = &quot;Priority&quot;;
     schChoice = &quot;-Priority&quot;;
     workLoad.setFlowsInPriorityOrder();
     break;
   case RM:
     schedulerName = &quot;RateMonotonic&quot;;
     schChoice = &quot;-RM&quot;;
     workLoad.setFlowsInRMorder();
     break;
   case DM:
     schedulerName = &quot;DeadlineMonotonic&quot;;
     schChoice = &quot;-DM&quot;;
     workLoad.setFlowsInDMorder();
     break;
   case RTHART:
     schedulerName = &quot;RealtimeHART&quot;;
     schChoice = &quot;-RealTimeHART&quot;;
     workLoad.setFlowsInRealTimeHARTorder();
     setRealTimeHartFlag(true);
     break;
   case CONNECTIVITY_POSET_DM:
     schedulerName = &quot;ConnectivityPosetDM&quot;;
     schChoice = &quot;-CPdm&quot;;
     workLoad.setFlowsInDMorder();
     break;
   case CONNECTIVITY_POSET_PRIORITY:
     schedulerName = &quot;ConnectivityPoset&quot;;
     schChoice = &quot;-CPoset&quot;;
     workLoad.setFlowsInPriorityOrder();
     break;
   case CONNECTIVITY_POSET_RM:
     schedulerName = &quot;ConnectivityPosetRM&quot;;
     schChoice = &quot;-CPrm&quot;;
     workLoad.setFlowsInRMorder();
     break;
   case POSET_DM:
     schedulerName = &quot;PosetDM&quot;;
     schChoice = &quot;-PosetDM&quot;;
     workLoad.setFlowsInDMorder();
     break;
   case POSET_PRIORITY:
     schedulerName = &quot;Poset&quot;;
     schChoice = &quot;-Poset&quot;;
     workLoad.setFlowsInPriorityOrder();
     break;
   case POSET_RM:
     schedulerName = &quot;PosetRM&quot;;
     schChoice = &quot;-PosetDM&quot;;
     workLoad.setFlowsInRMorder();
     break;
   case WARP_POSET_DM:
     schedulerName = &quot;WarpPosetDM&quot;;
     schChoice = &quot;-WPdm&quot;;
     workLoad.setFlowsInDMorder();
     break;
   case WARP_POSET_PRIORITY:
     schedulerName = &quot;WarpPoset&quot;;
     schChoice = &quot;-WarpPoset&quot;;
     workLoad.setFlowsInPriorityOrder();
     break;
   case WARP_POSET_RM:
     schedulerName = &quot;WarpPosetRM&quot;;
     schChoice = &quot;-WPrm&quot;;
     workLoad.setFlowsInRMorder();
     break;
   default:
     schedulerName = &quot;Priority&quot;;
     schChoice = &quot;-Priority&quot;;
     workLoad.setFlowsInPriorityOrder();
     break;
 }
 SchedulerSelected = choice;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMQbsN0yEe2-WKuFT59MHQ" name="setSchedule" specification="_rDycMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMQbsd0yEe2-WKuFT59MHQ" name="schedule" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRCwN0yEe2-WKuFT59MHQ" name="getSchedule" specification="_qRGbAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRCwd0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRCwt0yEe2-WKuFT59MHQ" name="getSchedulerName" specification="_qRHCEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRCw90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRp0N0yEe2-WKuFT59MHQ" name="getSchChoice" specification="_qRI3Qt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRp0d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRp0t0yEe2-WKuFT59MHQ" name="getNumChannels" specification="_qRJeUd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRp090yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRp1N0yEe2-WKuFT59MHQ" name="getNumTransmissions" specification="_qRKFYt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRp1d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRp1t0yEe2-WKuFT59MHQ" name="getRealTimeHartFlag" specification="_qRKsct0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRp190yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRp2N0yEe2-WKuFT59MHQ" name="setRealTimeHartFlag" specification="_qRKsdN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRp2d0yEe2-WKuFT59MHQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMRp2t0yEe2-WKuFT59MHQ" name="getMinPacketReceptionRate" specification="_qRLTgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMRp290yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMSQ4N0yEe2-WKuFT59MHQ" name="getE2e" specification="_qRRaIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMSQ4d0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMSQ4t0yEe2-WKuFT59MHQ" name="getName" specification="_qRTPUt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMSQ490yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMSQ5N0yEe2-WKuFT59MHQ" name="getOptimizationFlag" specification="_qRT2ZN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMSQ5d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMSQ5t0yEe2-WKuFT59MHQ" name="deadlineMisses" specification="_qRVrkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMSQ590yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMSQ6N0yEe2-WKuFT59MHQ" name="getNumFaults" specification="_qRVrkd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMSQ6d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMSQ6t0yEe2-WKuFT59MHQ" name="getNodeMapIndex" specification="_qRWSpN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMSQ690yEe2-WKuFT59MHQ" type="_q-4HAN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node
                                                                  // names
 // sorted alphabetically
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to
                                                    // index in schedule
 // table
 var nNodes = orderedNodes.length;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping
   var name = orderedNodes[index];
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map
 }
 return nodeIndexMap;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qQ-fMN0yEe2-WKuFT59MHQ" name="toWorkLoad" method="_rMN_dd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rDrugN0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qQ_GQN0yEe2-WKuFT59MHQ" name="buildOriginalProgram" method="_rMN_ed0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qQ_tUN0yEe2-WKuFT59MHQ" name="waitInstruction" visibility="private" method="_rMN_et0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qQ_tUd0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qQ_tUt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRAUYN0yEe2-WKuFT59MHQ" name="elseWaitInstruction" visibility="private" method="_rMN_fd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRAUYd0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRAUYt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRAUY90yEe2-WKuFT59MHQ" name="elsePullClause" visibility="private" method="_rMN_gN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRA7cN0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRBigN0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRBigd0yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRBigt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRBig90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRCJkN0yEe2-WKuFT59MHQ" name="hasPushInstruction" visibility="private" method="_rMOmhN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRCJkd0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCJkt0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCJk90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCJlN0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCJld0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRCwoN0yEe2-WKuFT59MHQ" name="pushInstruction" visibility="private" method="_rMOmit0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRCwod0yEe2-WKuFT59MHQ" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCwot0yEe2-WKuFT59MHQ" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCwo90yEe2-WKuFT59MHQ" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCwpN0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRCwpd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRDXsN0yEe2-WKuFT59MHQ" name="getFirstChannelInInstruction" visibility="private" method="_rMOmkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRDXsd0yEe2-WKuFT59MHQ" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRDXst0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qREl0N0yEe2-WKuFT59MHQ" name="selectPriority" method="_rMPNp90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qREl0d0yEe2-WKuFT59MHQ" name="selectRM" method="_rMPNqN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qREl0t0yEe2-WKuFT59MHQ" name="selectDM" method="_rMP0oN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qREl090yEe2-WKuFT59MHQ" name="selectRtHART" method="_rMP0od0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qRGbAN0yEe2-WKuFT59MHQ" name="getSchedule" method="_rMRCwN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNa5Vd0yEe2-WKuFT59MHQ">
                  <body>getSchedule returns the ProgramSchedule object that is scheduleBuilt.
   * 
   * @return returns a ProgramSchedule object</body>
                </ownedComment>
                <ownedParameter xmi:id="_rD04cN0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRHCEN0yEe2-WKuFT59MHQ" name="getSchedulerName" method="_rMRCwt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRIQMN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRI3Qt0yEe2-WKuFT59MHQ" name="getSchChoice" method="_rMRp0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRJeUN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRJeUd0yEe2-WKuFT59MHQ" name="getNumChannels" method="_rMRp0t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRJeUt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRKFYt0yEe2-WKuFT59MHQ" name="getNumTransmissions" method="_rMRp1N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRKFY90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRKsct0yEe2-WKuFT59MHQ" name="getRealTimeHartFlag" visibility="private" method="_rMRp1t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRKsc90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRKsdN0yEe2-WKuFT59MHQ" name="setRealTimeHartFlag" visibility="private" method="_rMRp2N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRKsdd0yEe2-WKuFT59MHQ" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRLTgN0yEe2-WKuFT59MHQ" name="getMinPacketReceptionRate" method="_rMRp2t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHYiwd0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRRaIN0yEe2-WKuFT59MHQ" name="getE2e" method="_rMSQ4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHYiwt0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRTPUt0yEe2-WKuFT59MHQ" name="getName" method="_rMSQ4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRT2YN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRT2ZN0yEe2-WKuFT59MHQ" name="getOptimizationFlag" method="_rMSQ5N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRUdcN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRVrkN0yEe2-WKuFT59MHQ" name="deadlineMisses" method="_rMSQ5t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rD1fgN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRVrkd0yEe2-WKuFT59MHQ" name="getNumFaults" method="_rMSQ6N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRWSoN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRWSpN0yEe2-WKuFT59MHQ" name="getNodeMapIndex" method="_rMSQ6t0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNa5Vt0yEe2-WKuFT59MHQ">
                  <body>getNodeMapIndex returns a HashMap of ordered node names as Strings and their respective
   * indices as Integers.
   * 
   * @return returns a HashMap of Strings and Integers</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHZJ0N0yEe2-WKuFT59MHQ" type="_q-4HAN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rDp5UN0yEe2-WKuFT59MHQ" name="setDefaultParameters" visibility="private" method="_rMN_cN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rDqgYN0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rDrHcN0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDrHcd0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDrHct0yEe2-WKuFT59MHQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rDrugd0yEe2-WKuFT59MHQ" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_rMOmk90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rDsVkN0yEe2-WKuFT59MHQ" name="schedule" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rDsVkd0yEe2-WKuFT59MHQ" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVkt0yEe2-WKuFT59MHQ" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVk90yEe2-WKuFT59MHQ" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVlN0yEe2-WKuFT59MHQ" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVld0yEe2-WKuFT59MHQ" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDs8ot0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVlt0yEe2-WKuFT59MHQ" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rDux0N0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVl90yEe2-WKuFT59MHQ" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVmN0yEe2-WKuFT59MHQ" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVmd0yEe2-WKuFT59MHQ" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDsVmt0yEe2-WKuFT59MHQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDs8oN0yEe2-WKuFT59MHQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDs8od0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rDv_8N0yEe2-WKuFT59MHQ" name="slotIsAvailable" visibility="private" method="_rMPNm90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rDv_8d0yEe2-WKuFT59MHQ" name="currentInstructionTimeSlot" type="_qPNkoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rDv_8t0yEe2-WKuFT59MHQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDv_890yEe2-WKuFT59MHQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDv_9N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rDxOEN0yEe2-WKuFT59MHQ" name="findNextAvailableChannel" visibility="private" method="_rMPNoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rDxOEd0yEe2-WKuFT59MHQ" name="schedule" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rDxOEt0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDxOE90yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDxOFN0yEe2-WKuFT59MHQ" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDx1IN0yEe2-WKuFT59MHQ" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rDx1Id0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rDycMN0yEe2-WKuFT59MHQ" name="setSchedule" visibility="private" method="_rMQbsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rDzDQN0yEe2-WKuFT59MHQ" name="schedule" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHVfcN0yEe2-WKuFT59MHQ" name="Program" visibility="package" method="_rMNYZN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHVfdt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHWGgN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHVfcd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHVfct0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHVfc90yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHVfdN0yEe2-WKuFT59MHQ" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHVfdd0yEe2-WKuFT59MHQ" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHWGgd0yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHWGgt0yEe2-WKuFT59MHQ" name="Program" visibility="package" method="_rMNYa90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHWGht0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHWGh90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHWGg90yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHWGhN0yEe2-WKuFT59MHQ" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHWGhd0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHWGiN0yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHWtkN0yEe2-WKuFT59MHQ" name="buildProgram" method="_rMN_d90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHWtkd0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHWtkt0yEe2-WKuFT59MHQ" name="setScheduleSelected" visibility="private" method="_rMP0ot0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHWtk90yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qRgDoN0yEe2-WKuFT59MHQ" name="ProgramSchedule">
              <generalization xmi:id="_rD6YAN0yEe2-WKuFT59MHQ" general="_qToxoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJgpsN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJgpsd0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMS38N0yEe2-WKuFT59MHQ" name="ProgramSchedule" specification="_qRhRwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMS38d0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMS38t0yEe2-WKuFT59MHQ" name="ProgramSchedule" specification="_qRjuAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMS3890yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMS39N0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMS39d0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(row,column);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qRhRwN0yEe2-WKuFT59MHQ" name="ProgramSchedule" method="_rMS38N0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qRif4N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qRif4d0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qRif4t0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRjuAN0yEe2-WKuFT59MHQ" name="ProgramSchedule" visibility="package" method="_rMS38t0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qRkVEN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qRkVEd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qRjuAd0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRjuAt0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qRkVEt0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qRk8IN0yEe2-WKuFT59MHQ" name="ProgramVisualization">
              <ownedComment xmi:id="_rNa5V90yEe2-WKuFT59MHQ">
                <body>The ProgramVisualization class is the visual representation of 
a WARP program for a given graph.

@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <generalization xmi:id="_rEEJAt0yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJgpst0yEe2-WKuFT59MHQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJgps90yEe2-WKuFT59MHQ" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJhQwN0yEe2-WKuFT59MHQ" name="sourceCode" visibility="private" type="_qRgDoN0yEe2-WKuFT59MHQ" association="_rPBb0d0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJhQwt0yEe2-WKuFT59MHQ" name="program" visibility="private" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rPBb1N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJh30N0yEe2-WKuFT59MHQ" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMTfAN0yEe2-WKuFT59MHQ" name="ProgramVisualization" specification="_rEBFsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMTfAd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMTfAt0yEe2-WKuFT59MHQ" type="_qRk8IN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
 this.program = warp.toProgram();
 this.sourceCode = program.getSchedule();
 this.deadlinesMet = warp.deadlinesMet();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMTfA90yEe2-WKuFT59MHQ" name="displayVisualization" specification="_qRmKQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMTfBN0yEe2-WKuFT59MHQ" type="_qOz8AN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMTfBd0yEe2-WKuFT59MHQ" name="createHeader" specification="_qRnYYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMTfBt0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();

 header.add(createTitle());
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));

 /* The following parameters are output based on a special schedule or the fault model */
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));
 }
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));
 return header;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMTfB90yEe2-WKuFT59MHQ" name="createFooter" specification="_qRp0oN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMTfCN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
 String deadlineMsg = null;

 if (deadlinesMet) {
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;
 } else {
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;
 }
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));
 return footer;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMTfCd0yEe2-WKuFT59MHQ" name="createColumnHeader" specification="_qRutIt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMTfCt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMTfC90yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();
 String[] columnNames = new String[orderedNodes.length + 1];
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first
 /* loop through the node names, adding each to the header */
 for (int i = 0; i &lt; orderedNodes.length; i++) {
   columnNames[i + 1] = orderedNodes[i];
 }
 return columnNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMTfDN0yEe2-WKuFT59MHQ" name="createVisualizationData" specification="_qRwiU90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMTfDd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMTfDt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {
   int numRows = sourceCode.getNumRows();
   int numColumns = sourceCode.getNumColumns();
   visualizationData = new String[numRows][numColumns + 1];

   for (int row = 0; row &lt; numRows; row++) {
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);
     for (int column = 0; column &lt; numColumns; column++) {
       visualizationData[row][column + 1] = sourceCode.get(row, column);
     }
   }
 }
 return visualizationData;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMUGEN0yEe2-WKuFT59MHQ" name="createTitle" specification="_qRxwct0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMUGEd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qRmKQN0yEe2-WKuFT59MHQ" name="displayVisualization" method="_rMTfA90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEDh8N0yEe2-WKuFT59MHQ" type="_qOz8AN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRnYYN0yEe2-WKuFT59MHQ" name="createHeader" visibility="protected" method="_rMTfBd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEEJAN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRp0oN0yEe2-WKuFT59MHQ" name="createFooter" visibility="protected" method="_rMTfB90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEEJAd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qRutIt0yEe2-WKuFT59MHQ" name="createColumnHeader" visibility="protected" method="_rMTfCd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRvUMN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qRvUMd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRwiU90yEe2-WKuFT59MHQ" name="createVisualizationData" visibility="protected" method="_rMTfDN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRxJYN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qRxJYd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qRxwct0yEe2-WKuFT59MHQ" name="createTitle" visibility="private" method="_rMUGEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qRxwc90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEBFsN0yEe2-WKuFT59MHQ" name="ProgramVisualization" visibility="package" method="_rMTfAN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rECT0N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rEC64N0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNa5WN0yEe2-WKuFT59MHQ">
                  <body>ProgramVisualization will construct a program visualization of 
   * the warp program.
   * 
   * @param warp is Warp that will be visualized</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEBswN0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEC64d0yEe2-WKuFT59MHQ" type="_qRk8IN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qR0MsN0yEe2-WKuFT59MHQ" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_rHaX8N0yEe2-WKuFT59MHQ" client="_qR0MsN0yEe2-WKuFT59MHQ" supplier="_rAepgN0yEe2-WKuFT59MHQ" contract="_rAepgN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMUGEt0yEe2-WKuFT59MHQ" name="compare" specification="_rHa_AN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMUGE90yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMUGFN0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMUGFd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);
		if (result == 0) {
			// tied for priority, so break tie on release time
			result = obj1.priorityComparison(obj2);
		}
		return result; // 0 => tie on priority and release time
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rHa_AN0yEe2-WKuFT59MHQ" name="compare" method="_rMUGEt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHa_Ad0yEe2-WKuFT59MHQ" name="obj1" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHa_At0yEe2-WKuFT59MHQ" name="obj2" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHa_A90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qR2o8N0yEe2-WKuFT59MHQ" name="ReleaseTimeQueue">
              <generalization xmi:id="_qR-kwN0yEe2-WKuFT59MHQ" general="_qR5sQN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJh30t0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJh3090yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMUGFt0yEe2-WKuFT59MHQ" name="ReleaseTimeQueue" specification="_qR4eIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMUGF90yEe2-WKuFT59MHQ" type="_qR2o8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMUGGN0yEe2-WKuFT59MHQ" name="ReleaseTimeQueue" specification="_rEHMUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMUGGd0yEe2-WKuFT59MHQ" name="schedulableObjects" type="_rCpzwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMUGGt0yEe2-WKuFT59MHQ" type="_qR2o8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qR4eIN0yEe2-WKuFT59MHQ" name="ReleaseTimeQueue" visibility="package" method="_rMUGFt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qR5FMN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qR5FMd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qR5FMt0yEe2-WKuFT59MHQ" type="_qR2o8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEHMUN0yEe2-WKuFT59MHQ" name="ReleaseTimeQueue" visibility="package" method="_rMUGGN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rEHMUt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rEHMU90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rEHMUd0yEe2-WKuFT59MHQ" name="schedulableObjects" type="_rCpzwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEHMVN0yEe2-WKuFT59MHQ" type="_qR2o8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSDdQN0yEe2-WKuFT59MHQ" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_rNbgYN0yEe2-WKuFT59MHQ">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the
WARP system.
&lt;p>

Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability
value of 0.0.) &lt;br>
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +
M*PrevSrcNodeState &lt;br>
This value represents the probability that the message as been received by the node SinkNode.
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with
SinkNode as a listener.
&lt;p>

The last probability state value for any node is the reliability of the message reaching that
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode
probability.
&lt;p>

CS2820 Spring 2023 Project: Implement this class to compute the probabilities the comprise the
ReliablityMatrix, which is the core of the file visualization that is requested in Warp.
&lt;p>

To do this, you will need to retrieve the program source, parse the instructions for each node,
in each time slot, to extract the src and snk nodes in the instruction and then apply the message
success probability equation defined above.
&lt;p>

I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and
snk nodes from the instruction string in a program schedule time slot.

@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJie4N0yEe2-WKuFT59MHQ" name="onlyNumFaultsConstructor" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJie4t0yEe2-WKuFT59MHQ" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJie490yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJie5d0yEe2-WKuFT59MHQ" name="e2e" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJjF8N0yEe2-WKuFT59MHQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJjF8t0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJjF890yEe2-WKuFT59MHQ" value="0.9"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMUGG90yEe2-WKuFT59MHQ" name="ReliabilityAnalysis" specification="_rERkYd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMUGHN0yEe2-WKuFT59MHQ" name="program" type="_qQ6NwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMUGHd0yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMUtIN0yEe2-WKuFT59MHQ" name="ReliabilityAnalysis" specification="_rHbmEt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMUtId0yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMUtIt0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMUtI90yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.e2e = e2e;
		this.minPacketReceptionRate = minPacketReceptionRate;
		onlyNumFaultsConstructor = false;
		// TODO implement this operation
		//throw new UnsupportedOperationException(&quot;not implemented&quot;);
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMVUMN0yEe2-WKuFT59MHQ" name="ReliabilityAnalysis" specification="_qSFScN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMVUMd0yEe2-WKuFT59MHQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMVUMt0yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.numFaults = numFaults;
   onlyNumFaultsConstructor = true;
	   // TODO implement this operation
   //throw new UnsupportedOperationException(&quot;not implemented&quot;);
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMVUM90yEe2-WKuFT59MHQ" name="verifyReliabilities" specification="_qSFSdd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMVUNN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub
    return true;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMVUNd0yEe2-WKuFT59MHQ" name="numTxPerLinkAndTotalTxCost" specification="_rESygN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMVUNt0yEe2-WKuFT59MHQ" name="flow" type="_qN3g0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMVUN90yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;Integer> returnArrayList = new ArrayList&lt;Integer>();
	   if(onlyNumFaultsConstructor) {
 	  var nodesInFlow = flow.nodes;
 	    var nNodesInFlow = nodesInFlow.size();
 	    ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();
 	    /*
 	     * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will
 	     * send the message over an edge, we give the cost to each node.
 	     */
 	    for (int i = 0; i &lt; nNodesInFlow; i++) {
 	      txArrayList.add(numFaults + 1);
 	    }
 	    /*
 	     * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and
 	     * each edge requires at least one successful TX.
 	     */
 	    var numEdgesInFlow = nNodesInFlow - 1;
 	    var maxFaultsInFlow = numEdgesInFlow * numFaults;
 	    txArrayList.add(numEdgesInFlow + maxFaultsInFlow);
 	    
 	    returnArrayList = txArrayList;
	   
	   }else {
		   
		   	ArrayList&lt;Node> nodesInFlow = flow.nodes;
		    
		    // The last entry will contain the worst-case cost of transmitting E2E in isolation
		    int nNodesInFlow = nodesInFlow.size();
		    
		    // Array to track nPushes for each node in this flow (same as nTx per link)
		    ArrayList &lt;Integer> nPushes = new ArrayList&lt;Integer>(nNodesInFlow + 1);
		    for (int i=0;i&lt;nNodesInFlow + 1;i++) {
		    	nPushes.add(0);
		    }
		    
		    int nHops = nNodesInFlow - 1;
		    // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E
		    // reliability for the flow
		    
		    //use the max to handle rounding error when e2e == 1.0
		    Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); 
		    
		    // Now compute reliability of packet reaching each node in the given time slot
		    // Start with a 2-D reliability window that is a 2-D matrix of no size
		    // each row is a time slot, stating at time 0
		    // each column represents the reliability of the packet reaching that node at the
		    // current time slot (i.e., the row it is in)
		    // will add rows as we compute reliabilities until the final reliability is reached
		    // for all nodes.
		    ReliabilityTable reliabilityWindow = new ReliabilityTable();
		    ReliabilityRow newReliabilityRow = new ReliabilityRow();
		    for (int i = 0; i &lt; nNodesInFlow; i++) {
		      newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values
		    }
		    reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0
		    ReliabilityRow tempRow = reliabilityWindow.get(0);
		    
		    ReliabilityRow currentReliabilityRow = (ReliabilityRow)tempRow.clone();
		    
		    currentReliabilityRow.set(0, 1.0); // initialize (i.e., P(packet@FlowSrc) = 1
		    //the analysis will end when the 2e2 reliability matrix is met, 
		    //initially the state is not met and will be 0 with this statement
		    Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);
		    
		    int timeSlot = 0; // start time at 0
		    
		    // change to while and increment increment timeSlot because
		    // we don't know how long this schedule window will last
		    while (e2eReliabilityState &lt; e2e) {
		    	
		      ReliabilityRow prevReliabilityRow = currentReliabilityRow;
		      
		      //would be reliabilityWindow[timeSlot] if working through a schedule
		      
		      currentReliabilityRow = (ReliabilityRow)newReliabilityRow.clone();
		      
		      // Now use each flow:src->sink to update reliability computations
		      // this is the update formula for the state probabilities
		      // nextState = (1 - M) * prevState + M*NextHighestFlowState
		      // use MinLQ for M in above equation
		      // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState

		      for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { 
		    	  // loop through each node in the flow and update the sates for
		    	  // each link (i.e.,sink-> src pair)                                                                                                                                            
		        int flowSrcNodeindex = nodeIndex;
		        int flowSnkNodeindex = nodeIndex + 1;
		        double prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeindex);
		        double prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeindex);
		        Double nextSnkState;
		        
		        // do a push until PrevSnk state > e2e to ensure next node reaches target E2E BUT
		    	// skip if no chance of success (i.e., source doesn't have packet)
		        if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { 
		          //need to continue attempting to Tx, so update current state
		          nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkNodeState) + (minPacketReceptionRate * prevSrcNodeState); 
		          // increment the number of pushes for for this node to snk node
		          nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1);
		        } else {
		          // snkNode has met its reliability. 
		          //Thus move on to the next node and record the reliability met
		          nextSnkState = prevSnkNodeState; 
		        }
		        
		        //probabilities are non-decreasing so update if we were higher by carrying old value forward
		        if (currentReliabilityRow.get(flowSrcNodeindex) &lt; prevReliabilityRow.get(flowSrcNodeindex)) {
		          //carry forward the previous state for the src node, which may get over written later 
		          //by another instruct in this slot.
		        	currentReliabilityRow.set(flowSrcNodeindex, prevReliabilityRow.get(flowSrcNodeindex));
		        }
		        currentReliabilityRow.set(flowSnkNodeindex, nextSnkState);
		      }

		      e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1); 
		      ReliabilityRow currentReliabilityVector = new ReliabilityRow();
		      //convert the row to a vector so we can add it to the reliability window
		      
		      currentReliabilityVector = (ReliabilityRow)currentReliabilityRow.clone() ;
		      if (timeSlot &lt; reliabilityWindow.size()) {
		        reliabilityWindow.set(timeSlot, currentReliabilityVector);
		      } else {
		        reliabilityWindow.add(currentReliabilityVector);
		      }
		      timeSlot += 1; // increase to next time slot
		    }
		    int size = reliabilityWindow.size();
		    //The total (worst-case) cost to transmit E2E in isolation with specified 
		    //reliability target is the number of rows in the reliabilityWindow
		    nPushes.set(nNodesInFlow, size);
		    returnArrayList = (ArrayList&lt;Integer>)nPushes.clone();
	   }
	   
	   return returnArrayList;
</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qSFScN0yEe2-WKuFT59MHQ" name="ReliabilityAnalysis" method="_rMVUMN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qSFSct0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qSFSc90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qSFScd0yEe2-WKuFT59MHQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qSFSdN0yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qSFSdd0yEe2-WKuFT59MHQ" name="verifyReliabilities" method="_rMVUM90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qSF5gN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qSF5gd0yEe2-WKuFT59MHQ" name="getReliabilities">
                <ownedParameter xmi:id="_rESLct0yEe2-WKuFT59MHQ" type="_qSSGwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rERkYd0yEe2-WKuFT59MHQ" name="ReliabilityAnalysis" method="_rMUGG90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rERkY90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rESLcN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rERkYt0yEe2-WKuFT59MHQ" name="program" type="_qQ6NwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rESLcd0yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rESygN0yEe2-WKuFT59MHQ" name="numTxPerLinkAndTotalTxCost" method="_rMVUNd0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNbgYd0yEe2-WKuFT59MHQ">
                  <body>numTxPerLinkAndTotalTxCost creates an ArrayList with numbers that correspond to the nodes in the flow
    * that hold the cost of transmissions then computes the max transmissions and adds it to the array list
    * 
    * @param flow takes in a flow
    * 
    * @return ArrayList that has number of transmission attempts per link and total transmission cost</body>
                </ownedComment>
                <ownedParameter xmi:id="_rESygd0yEe2-WKuFT59MHQ" name="flow" type="_qN3g0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHcNJN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHbmEt0yEe2-WKuFT59MHQ" name="ReliabilityAnalysis" method="_rMUtIN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHcNId0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHcNIt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHbmE90yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHcNIN0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHcNI90yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_qSHusN0yEe2-WKuFT59MHQ" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_rNbgYt0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_qSI80N0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" type="_rHXUoN0yEe2-WKuFT59MHQ" isReadOnly="true"/>
              <ownedAttribute xmi:id="_qSMnMN0yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSN1UN0yEe2-WKuFT59MHQ" name="ReliabilityRow">
              <generalization xmi:id="_rEWc4N0yEe2-WKuFT59MHQ" general="_qSkaoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJjtAN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJjtAd0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMV7QN0yEe2-WKuFT59MHQ" name="ReliabilityRow" specification="_qSPDcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMV7Qd0yEe2-WKuFT59MHQ" type="_qSN1UN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMV7Qt0yEe2-WKuFT59MHQ" name="ReliabilityRow" specification="_rHc0MN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMV7Q90yEe2-WKuFT59MHQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMV7RN0yEe2-WKuFT59MHQ" name="element" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMV7Rd0yEe2-WKuFT59MHQ" type="_qSN1UN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMV7Rt0yEe2-WKuFT59MHQ" name="ReliabilityRow" specification="_rHdbQd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMV7R90yEe2-WKuFT59MHQ" name="rowArray" type="_rHXUoN0yEe2-WKuFT59MHQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMV7SN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMV7Sd0yEe2-WKuFT59MHQ" type="_qSN1UN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(rowArray);
   	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qSPDcN0yEe2-WKuFT59MHQ" name="ReliabilityRow" method="_rMV7QN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qSPqgN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qSPqgd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qSPqgt0yEe2-WKuFT59MHQ" type="_qSN1UN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHc0MN0yEe2-WKuFT59MHQ" name="ReliabilityRow" visibility="package" method="_rMV7Qt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHc0M90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHc0NN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHc0Md0yEe2-WKuFT59MHQ" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHc0Mt0yEe2-WKuFT59MHQ" name="element" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHdbQN0yEe2-WKuFT59MHQ" type="_qSN1UN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHdbQd0yEe2-WKuFT59MHQ" name="ReliabilityRow" visibility="package" method="_rMV7Rt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHdbQ90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHdbRN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHdbQt0yEe2-WKuFT59MHQ" name="rowArray" type="_rHXUoN0yEe2-WKuFT59MHQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rHdbRt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHdbRd0yEe2-WKuFT59MHQ" type="_qSN1UN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSSGwN0yEe2-WKuFT59MHQ" name="ReliabilityTable">
              <generalization xmi:id="_rEY5IN0yEe2-WKuFT59MHQ" general="_qToxoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJjtAt0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJjtA90yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMV7St0yEe2-WKuFT59MHQ" name="ReliabilityTable" specification="_qSVKEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMV7S90yEe2-WKuFT59MHQ" type="_qSSGwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
   	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMWiUN0yEe2-WKuFT59MHQ" name="ReliabilityTable" specification="_qSWYMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMWiUd0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMWiUt0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMWiU90yEe2-WKuFT59MHQ" type="_qSSGwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
   		for(int i=0; i &lt; row; i++) {
   			ReliabilityRow emptyRow = new ReliabilityRow();
   			for(int j=0; j &lt; column; j++) {
   				emptyRow.add(0.0);
   			}
   			this.add(emptyRow);
   		}
   	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qSVKEN0yEe2-WKuFT59MHQ" name="ReliabilityTable" method="_rMV7St0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qSVxIN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qSVxId0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qSVxIt0yEe2-WKuFT59MHQ" type="_qSSGwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qSWYMN0yEe2-WKuFT59MHQ" name="ReliabilityTable" visibility="package" method="_rMWiUN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qSW_Qt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qSW_Q90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qSW_QN0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qSW_Qd0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qSW_RN0yEe2-WKuFT59MHQ" type="_qSSGwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSYNYN0yEe2-WKuFT59MHQ" name="ReliabilityVisualization">
              <ownedComment xmi:id="_rNbgY90yEe2-WKuFT59MHQ">
                <body>ReliabilityVisualization creates the visualizations for
the reliability analysis of the WARP program. &lt;p>

CS2820 Spring 2023 Project: Implement this class to create
the file visualization that is requested in Warp.

@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_rEdKkN0yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJjtBN0yEe2-WKuFT59MHQ" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJkUEN0yEe2-WKuFT59MHQ" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJkUEd0yEe2-WKuFT59MHQ" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJkUEt0yEe2-WKuFT59MHQ" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJkUE90yEe2-WKuFT59MHQ" name="warp" visibility="private" type="_qUzPQN0yEe2-WKuFT59MHQ" association="_rPCC4d0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJkUFd0yEe2-WKuFT59MHQ" name="ra" visibility="private" type="_qSDdQN0yEe2-WKuFT59MHQ" association="_rPCp8d0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMWiVN0yEe2-WKuFT59MHQ" name="ReliabilityVisualization" specification="_rEauUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMWiVd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMWiVt0yEe2-WKuFT59MHQ" type="_qSYNYN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);
   		this.warp = warp;
   		this.ra = warp.toReliabilityAnalysis();
   	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rEauUN0yEe2-WKuFT59MHQ" name="ReliabilityVisualization" visibility="package" method="_rMWiVN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rEb8cN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rEcjgN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rEbVYN0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEcjgd0yEe2-WKuFT59MHQ" type="_qSYNYN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSZbgN0yEe2-WKuFT59MHQ" name="ReliabilityVisualizationTest" visibility="package">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMWiV90yEe2-WKuFT59MHQ" name="displayVisualizationTest" specification="_qSaCkN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMWiWN0yEe2-WKuFT59MHQ" name="createHeader" specification="_qSbQs90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMWiWd0yEe2-WKuFT59MHQ" name="createData" specification="_qSds8N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;);
		//call to ReliabilityAnalysis
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMWiWt0yEe2-WKuFT59MHQ" name="createTitle" specification="_qSfiIt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>fail(&quot;Not yet implemented&quot;);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qSaCkN0yEe2-WKuFT59MHQ" name="displayVisualizationTest" visibility="package" method="_rMWiV90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qSbQs90yEe2-WKuFT59MHQ" name="createHeader" visibility="package" method="_rMWiWN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qSds8N0yEe2-WKuFT59MHQ" name="createData" visibility="package" method="_rMWiWd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qSfiIt0yEe2-WKuFT59MHQ" name="createTitle" visibility="package" method="_rMWiWt0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSgJMd0yEe2-WKuFT59MHQ" name="ReportVisualization">
              <generalization xmi:id="_rElGY90yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJk7Id0yEe2-WKuFT59MHQ" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJk7It0yEe2-WKuFT59MHQ" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJk7I90yEe2-WKuFT59MHQ" name="content" visibility="private" type="_qNLkUN0yEe2-WKuFT59MHQ" association="_rPCp9N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJliMd0yEe2-WKuFT59MHQ" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMXJYN0yEe2-WKuFT59MHQ" name="ReportVisualization" specification="_rEj4QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMXJYd0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMXJYt0yEe2-WKuFT59MHQ" name="warp" type="_qTUokN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMXJY90yEe2-WKuFT59MHQ" name="content" type="_qNLkUN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMXJZN0yEe2-WKuFT59MHQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMXJZd0yEe2-WKuFT59MHQ" type="_qSgJMd0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);
		this.content = content;
		this.title = title;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMXJZt0yEe2-WKuFT59MHQ" name="visualization" specification="_qShXUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMXJZ90yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return createReport();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMXwcN0yEe2-WKuFT59MHQ" name="createReport" specification="_qSilct0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMXwcd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description report;
		if (content.size() > 0) {
			report = new Description(new String (title + &quot; Report&quot;));
			report.addAll(content);
		} else {
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));
		}
		return report;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qShXUN0yEe2-WKuFT59MHQ" name="visualization" method="_rMXJZt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rElGYd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qSilct0yEe2-WKuFT59MHQ" name="createReport" visibility="private" method="_rMXwcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rElGYt0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEj4QN0yEe2-WKuFT59MHQ" name="ReportVisualization" visibility="package" method="_rMXJYN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rEkfVN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rEkfVd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rEkfUN0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEkfUd0yEe2-WKuFT59MHQ" name="warp" type="_qTUokN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEkfUt0yEe2-WKuFT59MHQ" name="content" type="_qNLkUN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEkfU90yEe2-WKuFT59MHQ" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rElGYN0yEe2-WKuFT59MHQ" type="_qSgJMd0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSkaoN0yEe2-WKuFT59MHQ" name="Row">
              <generalization xmi:id="_rHepZt0yEe2-WKuFT59MHQ" general="_q_dV0N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJliM90yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJmJQN0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMYXgN0yEe2-WKuFT59MHQ" name="Row" specification="_qSlowN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMYXgd0yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMYXgt0yEe2-WKuFT59MHQ" name="Row" specification="_rHeCUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMYXg90yEe2-WKuFT59MHQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMYXhN0yEe2-WKuFT59MHQ" name="element" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMYXhd0yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		for (int i=0; i &lt; numElements; i++) {  
			this.add(element); // create the the row initialized with element
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMY-kN0yEe2-WKuFT59MHQ" name="Row" specification="_rHepYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMY-kd0yEe2-WKuFT59MHQ" name="rowArray" type="_rG8d4N0yEe2-WKuFT59MHQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMY-kt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMY-k90yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		for (int i=0; i &lt; rowArray.length; i++) {  
			this.add(rowArray[i]); // create the the row initialized with rowArray
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMY-lN0yEe2-WKuFT59MHQ" name="Row" specification="_qSm24N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMY-ld0yEe2-WKuFT59MHQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMY-lt0yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(numElements);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qSlowN0yEe2-WKuFT59MHQ" name="Row" method="_rMYXgN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qSlowd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qSlowt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qSlow90yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qSm24N0yEe2-WKuFT59MHQ" name="Row" visibility="package" method="_rMY-lN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qSoFAd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qSosEN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qSoFAN0yEe2-WKuFT59MHQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qSosEd0yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHeCUN0yEe2-WKuFT59MHQ" name="Row" visibility="package" method="_rMYXgt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHeCU90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHeCVN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHeCUd0yEe2-WKuFT59MHQ" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHeCUt0yEe2-WKuFT59MHQ" name="element" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHeCVd0yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHepYN0yEe2-WKuFT59MHQ" name="Row" visibility="package" method="_rMY-kN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHepYt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHepY90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHepYd0yEe2-WKuFT59MHQ" name="rowArray" type="_rG8d4N0yEe2-WKuFT59MHQ">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rHepZd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHepZN0yEe2-WKuFT59MHQ" type="_qSkaoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSrvYN0yEe2-WKuFT59MHQ" name="SchedulableObjectQueue">
              <generalization xmi:id="_qSuLoN0yEe2-WKuFT59MHQ" general="_qR5sQN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJmJQd0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJmJQt0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMY-l90yEe2-WKuFT59MHQ" name="SchedulableObjectQueue" specification="_rHf3gN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMY-mN0yEe2-WKuFT59MHQ" name="comparitor" type="_rAepgN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMY-md0yEe2-WKuFT59MHQ" type="_qSrvYN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMY-mt0yEe2-WKuFT59MHQ" name="SchedulableObjectQueue" specification="_rHgekd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMY-m90yEe2-WKuFT59MHQ" name="comparitor" type="_rAepgN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMY-nN0yEe2-WKuFT59MHQ" name="schedulableObjects" type="_rCpzwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMY-nd0yEe2-WKuFT59MHQ" type="_qSrvYN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(comparitor);
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rHf3gN0yEe2-WKuFT59MHQ" name="SchedulableObjectQueue" visibility="package" method="_rMY-l90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHf3gt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHf3g90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHf3gd0yEe2-WKuFT59MHQ" name="comparitor" type="_rAepgN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHf3hN0yEe2-WKuFT59MHQ" type="_qSrvYN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHgekd0yEe2-WKuFT59MHQ" name="SchedulableObjectQueue" visibility="package" method="_rMY-mt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHgelN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHgeld0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHgekt0yEe2-WKuFT59MHQ" name="comparitor" type="_rAepgN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHgek90yEe2-WKuFT59MHQ" name="schedulableObjects" type="_rCpzwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHhFoN0yEe2-WKuFT59MHQ" type="_qSrvYN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qSxO8N0yEe2-WKuFT59MHQ" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_rNcHcN0yEe2-WKuFT59MHQ">
                <body>Schedule builds a non-preemptive, priority schedule 
for the Partially Ordered Set (Poset) using numChannels. 
It ensures, precedence constraints are preserved, and 
reports deadline misses.

@author sgoddard2
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJmJQ90yEe2-WKuFT59MHQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJmJRN0yEe2-WKuFT59MHQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJmwUN0yEe2-WKuFT59MHQ" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJmwUt0yEe2-WKuFT59MHQ" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJmwVN0yEe2-WKuFT59MHQ" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJmwVd0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJnXYd0yEe2-WKuFT59MHQ" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJnXY90yEe2-WKuFT59MHQ" name="schedule" visibility="protected" type="_qTDi0N0yEe2-WKuFT59MHQ" association="_rPDRAd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJn-cN0yEe2-WKuFT59MHQ" name="poset" visibility="protected" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rPD4Ed0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMZloN0yEe2-WKuFT59MHQ" name="Schedule" specification="_rEoJsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMZlod0yEe2-WKuFT59MHQ" name="poset" type="_qQNDIN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMZlot0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMZlo90yEe2-WKuFT59MHQ" type="_qSxO8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;
		this.numChannels = numChannels;
		var maxPhase = poset.getMaxPhase();
		endScheduleTime = poset.getHyperPeriod();
		if (maxPhase > 0) {
			/* need to schedule longer to cover start-up period */
			endScheduleTime = maxPhase + 2*endScheduleTime ;
		}
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);
		schedulable = true;
		buildSchedule();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMZlrt0yEe2-WKuFT59MHQ" name="getSchedule" specification="_qS5Kwd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMZlr90yEe2-WKuFT59MHQ" type="_qTDi0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return schedule;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMaMsN0yEe2-WKuFT59MHQ" name="buildSchedule" specification="_qS5x0N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>var next = poset.getNextActivation();
		while (next != null) {
			/* Add next to the schedule if max of its release time 
			 * and end time is less than the endScheduleTime.
			 * Otherwise, its releaseTime is >= endScheduleTime
			 * or endTime >= currentTime, which means can't
			 * schedule at this time.
			 */
			if (!addToSchedule(next)) {
				schedulable = false;
				reportNotSchedulable(next);
				/* Record unschedulable element */
				fakeSchedulingToTestRest(next);
				next.setNextReleaseTime(next.getEndTime());
				if (next.getReleaseTime() &lt; endScheduleTime) {
					poset.addActivation(next);
				}
			} else {
				/* update the next release time and add it back into
				 * the priority queue
				 */
				next.setNextReleaseTime(next.getEndTime());
				if (next.getReleaseTime() &lt; endScheduleTime) {
					poset.addActivation(next);
				}

			}
			next = poset.getNextActivation();
		}
		print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMaMsd0yEe2-WKuFT59MHQ" name="toProgram" specification="_qS5x0d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMaMst0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();
		var numNodes = nodeNames.length;
		var program = new ProgramSchedule(endScheduleTime,numNodes);
		CodeFragment codeFragment = null;
		var duration = 0; // default duration for SLEEP;
		String name = null;
		var startTime = 0;
		var endTime = 0;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();
		
		if (!schedulable) {
			/* not Schedulable, so we will not create code */
			return program; // return empty program
		}
		
		/* build the nodeIndexMap by putting nodes in alphabetic
		 * order and then hashing its name to its rank
		 */
		for (int i = 0; i &lt; numNodes; i++) {
			nodeIndexMap.put(nodeNames[i], i);
		}
		
		for (int channel = 0; channel &lt; numChannels; channel++) {
			for (int time = 0; time &lt; endScheduleTime; time++) {
				var entry = schedule.get(channel,time);
				if (entry == null) {
					/* no entry here, so instruction will be SLEEP instruction */
					codeFragment = new CodeFragment();
					startTime = time;
					endTime = time;
					name = &quot;Empty&quot;;
				} else {
					/* create the codeFragment for this activation entry */
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),
							entry.getCoordinators(),channel);
					startTime = entry.getStartTime();
					endTime = entry.getEndTime();
					name = entry.getName();
					duration =  endTime - startTime + 1;
					if (duration > codeFragment.size()) {
						/* for combination fragments, we can sometimes generate
						 * more efficient code than originally thought. So,
						 * update schedule by replacing the entry with null
						 * and update the activation with the the new end time.
						 */
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {
							schedule.set(channel,endTime-k,null);
						}
						endTime = codeFragment.size() + startTime - 1;
						entry.setEndTime(endTime);
						
					}
				}
				duration =  endTime - startTime + 1;
				/* duration can be &lt; fragment size  when two activations 
				 * were combined but they had different delta values. 
				 * The larger was used, but we should make sure duration isn't
				 * > size, else we may overwrite something. Just report for now.
				 */
				if (duration > codeFragment.size()) {
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, 
							name,duration, codeFragment.size());
				} else if (time != startTime ){
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, 
							name, time, startTime);

				} else {
					var instructions = codeFragment.instructions();
					var coordinator = codeFragment.getCoordinator();

					if (coordinator != null) {
						/* coordinator is null the entry is sleep,
						 * which happens when the schedule entry was null.
						 * We skip this entry and then replace nulls in the
						 * program with sleep instructions at the end
						 */
						for (int i = 0; i &lt; duration; i++) {
							var instr = instructions.get(i);
							/* enter the instruciton in the program */
							var row = time+i;
							var column = nodeIndexMap.get(coordinator);		
							program.set(row,column,instr);

							/* get the listeners from the instruction 
							 * and insert the wait() instructions into
							 * the program for each listener
							 * */
							var dsl = new WarpDSL();
							var instructionParametersArray = dsl.getInstructionParameters(instr); 
							for (InstructionParameters fragment: instructionParametersArray) {
								String listener = fragment.getListener();
								if(!listener.equals(UNKNOWN)) {
									/* need to add a wait instruction for node listener
									 * wait(#channel)
									 * at time,listener location of program table
									 */
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));
								}
							}
						}
					}
					time += duration-1;
				}

			}
		}
		replaceNullWithSleep(program);
		return program;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMaMs90yEe2-WKuFT59MHQ" name="replaceNullWithSleep" specification="_rEpX0d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMaMtN0yEe2-WKuFT59MHQ" name="program" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var rows = program.getNumRows();
		var columns = program.getNumColumns();

		for (int i = 0; i &lt; rows; i++) {
			for (int j = 0; j &lt; columns; j++) {
				var entry = program.get(i,j);
				if (entry == null) {
					program.set(i, j, CodeFragment.sleep());
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMaMtd0yEe2-WKuFT59MHQ" name="fakeSchedulingToTestRest" specification="_rEpX090yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMaMtt0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();
		var startTime = fakeTime;
		var channel = numChannels; // use last channel
		if (pred != null) {
			/* remove pred end time */
			pred.pollEndTimes(); 
		} 
		next.setStartTime(next.getReleaseTime());
		var duration = next.getExecutionDuration();
		fakeTime = startTime + duration - 1;
		if (fakeTime >= endScheduleTime) {
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);
			print();
		}
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());
		/* Add the endTime to the elements endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		next.addToEndTimes(endScheduleTime); 
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		for (int i = startTime; i &lt;= fakeTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		fakeTime++;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMaMt90yEe2-WKuFT59MHQ" name="getChannelAndSetStartTime" specification="_rEpX1d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMaMuN0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMaMud0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();
		var channel = numChannels; // default is no channel available
		var endTime = endScheduleTime; // duration of the schedule
		schedulableObject.setStartTime(endTime);
		schedulableObject.setEndTime(endTime);
		/* Create a flag indicating it might be possible to combine
		 * to partitions. This flag will be used to create a channel
		 * affinity, in case scheduler wants to combine to partitions.
		 */
		var pred = schedulableObject.getPredecessor();
		if (pred != null) {
			/* peek at the head of the endTimes for pred */
			var predEndTime = pred.peekEndTimes();
			if (predEndTime == null) {
				return numChannels; // return indicates no channel/time
			} else if (predEndTime >= time) {
				/* can't schedule here; need to look later */
				time = predEndTime+1;
			} 
		}
		var scheduleLocation = findChannelAndTime(time,schedulableObject );
		channel = scheduleLocation.getChannel();
		time = scheduleLocation.getTime();

		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {
			/* Found a channel with no conflicts.
			 * Set the object's start time to the that
			 * time.
			 */
			schedulableObject.setStartTime(time);

		}
		return channel;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMaMut0yEe2-WKuFT59MHQ" name="findChannelAndTime" specification="_rEr0EN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMaMu90yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMaMvN0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMaMvd0yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available 
		var duration = schedulableObject.getExecutionDuration();
		
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {
			time ++; //+= duration+1;
		}
		if (time >= endScheduleTime) {
			/* no conflict time available */
			return new ScheduleLocation(channel, time);	
		} 
		
		/* can schedule at current value of time, so find the best channel.
		 * Bias toward and empty channel at near lowest end of spectrum */
		for (int i = numChannels-1; i >= 0 ; i--) {
			/* Start at numChannels and work down to 0
			 * checking for conflicts and finding an
			 * empty slot at the same time. This will
			 * result in the lowest possible channel
			 * being used if their are no conflicts
			 * with any channel entries.
			 * 
			 * This version combines entries as soon as.
			 * possible, without looking for other, low-channel
			 * combinations.
			 */
			// var entry = schedule.get(i,time);
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {
				var priorEntry = schedule.get(i, time-1);
				if (priorEntry != null) {
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; 
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {
						channel = i;
						time = priorEntry.getStartTime();
						break;
					}
				}
			}
			if (isAvailable(schedulableObject, i, time, duration)) {
				channel = i;
			}

		}
		/* no time and channel found in interval [time, time+duration]
		 * so, advance time and check again
		 */
		if (channel == numChannels) {
			return continueSearch(time,schedulableObject);
		} else {
			return new ScheduleLocation(channel, time);	
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMazwN0yEe2-WKuFT59MHQ" name="continueSearch" specification="_rEsbIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMazwd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMazwt0yEe2-WKuFT59MHQ" name="activation" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMazw90yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMba0N0yEe2-WKuFT59MHQ" name="noOtherChannelConflicts" specification="_rEsbJN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMba0d0yEe2-WKuFT59MHQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMba0t0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMba090yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMba1N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;

		if (time >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {
			var entry = schedule.get(channel,time);

			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {
				if (entry.conflictExists(schedulableObject)) {
					result = false;
					return result;
				}
			} 
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMba1d0yEe2-WKuFT59MHQ" name="conflictsExist" specification="_rEtCMt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMba1t0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMba190yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMba2N0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMba2d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;

		if (time+duration >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		if (duration &lt;= 0) {
			result  = true;
		} else {
			for (Integer i = time; i &lt; time+duration; i++ ) {
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {
					var entry = schedule.get(channel,i);
					if (entry != null &amp;&amp; obj != null) {
						if (entry.conflictExists(obj)) {
							result = true;
							return result;
						}
					} 
				}
			}	
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMcB4N0yEe2-WKuFT59MHQ" name="freeOfCoordinatorConflicts" specification="_rEtCN90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMcB4d0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMcB4t0yEe2-WKuFT59MHQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB490yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB5N0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB5d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;

		if (time+(duration-1) >= endScheduleTime) {
			/* not enough time left in the schedule,
			 * so return false 
			 */
			return false;
		}
		if (duration &lt;= 0) {
			result  = false;
		} else {
			for (Integer i = time; i &lt; time+duration; i++ ) {
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {
					var entry = schedule.get(channel,time);
					if (entry != null &amp;&amp; obj != null) {
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {
							result = false; // same coordinator is scheduled
							return result;
						}
					} 
				}
			}	
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMcB5t0yEe2-WKuFT59MHQ" name="isAvailable" specification="_rEtpQ90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMcB590yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMcB6N0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB6d0yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB6t0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB690yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;
		
		if (conflictsExist(a1,start,duration)) {
			return false;
		}
		for (Integer j = start; j &lt; start+duration; j++ ) {
			var currentEntry = schedule.get(channel,j);
			if (currentEntry != null) {
				if (currentEntry.canCombine(a1)) {
					/* no conflict with this entry, and can
					 * combine so check for combined entry time
					 *  to see if we can combine activations
					 */
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);
					var combinedEntry = new CombinedActivation(currentEntry,a1);
					var searchTime = currentEntry.getEndTime()+1;
					var searchLength = combinedDuration - (duration-(j-start));
					return isAvailable(combinedEntry, channel, searchTime, searchLength);
				} else {
					available = false;
					break;
				}
			}
		}
		if (available) {
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);
		}
		return available;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMcB7N0yEe2-WKuFT59MHQ" name="isAvailable" specification="_rEtpSd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMcB7d0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMcB7t0yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB790yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB8N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;
		
		for (Integer channel = 0; channel &lt; numChannels; channel++) {
			if (isAvailable(a1,channel,start,duration)) {
			available = true;
			break;
			}
		}
		return available;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMcB8d0yEe2-WKuFT59MHQ" name="timeRemaining" specification="_qS7nAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMcB8t0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB890yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB9N0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMcB9d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;

		var row = schedule.get(channel);
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {
			if (row.get(i) != null) {
				break;
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMco8N0yEe2-WKuFT59MHQ" name="canCombineEntriesInPlace" specification="_rEuQVN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMco8d0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMco8t0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMco890yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (a1 == null || a2 == null) {
			return false;
		}
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); 
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); 
		
		if (a2.canCombine(a1)) {
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);
			 var newEndTime = minStartTime + combinedDuration - 1;
			 if (newEndTime &lt;= maxEndTime) {
				result = true;
			 }
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMco9N0yEe2-WKuFT59MHQ" name="combinedEntriesInPlace" specification="_rEuQWN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMco9d0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMco9t0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMco990yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMco-N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;
		if (canCombineEntriesInPlace(a1,a2)) {
			var entry = new CombinedActivation(a1, a2);
			var startTime = entry.getStartTime();
			var endTime = entry.getEndTime();
			for (int i = startTime; i &lt;= endTime; i++) {
				/* Add this object to the schedule for the
				 * from startTime to endTime.
				 */
				schedule.set(channel, i, entry);
			}
			result = true;
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMdQAN0yEe2-WKuFT59MHQ" name="addToSchedule" specification="_rEu3ZN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMdQAd0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMdQAt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);
		if (channel == numChannels) {
			return false;
		}
		/* found a time and channel  that are valid */
		Activation currentEntry = null;	
		var combineTime = endScheduleTime;
		var startTime = next.getStartTime(); // set by getChannel()
		var duration = next.getExecutionDuration();	
		var endTime = startTime + duration - 1;
		/* Check the schedule to see if we need to 
		 * combine next with a higher priority entry 
		 * in the schedule during its execution
		 */
		for (int i = startTime; i &lt; startTime + duration; i++) {
			currentEntry = schedule.get(channel,i);
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {
				/* found an entry to combine, record the time,
				 * update the combined duration and new
				 * endTime, then exit the loop
				 */
				/* need to check if combined time is available or
				 * if we have to combine yet another entry 
				 */
				 var endCurrentEntry = currentEntry.getEndTime();
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);
				 var newEndTime = startTime + combinedDuration - 1;
				 /* need to check to make sure there are no conflicts on other 
				  * channels for this new interval
				  */
				 var available = isAvailable(next, channel, startTime, combinedDuration);
				 if (available) {	 
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;
					 if (additionalTimeNeeded > 0) {
						 /* see if we can combine the two existing adjacent entries
						  * in place. If so, then try to recursively schedule next
						  */
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);
						 if (additionalCombine != null) {
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {
								 return false;
							 }
							 addToSchedule(next);
							 return true;
						 }
					 }
					 combineTime = i;
					 duration = next.getCombinedExecutionDuration(currentEntry);
					 endTime = startTime + duration - 1;
					 break;
				 }
			}
		}
		next.setEndTime(endTime);
		var responseTime = endTime - next.getReleaseTime();
		if (responseTime > next.getDeadline()) {
			return false; // unable to schedule this entry
		}
		/* Add the endTime to the elements endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		next.addToEndTimes(endTime); 
		/* remove predecessor end time that matches this start time */
		var pred = next.getPredecessor();
		if (pred != null) {
			pred.pollEndTimes(); 
		}
		/* Create a new entry, based on next, to be entered
		 * into the scheduling tale
		 */
		var entry = new Activation(next, startTime);
		if (combineTime &lt; endScheduleTime) {
			/* change entry to point to combinedActivation
			 * and set startTime to the beginning of the 
			 * combined entries */
			var combinedActivation = new CombinedActivation(currentEntry, entry);
			entry = combinedActivation;
			startTime = entry.getStartTime();
			duration = entry.getExecutionDuration();
			endTime = startTime + duration - 1;
			entry.setEndTime(endTime);
			next.setEndTime(endTime);
		}
		for (int i = startTime; i &lt;= endTime; i++) {
			/* Add this object to the schedule for the
			 * from startTime to endTime.
			 */
			schedule.set(channel, i, entry);
		}
		return true;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMdQA90yEe2-WKuFT59MHQ" name="reportNotSchedulable" specification="_rEu3Z90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMdQBN0yEe2-WKuFT59MHQ" name="object" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMd3EN0yEe2-WKuFT59MHQ" name="printVerbose" specification="_qS81IN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);
		var endSchedule = schedule.get(0).size();
		for (int i = 0; i &lt; numChannels; i++) {
			System.out.printf(&quot;\nChannel: %d&quot;,i);
			var name = UNKNOWN;
			for (int j = 0; j &lt; endSchedule; j++) {
				var entry = schedule.get(i,j);
				if (entry != null) {
					var entryName = entry.getName();
					if (!name.equals(entryName)) {
						name = entryName;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);
					}
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMd3Ed0yEe2-WKuFT59MHQ" name="print" specification="_qS81Id0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);
		for (int i = 0; i &lt; schedule.size(); i++) {
			System.out.printf(&quot;\nChannel: %d: &quot;,i);
			var name = UNKNOWN;
			var startTime = -1;
			for (int j = 0; j &lt; endScheduleTime; j++) {
				var entry = schedule.get(i,j);
				if (entry != null) {
					var entryName = entry.getName();
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {
						/* only print out unique entries (not duplicates in the interval */
						name = entryName;
						startTime = entry.getStartTime();
						System.out.printf(&quot;%s[%d,%d] &quot;, 
								name, entry.getStartTime(),entry.getEndTime());
					} 
				}
			}
		}
		/* report the number of Activations not schedulable, if any */
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);
		var numNotSchedulable = 0; 	
		var name = UNKNOWN;
		var lastStartTime = -1;
		for (int i = 0; i &lt; endScheduleTime; i++) {
			var entry = notSchedulable.get(i);
			if (entry != null) {
				var entryName = entry.getName();
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {
					name = entryName;
					lastStartTime = entry.getStartTime();
					numNotSchedulable++;
				}
			}
		}
		if (numNotSchedulable > 0 ) {
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);
		}
		System.out.println();
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qS5Kwd0yEe2-WKuFT59MHQ" name="getSchedule" method="_rMZlrt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHc90yEe2-WKuFT59MHQ">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEowxN0yEe2-WKuFT59MHQ" type="_qTDi0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qS5x0N0yEe2-WKuFT59MHQ" name="buildSchedule" visibility="private" method="_rMaMsN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qS5x0d0yEe2-WKuFT59MHQ" name="toProgram" method="_rMaMsd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEpX0N0yEe2-WKuFT59MHQ" type="_qRgDoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qS7nAN0yEe2-WKuFT59MHQ" name="timeRemaining" visibility="protected" method="_rMcB8d0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHed0yEe2-WKuFT59MHQ">
                  <body>timeRemaining returns duration minus the number of vacant slots found. 
	 * 
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_qS7nAd0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qS8OEN0yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qS8OEd0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qS8OEt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qS81IN0yEe2-WKuFT59MHQ" name="printVerbose" method="_rMd3EN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qS81Id0yEe2-WKuFT59MHQ" name="print" method="_rMd3Ed0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_rEoJsN0yEe2-WKuFT59MHQ" name="Schedule" visibility="package" method="_rMZloN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rEowwd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rEowwt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rEoJsd0yEe2-WKuFT59MHQ" name="poset" type="_qQNDIN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEowwN0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEoww90yEe2-WKuFT59MHQ" type="_qSxO8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEpX0d0yEe2-WKuFT59MHQ" name="replaceNullWithSleep" visibility="private" method="_rMaMs90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHdN0yEe2-WKuFT59MHQ">
                  <body>Replace all null entries in program with sleep instructions
	 * 
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEpX0t0yEe2-WKuFT59MHQ" name="program" type="_qRgDoN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEpX090yEe2-WKuFT59MHQ" name="fakeSchedulingToTestRest" visibility="private" method="_rMaMtd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEpX1N0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEpX1d0yEe2-WKuFT59MHQ" name="getChannelAndSetStartTime" visibility="protected" method="_rMaMt90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHdd0yEe2-WKuFT59MHQ">
                  <body>getChannel checks for conflicts and if none, returns a free
	 * channel. &lt;br>
	 * If return value == numChannels, then no channel can be assigned
	 * due to either conflicts or no availability.
	 * @param schedulableObject
	 * 
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEpX1t0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEp-4N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEr0EN0yEe2-WKuFT59MHQ" name="findChannelAndTime" visibility="protected" method="_rMaMut0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEr0Ed0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEr0Et0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEr0E90yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEsbIN0yEe2-WKuFT59MHQ" name="continueSearch" visibility="protected" method="_rMazwN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHdt0yEe2-WKuFT59MHQ">
                  <body>continueSearch continues the search for a channel time.&lt;br>
	 * The default implementation continues at time+1 by calling
	 * findChannelAndTime(time+1,schedulableObject). This method
	 * can be overridden to provide preemptive searches or any
	 * other method of continuing the search.
	 * 
	 * @param time
	 * @param activation
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEsbId0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEsbIt0yEe2-WKuFT59MHQ" name="activation" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEsbI90yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rEsbJN0yEe2-WKuFT59MHQ" name="noOtherChannelConflicts" visibility="protected" method="_rMba0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEsbJd0yEe2-WKuFT59MHQ" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEsbJt0yEe2-WKuFT59MHQ" name="schedulableObject" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEtCMN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtCMd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEtCMt0yEe2-WKuFT59MHQ" name="conflictsExist" visibility="protected" method="_rMba1d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEtCM90yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEtCNN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtCNd0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtCNt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEtCN90yEe2-WKuFT59MHQ" name="freeOfCoordinatorConflicts" visibility="protected" method="_rMcB4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEtCON0yEe2-WKuFT59MHQ" name="obj" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEtCOd0yEe2-WKuFT59MHQ" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtpQN0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtpQd0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtpQt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEtpQ90yEe2-WKuFT59MHQ" name="isAvailable" visibility="protected" method="_rMcB5t0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHd90yEe2-WKuFT59MHQ">
                  <body>isAvailable returns true if the schedule for the channel is available in the 
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEtpRN0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEtpRd0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtpRt0yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtpR90yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEtpSN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEtpSd0yEe2-WKuFT59MHQ" name="isAvailable" visibility="protected" method="_rMcB7N0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNcHeN0yEe2-WKuFT59MHQ">
                  <body>isAvailable returns true if the schedule is available in the 
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_rEuQUN0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEuQUd0yEe2-WKuFT59MHQ" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEuQUt0yEe2-WKuFT59MHQ" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEuQU90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEuQVN0yEe2-WKuFT59MHQ" name="canCombineEntriesInPlace" visibility="private" method="_rMco8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEuQVd0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEuQVt0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEuQV90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEuQWN0yEe2-WKuFT59MHQ" name="combinedEntriesInPlace" visibility="private" method="_rMco9N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEu3YN0yEe2-WKuFT59MHQ" name="a1" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEu3Yd0yEe2-WKuFT59MHQ" name="a2" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEu3Yt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rEu3Y90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEu3ZN0yEe2-WKuFT59MHQ" name="addToSchedule" visibility="protected" method="_rMdQAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEu3Zd0yEe2-WKuFT59MHQ" name="next" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rEu3Zt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rEu3Z90yEe2-WKuFT59MHQ" name="reportNotSchedulable" visibility="private" method="_rMdQA90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rEu3aN0yEe2-WKuFT59MHQ" name="object" type="_qI2d8N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_qS05UN0yEe2-WKuFT59MHQ" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_rJn-ct0yEe2-WKuFT59MHQ" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rJn-dN0yEe2-WKuFT59MHQ" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMZlpN0yEe2-WKuFT59MHQ" name="ScheduleLocation" specification="_qS3VkN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rMZlpd0yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;
			this.time = 0;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMZlpt0yEe2-WKuFT59MHQ" name="ScheduleLocation" specification="_qS38ot0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rMZlp90yEe2-WKuFT59MHQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rMZlqN0yEe2-WKuFT59MHQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_rMZlqd0yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;
			this.time = time;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMZlqt0yEe2-WKuFT59MHQ" name="getChannel" specification="_qS4jtN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rMZlq90yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMZlrN0yEe2-WKuFT59MHQ" name="getTime" specification="_qS4jtt0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rMZlrd0yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_qS3VkN0yEe2-WKuFT59MHQ" name="ScheduleLocation" visibility="package" method="_rMZlpN0yEe2-WKuFT59MHQ">
                  <eAnnotations xmi:id="_qS3Vkd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_qS38oN0yEe2-WKuFT59MHQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_qS38od0yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qS38ot0yEe2-WKuFT59MHQ" name="ScheduleLocation" visibility="package" method="_rMZlpt0yEe2-WKuFT59MHQ">
                  <eAnnotations xmi:id="_qS4jsd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_qS4jst0yEe2-WKuFT59MHQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_qS38o90yEe2-WKuFT59MHQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_qS4jsN0yEe2-WKuFT59MHQ" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_qS4js90yEe2-WKuFT59MHQ" type="_qS05UN0yEe2-WKuFT59MHQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qS4jtN0yEe2-WKuFT59MHQ" name="getChannel" visibility="protected" method="_rMZlqt0yEe2-WKuFT59MHQ">
                  <ownedComment xmi:id="_rNcHcd0yEe2-WKuFT59MHQ">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_qS4jtd0yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qS4jtt0yEe2-WKuFT59MHQ" name="getTime" visibility="protected" method="_rMZlrN0yEe2-WKuFT59MHQ">
                  <ownedComment xmi:id="_rNcHct0yEe2-WKuFT59MHQ">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_qS5KwN0yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qTDi0N0yEe2-WKuFT59MHQ" name="ScheduleTable">
              <generalization xmi:id="_rExToN0yEe2-WKuFT59MHQ" general="_qToxoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJolgd0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJpMkN0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMd3Et0yEe2-WKuFT59MHQ" name="ScheduleTable" specification="_qTEJ4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMd3E90yEe2-WKuFT59MHQ" type="_qTDi0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMeeIN0yEe2-WKuFT59MHQ" name="ScheduleTable" specification="_qTEw890yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMeeId0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMeeIt0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMeeI90yEe2-WKuFT59MHQ" type="_qTDi0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(row,column);
		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qTEJ4N0yEe2-WKuFT59MHQ" name="ScheduleTable" visibility="package" method="_rMd3Et0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qTEw8N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qTEw8d0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qTEw8t0yEe2-WKuFT59MHQ" type="_qTDi0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qTEw890yEe2-WKuFT59MHQ" name="ScheduleTable" visibility="package" method="_rMeeIN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qTEw9t0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qTEw990yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qTEw9N0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qTEw9d0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qTFYAN0yEe2-WKuFT59MHQ" type="_qTDi0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qTFYAd0yEe2-WKuFT59MHQ" name="ScheduleTime">
              <ownedAttribute xmi:id="_rJpMkd0yEe2-WKuFT59MHQ" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJpMkt0yEe2-WKuFT59MHQ" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMeeJN0yEe2-WKuFT59MHQ" name="ScheduleTime" specification="_qTJpcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMeeJd0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMeeJt0yEe2-WKuFT59MHQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMeeJ90yEe2-WKuFT59MHQ" type="_qTFYAd0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;
		this.endTime = endTime;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qTJpcN0yEe2-WKuFT59MHQ" name="ScheduleTime" visibility="package" method="_rMeeJN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qTMFsd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qTMFst0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qTK3kN0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qTMFsN0yEe2-WKuFT59MHQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qTMFs90yEe2-WKuFT59MHQ" type="_qTFYAd0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qTMswN0yEe2-WKuFT59MHQ" name="SimulatorInput">
              <ownedComment xmi:id="_rNcugN0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qTN64N0yEe2-WKuFT59MHQ" name="SortedPeriodQueue">
              <generalization xmi:id="_qTTacN0yEe2-WKuFT59MHQ" general="_qR5sQN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJpMk90yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJpMlN0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMeeKN0yEe2-WKuFT59MHQ" name="SortedPeriodQueue" specification="_qTSMUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMeeKd0yEe2-WKuFT59MHQ" type="_qTN64N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMeeKt0yEe2-WKuFT59MHQ" name="SortedPeriodQueue" specification="_rE2MIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMeeK90yEe2-WKuFT59MHQ" name="schedulableObjects" type="_rCpzwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMeeLN0yEe2-WKuFT59MHQ" type="_qTN64N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());
		this.addAll(schedulableObjects);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qTSMUN0yEe2-WKuFT59MHQ" name="SortedPeriodQueue" visibility="package" method="_rMeeKN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qTSMUd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qTSMUt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qTSzYN0yEe2-WKuFT59MHQ" type="_qTN64N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rE2MIN0yEe2-WKuFT59MHQ" name="SortedPeriodQueue" visibility="package" method="_rMeeKt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rE2MIt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rE2MI90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rE2MId0yEe2-WKuFT59MHQ" name="schedulableObjects" type="_rCpzwN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE2MJN0yEe2-WKuFT59MHQ" type="_qTN64N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_qTUokN0yEe2-WKuFT59MHQ" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_rE3aQN0yEe2-WKuFT59MHQ" general="_qSHusN0yEe2-WKuFT59MHQ"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_qTV2sN0yEe2-WKuFT59MHQ" name="ScheduleChoices">
                <ownedLiteral xmi:id="_qTZhEd0yEe2-WKuFT59MHQ" name="PRIORITY"/>
                <ownedLiteral xmi:id="_qTaIIN0yEe2-WKuFT59MHQ" name="RM"/>
                <ownedLiteral xmi:id="_qTaIId0yEe2-WKuFT59MHQ" name="DM"/>
                <ownedLiteral xmi:id="_qTaIIt0yEe2-WKuFT59MHQ" name="RTHART"/>
                <ownedLiteral xmi:id="_qTaII90yEe2-WKuFT59MHQ" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_qTdygN0yEe2-WKuFT59MHQ" name="POSET_RM"/>
                <ownedLiteral xmi:id="_qTgOwN0yEe2-WKuFT59MHQ" name="POSET_DM"/>
                <ownedLiteral xmi:id="_qTgOwd0yEe2-WKuFT59MHQ" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_qTgOwt0yEe2-WKuFT59MHQ" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_qTgOw90yEe2-WKuFT59MHQ" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_qTg10N0yEe2-WKuFT59MHQ" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_qTg10d0yEe2-WKuFT59MHQ" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_qTg10t0yEe2-WKuFT59MHQ" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_qTiD8N0yEe2-WKuFT59MHQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qTj5IN0yEe2-WKuFT59MHQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qTj5Id0yEe2-WKuFT59MHQ" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qTj5It0yEe2-WKuFT59MHQ" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qTkgMN0yEe2-WKuFT59MHQ" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_qTlHQN0yEe2-WKuFT59MHQ" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qTmVYN0yEe2-WKuFT59MHQ" name="SystemFactory">
              <ownedComment xmi:id="_rNdVkN0yEe2-WKuFT59MHQ">
                <body>Factory Class to create a schedule instance.
This factory can be used to create different
types of schedules.
@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfFMN0yEe2-WKuFT59MHQ" name="create" specification="_rE52gd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfFMd0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMfFMt0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfFM90yEe2-WKuFT59MHQ" name="choice" type="_qTV2sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMfFNN0yEe2-WKuFT59MHQ" type="_qUzPQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rE52gd0yEe2-WKuFT59MHQ" name="create" isStatic="true" method="_rMfFMN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rE6dkN0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE6dkd0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rE6dkt0yEe2-WKuFT59MHQ" name="choice" type="_qTV2sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE6dk90yEe2-WKuFT59MHQ" type="_qUzPQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qToxoN0yEe2-WKuFT59MHQ" name="Table">
              <generalization xmi:id="_rHkI8d0yEe2-WKuFT59MHQ" general="_q_dV0N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJpzoN0yEe2-WKuFT59MHQ" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJpzod0yEe2-WKuFT59MHQ" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfFNd0yEe2-WKuFT59MHQ" name="Table" specification="_qTqm0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfFNt0yEe2-WKuFT59MHQ" type="_qToxoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfFN90yEe2-WKuFT59MHQ" name="Table" specification="_qTtDEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfFON0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfFOd0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfFOt0yEe2-WKuFT59MHQ" type="_qToxoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super();
		
		for(int i=0; i &lt; row; i++) {
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();
			for(int j=0; j &lt; column; j++) {
				nullRow.add(null);
			}
			this.add((E) nullRow);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfFO90yEe2-WKuFT59MHQ" name="getNumRows" specification="_qTxUgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfFPN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfFPd0yEe2-WKuFT59MHQ" name="getNumColumns" specification="_qTx7kd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfFPt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;
		var numRows = this.size();
		if (numRows > 0) {
			var lastRow = this.get(numRows-1);
			numColumns = lastRow.size();
		}
		return numColumns;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfFP90yEe2-WKuFT59MHQ" name="set" specification="_rHjh4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfsQN0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfsQd0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfsQt0yEe2-WKuFT59MHQ" name="element" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>E fullRow;
		if (row &lt; this.size()) {
			fullRow = this.get(row);
			if (column &lt; fullRow.size()) {
				fullRow.set(column, element);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfsQ90yEe2-WKuFT59MHQ" name="get" specification="_qT0X0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfsRN0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfsRd0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfsRt0yEe2-WKuFT59MHQ" type="_rG8d4N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>T element = null;
		E fullRow;
		if (row &lt; this.size()) {
			fullRow = this.get(row);
			if (column &lt; fullRow.size()) {
				element = fullRow.get(column);
			}
		}
		return element;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qTqm0N0yEe2-WKuFT59MHQ" name="Table" method="_rMfFNd0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qTrN4N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qTrN4d0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qTrN4t0yEe2-WKuFT59MHQ" type="_qToxoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qTtDEN0yEe2-WKuFT59MHQ" name="Table" method="_rMfFN90yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qTwGYN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qTwGYd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qTu4QN0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qTvfUN0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qTwGYt0yEe2-WKuFT59MHQ" type="_qToxoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qTxUgN0yEe2-WKuFT59MHQ" name="getNumRows" method="_rMfFO90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qTx7kN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qTx7kd0yEe2-WKuFT59MHQ" name="getNumColumns" method="_rMfFPd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qTzJsN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qT0X0N0yEe2-WKuFT59MHQ" name="get" method="_rMfsQ90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qT0-4N0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qT0-4d0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHkI8N0yEe2-WKuFT59MHQ" type="_rG8d4N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHjh4N0yEe2-WKuFT59MHQ" name="set" method="_rMfFP90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHjh4d0yEe2-WKuFT59MHQ" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHjh4t0yEe2-WKuFT59MHQ" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHjh490yEe2-WKuFT59MHQ" name="element" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_qT3bIN0yEe2-WKuFT59MHQ" name="Visualization">
              <ownedComment xmi:id="_rNdVkd0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_qT6ecN0yEe2-WKuFT59MHQ" name="SystemChoices">
                <ownedLiteral xmi:id="_qT-I0N0yEe2-WKuFT59MHQ" name="SOURCE"/>
                <ownedLiteral xmi:id="_qT_W8N0yEe2-WKuFT59MHQ" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_qT_W8d0yEe2-WKuFT59MHQ" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_qT_-AN0yEe2-WKuFT59MHQ" name="LATENCY"/>
                <ownedLiteral xmi:id="_qT_-Ad0yEe2-WKuFT59MHQ" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_qT_-At0yEe2-WKuFT59MHQ" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_qT_-A90yEe2-WKuFT59MHQ" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_qUAlEN0yEe2-WKuFT59MHQ" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_qUBzMN0yEe2-WKuFT59MHQ" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_qUBzMd0yEe2-WKuFT59MHQ" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_qUBzMt0yEe2-WKuFT59MHQ" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_qUCaQN0yEe2-WKuFT59MHQ" name="toDisplay"/>
              <ownedOperation xmi:id="_qUDBUN0yEe2-WKuFT59MHQ" name="toFile"/>
              <ownedOperation xmi:id="_qUDBUd0yEe2-WKuFT59MHQ" name="toString">
                <ownedParameter xmi:id="_qUDoYN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qUEPcN0yEe2-WKuFT59MHQ" name="VisualizationFactory">
              <ownedComment xmi:id="_rNdVkt0yEe2-WKuFT59MHQ">
                <body>Factory Class to create a visualization instance.
This factory can be used to create different
types of visualizations.
@author sgoddard
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfsR90yEe2-WKuFT59MHQ" name="createProgramVisualization" specification="_rE8Swd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfsSN0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMfsSd0yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfsSt0yEe2-WKuFT59MHQ" name="choice" type="_qT6ecN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMfsS90yEe2-WKuFT59MHQ" type="_qT3bIN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMfsTN0yEe2-WKuFT59MHQ" name="createWorkLoadVisualization" specification="_rE850N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMfsTd0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMfsTt0yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMfsT90yEe2-WKuFT59MHQ" name="choice" type="_qUAlEN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMfsUN0yEe2-WKuFT59MHQ" type="_qT3bIN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rE8Swd0yEe2-WKuFT59MHQ" name="createProgramVisualization" isStatic="true" method="_rMfsR90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rE8Swt0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE8Sw90yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rE8SxN0yEe2-WKuFT59MHQ" name="choice" type="_qT6ecN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE8Sxd0yEe2-WKuFT59MHQ" type="_qT3bIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rE850N0yEe2-WKuFT59MHQ" name="createWorkLoadVisualization" isStatic="true" method="_rMfsTN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rE850d0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE850t0yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rE85090yEe2-WKuFT59MHQ" name="choice" type="_qUAlEN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE851N0yEe2-WKuFT59MHQ" type="_qT3bIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qUK9IN0yEe2-WKuFT59MHQ" name="VisualizationImplementation">
              <ownedComment xmi:id="_rNdVk90yEe2-WKuFT59MHQ">
                <body>The VisiualizationImplementation class implements the Visualization interface to display 
a window for the graph from the supplied file.

@author sgoddard
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJpzot0yEe2-WKuFT59MHQ" name="visualization" visibility="private" type="_qNLkUN0yEe2-WKuFT59MHQ" association="_rPEfIN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJqasN0yEe2-WKuFT59MHQ" name="fileContent" visibility="private" type="_qNLkUN0yEe2-WKuFT59MHQ" association="_rPEfI90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJqast0yEe2-WKuFT59MHQ" name="window" visibility="private" type="_qOz8AN0yEe2-WKuFT59MHQ" association="_rPFGMd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJqatN0yEe2-WKuFT59MHQ" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJrBwd0yEe2-WKuFT59MHQ" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJro0d0yEe2-WKuFT59MHQ" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJsP4d0yEe2-WKuFT59MHQ" name="fm" visibility="private" type="_qNr6oN0yEe2-WKuFT59MHQ" association="_rPFtQN0yEe2-WKuFT59MHQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJsP4t0yEe2-WKuFT59MHQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJs28d0yEe2-WKuFT59MHQ" name="warp" visibility="private" type="_qUzPQN0yEe2-WKuFT59MHQ" association="_rPFtQ90yEe2-WKuFT59MHQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJs28t0yEe2-WKuFT59MHQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJs29N0yEe2-WKuFT59MHQ" name="workLoad" visibility="private" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPGUUd0yEe2-WKuFT59MHQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJs29d0yEe2-WKuFT59MHQ" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJteAd0yEe2-WKuFT59MHQ" name="visualizationObject" visibility="private" type="_qUfGMN0yEe2-WKuFT59MHQ" association="_rPG7Yd0yEe2-WKuFT59MHQ"/>
              <interfaceRealization xmi:id="_rE851d0yEe2-WKuFT59MHQ" client="_qUK9IN0yEe2-WKuFT59MHQ" supplier="_qT3bIN0yEe2-WKuFT59MHQ" contract="_qT3bIN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTUN0yEe2-WKuFT59MHQ" name="VisualizationImplementation" specification="_rHlXEt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMgTUd0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMgTUt0yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMgTU90yEe2-WKuFT59MHQ" name="choice" type="_rHlXEN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMgTVN0yEe2-WKuFT59MHQ" type="_qUK9IN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();
 this.warp = warp;
 inputFileName = warp.toWorkload().getInputFileName();
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);
 visualizationObject = null;
 createVisualization(choice);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTVd0yEe2-WKuFT59MHQ" name="VisualizationImplementation" specification="_rHmlMd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMgTVt0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMgTV90yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMgTWN0yEe2-WKuFT59MHQ" name="choice" type="_rHl-Jt0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMgTWd0yEe2-WKuFT59MHQ" type="_qUK9IN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();
 this.workLoad = workLoad;
 inputFileName = workLoad.getInputFileName();
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);
 visualizationObject = null;
 createVisualization(choice);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTWt0yEe2-WKuFT59MHQ" name="toDisplay" specification="_qUNZYN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();
 if (window != null) {
   window.setVisible();
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTW90yEe2-WKuFT59MHQ" name="toFile" specification="_qUSR4d0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTXN0yEe2-WKuFT59MHQ" name="toString" specification="_qUUHEd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMgTXd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTXt0yEe2-WKuFT59MHQ" name="createVisualization" specification="_rHnMQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMgTX90yEe2-WKuFT59MHQ" name="choice" type="_rHlXEN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization
   case SOURCE:
     createVisualization(new ProgramVisualization(warp));
     break;

   case RELIABILITIES:
     // TODO Implement Reliability Analysis Visualization
     createVisualization(new ReliabilityVisualization(warp));
     break;

   case SIMULATOR_INPUT:
     // TODO Implement Simulator Input Visualization
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));
     break;

   case LATENCY:
     // TODO Implement Latency Analysis Visualization
     createVisualization(new LatencyVisualization(warp));
     break;

   case CHANNEL:
     // TODO Implement Channel Analysis Visualization
     createVisualization(new ChannelVisualization(warp));
     break;

   case LATENCY_REPORT:
     createVisualization(new ReportVisualization(fm, warp,
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));
     break;

   case DEADLINE_REPORT:
     createVisualization(
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));
     break;

   default:
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));
     break;
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMgTYN0yEe2-WKuFT59MHQ" name="createVisualization" specification="_rHnMQt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMgTYd0yEe2-WKuFT59MHQ" name="choice" type="_rHl-Jt0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization
   case COMUNICATION_GRAPH:
     // createWarpVisualization();
     createVisualization(new CommunicationGraph(fm, workLoad));
     break;

   case GRAPHVIZ:
     createVisualization(new GraphViz(fm, workLoad.toString()));
     break;

   case INPUT_GRAPH:
     createVisualization(workLoad);
     break;

   default:
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));
     break;
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMg6YN0yEe2-WKuFT59MHQ" name="createVisualization" specification="_rHnMRN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMg6Yd0yEe2-WKuFT59MHQ" name="obj" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>visualization = obj.visualization();
 fileContent = obj.fileVisualization();
 /* display is file content printed to console */
 fileName = obj.createFile(fileNameTemplate); // in output directory
 visualizationObject = obj;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMg6Yt0yEe2-WKuFT59MHQ" name="createFileNameTemplate" specification="_qUWjUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMg6Y90yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMg6ZN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;
 var workingDirectory = fm.getBaseDirectory();
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);
 // Now create the fileNameTemplate using full output path and input filename
 if (inputFileName.contains(&quot;/&quot;)) {
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);
 } else {
   fileNameTemplate = newDirectory + File.separator + inputFileName;
 }
 return fileNameTemplate;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qUNZYN0yEe2-WKuFT59MHQ" name="toDisplay" method="_rMgTWt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qUSR4d0yEe2-WKuFT59MHQ" name="toFile" method="_rMgTW90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qUUHEd0yEe2-WKuFT59MHQ" name="toString" method="_rMgTXN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUUuIN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qUWjUN0yEe2-WKuFT59MHQ" name="createFileNameTemplate" visibility="private" method="_rMg6Yt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNd8ot0yEe2-WKuFT59MHQ">
                  <body>The createFileNameTemplate will return a string that consists the directory of the output file and
is organized in the order of the template that the method sets.

@param outputDirectory is the directory of the output file 
@return a string formed from the file name template based on the order set in the method</body>
                </ownedComment>
                <ownedParameter xmi:id="_qUWjUd0yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qUWjUt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rHlXEt0yEe2-WKuFT59MHQ" name="VisualizationImplementation" method="_rMgTUN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHl-I90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHl-JN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNdVlN0yEe2-WKuFT59MHQ">
                  <body>The VisualizationImplementation method implements the file and warp system that is to 
be visualized. 

@param warp is the warp that is to be visualized
@param outputDirectory is the directory from which the output is supplied from
@param choice is the chosen system information from SystemChoices that is to be visualized</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHl-IN0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHl-Id0yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHl-It0yEe2-WKuFT59MHQ" name="choice" type="_rHlXEN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHl-Jd0yEe2-WKuFT59MHQ" type="_qUK9IN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHmlMd0yEe2-WKuFT59MHQ" name="VisualizationImplementation" method="_rMgTVd0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHmlNd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHmlNt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNdVld0yEe2-WKuFT59MHQ">
                  <body>The VisualizationImplementation method implements the workload and system that is 
to be visualized.

@param workLoad is the workLoad that is to be visualized
@param outputDirectory is the directory from which the output is supplied from
@param choice is the chosen WorkLoad from WorkLoadChoices that is to be visualized</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHmlMt0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHmlM90yEe2-WKuFT59MHQ" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHmlNN0yEe2-WKuFT59MHQ" name="choice" type="_rHl-Jt0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHmlN90yEe2-WKuFT59MHQ" type="_qUK9IN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHnMQN0yEe2-WKuFT59MHQ" name="createVisualization" visibility="private" method="_rMgTXt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNd8oN0yEe2-WKuFT59MHQ">
                  <body>The createVisualization method creates a visualization of the chosen system that is requested.
The visualization includes source, reliabilities, simulator input, latency, channel, latency report,
and deadline report.

@param choice is chosen from the SystemChoices and is to be the selected requested visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHnMQd0yEe2-WKuFT59MHQ" name="choice" type="_rHlXEN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHnMQt0yEe2-WKuFT59MHQ" name="createVisualization" visibility="private" method="_rMgTYN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNd8od0yEe2-WKuFT59MHQ">
                  <body>the createVisualization method will make a visualization of a selected WorkLoad that is requested. 
It includes the communication graph, graph visualization, and input of the graph.

@param choices the workload that is chosen from WorkLoadChoices</body>
                </ownedComment>
                <ownedParameter xmi:id="_rHnMQ90yEe2-WKuFT59MHQ" name="choice" type="_rHl-Jt0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHnMRN0yEe2-WKuFT59MHQ" name="createVisualization" visibility="private" method="_rMg6YN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHnMRd0yEe2-WKuFT59MHQ" name="obj" type="_rG8d4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qUfGMN0yEe2-WKuFT59MHQ" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_rNd8o90yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.5
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJteA90yEe2-WKuFT59MHQ" name="fm" visibility="private" type="_qNr6oN0yEe2-WKuFT59MHQ" association="_rPG7ZN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJuFEd0yEe2-WKuFT59MHQ" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJuFE90yEe2-WKuFT59MHQ" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJusId0yEe2-WKuFT59MHQ" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJusIt0yEe2-WKuFT59MHQ" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJusI90yEe2-WKuFT59MHQ" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rJusJN0yEe2-WKuFT59MHQ" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMg6Zd0yEe2-WKuFT59MHQ" name="VisualizationObject" specification="_rE_9IN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMg6Zt0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMg6Z90yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMg6aN0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMg6ad0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));
 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMg6at0yEe2-WKuFT59MHQ" name="VisualizationObject" specification="_rFAkMt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMg6a90yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMg6bN0yEe2-WKuFT59MHQ" name="warp" type="_qTUokN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMg6bd0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMg6bt0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 if (warp.getNumFaults() > 0) {
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());
 } else {
   this.nameExtension =
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());
 }
 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMhhcN0yEe2-WKuFT59MHQ" name="VisualizationObject" specification="_rFBLQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMhhcd0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMhhct0yEe2-WKuFT59MHQ" name="warp" type="_qTUokN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMhhc90yEe2-WKuFT59MHQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhdN0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhdd0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 if (warp.getNumFaults() > 0) {
   this.nameExtension =
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;
 } else {
   this.nameExtension =
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())
           + nameExtension;
 }

 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMhhdt0yEe2-WKuFT59MHQ" name="VisualizationObject" specification="_rFByUd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMhhd90yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMhheN0yEe2-WKuFT59MHQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhed0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhet0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;
 this.nameExtension = nameExtension;
 this.suffix = suffix;
 visualizationData = null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMhhe90yEe2-WKuFT59MHQ" name="nameExtension" specification="_rHsEwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMhhfN0yEe2-WKuFT59MHQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhfd0yEe2-WKuFT59MHQ" name="m" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMhhft0yEe2-WKuFT59MHQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhf90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));
 return extension;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMhhgN0yEe2-WKuFT59MHQ" name="nameExtension" specification="_qUhicN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMhhgd0yEe2-WKuFT59MHQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhgt0yEe2-WKuFT59MHQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMhhg90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));
 return extension;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMhhhN0yEe2-WKuFT59MHQ" name="getFileManager" specification="_qUiJgt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMhhhd0yEe2-WKuFT59MHQ" type="_qNr6oN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return fm;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMiIgN0yEe2-WKuFT59MHQ" name="visualization" specification="_qUj-sN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMiIgd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();
 var data = createVisualizationData();

 if (data != null) {
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;
   content.add(nodeString);

   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {
     var row = data[rowIndex];
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;
     content.add(rowString);
   }
 } else {
   content.add(NOT_IMPLEMENTED);
 }
 return content;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMiIgt0yEe2-WKuFT59MHQ" name="createFile" specification="_qUj-sd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMiIg90yEe2-WKuFT59MHQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMiIhN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMiIhd0yEe2-WKuFT59MHQ" name="fileVisualization" specification="_qUklwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMiIht0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();
 fileContent.addAll(visualization());
 fileContent.addAll(createFooter());
 return fileContent;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMivkN0yEe2-WKuFT59MHQ" name="displayVisualization" specification="_qUklwd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMivkd0yEe2-WKuFT59MHQ" type="_qOz8AN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMivkt0yEe2-WKuFT59MHQ" name="createHeader" specification="_qUklwt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMivk90yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();
 return header;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMivlN0yEe2-WKuFT59MHQ" name="createFooter" specification="_qUlM0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMivld0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();
 return footer;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMivlt0yEe2-WKuFT59MHQ" name="createColumnHeader" specification="_qUlM0d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMivl90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMivmN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMivmd0yEe2-WKuFT59MHQ" name="createVisualizationData" specification="_qUlz4d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMivmt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMivm90yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qUhicN0yEe2-WKuFT59MHQ" name="nameExtension" visibility="private" method="_rMhhgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUhicd0yEe2-WKuFT59MHQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qUiJgN0yEe2-WKuFT59MHQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qUiJgd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qUiJgt0yEe2-WKuFT59MHQ" name="getFileManager" method="_rMhhhN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNd8pN0yEe2-WKuFT59MHQ">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_rFCZYN0yEe2-WKuFT59MHQ" type="_qNr6oN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUj-sN0yEe2-WKuFT59MHQ" name="visualization" method="_rMiIgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFCZYd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUj-sd0yEe2-WKuFT59MHQ" name="createFile" method="_rMiIgt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUj-st0yEe2-WKuFT59MHQ" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qUj-s90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qUklwN0yEe2-WKuFT59MHQ" name="fileVisualization" method="_rMiIhd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFCZYt0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUklwd0yEe2-WKuFT59MHQ" name="displayVisualization" method="_rMivkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFCZY90yEe2-WKuFT59MHQ" type="_qOz8AN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUklwt0yEe2-WKuFT59MHQ" name="createHeader" visibility="protected" method="_rMivkt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFCZZN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUlM0N0yEe2-WKuFT59MHQ" name="createFooter" visibility="protected" method="_rMivlN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFCZZd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUlM0d0yEe2-WKuFT59MHQ" name="createColumnHeader" visibility="protected" method="_rMivlt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUlM0t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qUlM090yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qUlz4d0yEe2-WKuFT59MHQ" name="createVisualizationData" visibility="protected" method="_rMivmd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUlz4t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qUma8N0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rE_9IN0yEe2-WKuFT59MHQ" name="VisualizationObject" visibility="package" method="_rMg6Zd0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rE_9JN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rFAkMN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rE_9Id0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE_9It0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rE_9I90yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFAkMd0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFAkMt0yEe2-WKuFT59MHQ" name="VisualizationObject" visibility="package" method="_rMg6at0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rFAkNt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rFAkN90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rFAkM90yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFAkNN0yEe2-WKuFT59MHQ" name="warp" type="_qTUokN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFAkNd0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFAkON0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFBLQN0yEe2-WKuFT59MHQ" name="VisualizationObject" visibility="package" method="_rMhhcN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rFBLRd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rFBLRt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rFBLQd0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFBLQt0yEe2-WKuFT59MHQ" name="warp" type="_qTUokN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFBLQ90yEe2-WKuFT59MHQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFBLRN0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFByUN0yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFByUd0yEe2-WKuFT59MHQ" name="VisualizationObject" visibility="package" method="_rMhhdt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rFByVd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rFByVt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rFByUt0yEe2-WKuFT59MHQ" name="fm" type="_qNr6oN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFByU90yEe2-WKuFT59MHQ" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFByVN0yEe2-WKuFT59MHQ" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFByV90yEe2-WKuFT59MHQ" type="_qUfGMN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHsEwN0yEe2-WKuFT59MHQ" name="nameExtension" visibility="private" method="_rMhhe90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHsr0N0yEe2-WKuFT59MHQ" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHsr0d0yEe2-WKuFT59MHQ" name="m" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHsr0t0yEe2-WKuFT59MHQ" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHsr090yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qUqsYN0yEe2-WKuFT59MHQ" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_rNd8pd0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <generalization xmi:id="_rHtS4N0yEe2-WKuFT59MHQ" general="_rA-Yw90yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJvTMd0yEe2-WKuFT59MHQ" name="workLoad" visibility="package" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPHicd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJvTM90yEe2-WKuFT59MHQ" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMjWoN0yEe2-WKuFT59MHQ" name="WorkLoadListener" specification="_rFDngN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMjWod0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMjWot0yEe2-WKuFT59MHQ" type="_qUqsYN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read
     this.currentFlow = new String();
  // Read input file and build AST of graphFile
     try {
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());
     	var lexer = new WARPLexer(inputGraph);
     	var tokens = new CommonTokenStream(lexer);
     	var parser = new WARPParser(tokens);
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	 // Now populate build the workLoad by walking the input Graph tokens
     	warp.walk(this, warpTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());
     }
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMjWo90yEe2-WKuFT59MHQ" name="buildNodesAndFlows" specification="_rFEOkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMjWpN0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>/*
 	 * Create the listener object, which will read the workLoad 
 	 * description and then buid the node and flow objects that
 	 * instantiates the workLoad. This object is not needed
 	 * after that.
 	 */
 	new WorkLoadListener(workLoad); 
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMjWpd0yEe2-WKuFT59MHQ" name="testPrintStdOut" specification="_qUrTcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMjWpt0yEe2-WKuFT59MHQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);
 	System.out.printf(msg);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMjWp90yEe2-WKuFT59MHQ" name="enterWarpName" specification="_rFEOkt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMjWqN0yEe2-WKuFT59MHQ" name="ctx" type="_rBFGcd0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph 
     workLoad.setName(name); // store the  name for later reference
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMj9sN0yEe2-WKuFT59MHQ" name="enterFlowName" specification="_rFJuIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMj9sd0yEe2-WKuFT59MHQ" name="ctx" type="_rBSh0N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();
     workLoad.addFlow(currentFlow);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMlL0N0yEe2-WKuFT59MHQ" name="exitPriority" specification="_rFMxcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMlL0d0yEe2-WKuFT59MHQ" name="ctx" type="_rFLjUt0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST
     workLoad.setFlowPriority(currentFlow, priority);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMly4N0yEe2-WKuFT59MHQ" name="exitPeriod" specification="_rFNYgt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMly4d0yEe2-WKuFT59MHQ" name="ctx" type="_rFNYgN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST
     workLoad.setFlowPeriod(currentFlow, period);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMly4t0yEe2-WKuFT59MHQ" name="exitDeadline" specification="_rFN_lN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMly490yEe2-WKuFT59MHQ" name="ctx" type="_rFN_kt0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST
     workLoad.setFlowDeadline(currentFlow, deadline);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMly5N0yEe2-WKuFT59MHQ" name="exitPhase" specification="_rFPNsd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMly5d0yEe2-WKuFT59MHQ" name="ctx" type="_rFOmo90yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST
     workLoad.setFlowPhase(currentFlow, phase);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMmZ8N0yEe2-WKuFT59MHQ" name="exitSrcNode" specification="_rFP0wd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMmZ8d0yEe2-WKuFT59MHQ" name="ctx" type="_rBYoct0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name
     workLoad.addNodeToFlow(currentFlow, nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMmZ8t0yEe2-WKuFT59MHQ" name="exitSnkNode" specification="_rFP0xt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMmZ890yEe2-WKuFT59MHQ" name="ctx" type="_rBado90yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name
     workLoad.addNodeToFlow(currentFlow, nodeName);
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMmZ9N0yEe2-WKuFT59MHQ" name="exitFlow" specification="_rFQb090yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMmZ9d0yEe2-WKuFT59MHQ" name="ctx" type="_rBfWIN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qUrTcN0yEe2-WKuFT59MHQ" name="testPrintStdOut" method="_rMjWpd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUr6gN0yEe2-WKuFT59MHQ" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rFDngN0yEe2-WKuFT59MHQ" name="WorkLoadListener" visibility="private" method="_rMjWoN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rFDngt0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rFDng90yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rFDngd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFDnhN0yEe2-WKuFT59MHQ" type="_qUqsYN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFEOkN0yEe2-WKuFT59MHQ" name="buildNodesAndFlows" isStatic="true" method="_rMjWo90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFEOkd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFEOkt0yEe2-WKuFT59MHQ" name="enterWarpName" method="_rMjWp90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFEOk90yEe2-WKuFT59MHQ" name="ctx" type="_rBFGcd0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFJuIN0yEe2-WKuFT59MHQ" name="enterFlowName" method="_rMj9sN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFKVMN0yEe2-WKuFT59MHQ" name="ctx" type="_rBSh0N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFMxcN0yEe2-WKuFT59MHQ" name="exitPriority" method="_rMlL0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFMxcd0yEe2-WKuFT59MHQ" name="ctx" type="_rFLjUt0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFNYgt0yEe2-WKuFT59MHQ" name="exitPeriod" method="_rMly4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFNYg90yEe2-WKuFT59MHQ" name="ctx" type="_rFNYgN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFN_lN0yEe2-WKuFT59MHQ" name="exitDeadline" method="_rMly4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFN_ld0yEe2-WKuFT59MHQ" name="ctx" type="_rFN_kt0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFPNsd0yEe2-WKuFT59MHQ" name="exitPhase" method="_rMly5N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFPNst0yEe2-WKuFT59MHQ" name="ctx" type="_rFOmo90yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFP0wd0yEe2-WKuFT59MHQ" name="exitSrcNode" method="_rMmZ8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFP0wt0yEe2-WKuFT59MHQ" name="ctx" type="_rBYoct0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFP0xt0yEe2-WKuFT59MHQ" name="exitSnkNode" method="_rMmZ8t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFP0x90yEe2-WKuFT59MHQ" name="ctx" type="_rBado90yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rFQb090yEe2-WKuFT59MHQ" name="exitFlow" method="_rMmZ9N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFQb1N0yEe2-WKuFT59MHQ" name="ctx" type="_rBfWIN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qUtvsN0yEe2-WKuFT59MHQ" name="WorkLoadDescription">
              <ownedComment xmi:id="_rNd8pt0yEe2-WKuFT59MHQ">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a
Description object based on the contents. Each line of the file is an entry (string) in the
Description object.

@author sgoddard
@version 1.4 Fall 2022</body>
              </ownedComment>
              <generalization xmi:id="_rFUGMd0yEe2-WKuFT59MHQ" general="_qUfGMN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJv6Qd0yEe2-WKuFT59MHQ" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJv6Qt0yEe2-WKuFT59MHQ" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJwhUN0yEe2-WKuFT59MHQ" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJwhUd0yEe2-WKuFT59MHQ" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJwhUt0yEe2-WKuFT59MHQ" name="description" visibility="private" type="_qNLkUN0yEe2-WKuFT59MHQ" association="_rPIJgN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJwhVN0yEe2-WKuFT59MHQ" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJxIYN0yEe2-WKuFT59MHQ" name="fm" visibility="private" type="_qNr6oN0yEe2-WKuFT59MHQ" association="_rPOQIN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJxIYt0yEe2-WKuFT59MHQ" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMmZ9t0yEe2-WKuFT59MHQ" name="WorkLoadDescription" specification="_qUu90N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMmZ990yEe2-WKuFT59MHQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMmZ-N0yEe2-WKuFT59MHQ" type="_qUtvsN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor
 this.fm = this.getFileManager();
 initialize(inputFileName);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMmZ-d0yEe2-WKuFT59MHQ" name="visualization" specification="_qUvk4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMmZ-t0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return description;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMnBAN0yEe2-WKuFT59MHQ" name="fileVisualization" specification="_qUwL8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMnBAd0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return description;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMnBAt0yEe2-WKuFT59MHQ" name="toString" specification="_qUwzAt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMnBA90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMnBBN0yEe2-WKuFT59MHQ" name="initialize" specification="_qUxaE90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMnBBd0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents
 InputGraphFile gf = new InputGraphFile(fm);
 inputGraphString = gf.readGraphFile(inputFile);
 this.inputFileName = gf.getGraphFileName();
 description = new Description(inputGraphString);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMnBBt0yEe2-WKuFT59MHQ" name="main" specification="_qUxaFd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMnBB90yEe2-WKuFT59MHQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rMnBCN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoadDescription script = new WorkLoadDescription(&quot;StressTest.txt&quot;);
   //gets ArrayList of flow names that does not include the first line
   Description flows = script.description;
   flows.remove(0);
   //use collections sort to list the flows alphabetically 
   Collections.sort(flows);
   //print filename and removes .txt from each flow line
   System.out.println(script.inputFileName.substring(0,script.inputFileName.length()-4));
   //prints each flow
   //this runs until names.size()-1 so that the bracket isn't printed
   for(int i =0; i&lt; flows.size()-1; i++) {
       System.out.print(&quot;Flow &quot; + (i+1) + &quot;: &quot;+ flows.get(i));
   }
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qUu90N0yEe2-WKuFT59MHQ" name="WorkLoadDescription" visibility="package" method="_rMmZ9t0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qUu90t0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qUu9090yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qUu90d0yEe2-WKuFT59MHQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qUu91N0yEe2-WKuFT59MHQ" type="_qUtvsN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUvk4N0yEe2-WKuFT59MHQ" name="visualization" method="_rMmZ-d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFTfIN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUwL8N0yEe2-WKuFT59MHQ" name="fileVisualization" method="_rMnBAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFUGMN0yEe2-WKuFT59MHQ" type="_qNLkUN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qUwzAt0yEe2-WKuFT59MHQ" name="toString" method="_rMnBAt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUwzA90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qUxaE90yEe2-WKuFT59MHQ" name="initialize" visibility="private" method="_rMnBBN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUxaFN0yEe2-WKuFT59MHQ" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qUxaFd0yEe2-WKuFT59MHQ" name="main" isStatic="true" method="_rMnBBt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qUyBIN0yEe2-WKuFT59MHQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qUyBIt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_qUzPQN0yEe2-WKuFT59MHQ" name="WarpInterface">
              <ownedComment xmi:id="_rNd8p90yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_rFUGMt0yEe2-WKuFT59MHQ" general="_qTUokN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qU0dYN0yEe2-WKuFT59MHQ" name="toWorkload">
                <ownedParameter xmi:id="_rFUGM90yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU0dYd0yEe2-WKuFT59MHQ" name="toProgram">
                <ownedParameter xmi:id="_rFUtQN0yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU0dYt0yEe2-WKuFT59MHQ" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_rFUtQd0yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU1EcN0yEe2-WKuFT59MHQ" name="toSimulator">
                <ownedParameter xmi:id="_rFUtQt0yEe2-WKuFT59MHQ" type="_qTMswN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU1Ecd0yEe2-WKuFT59MHQ" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_rFUtQ90yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU1Ect0yEe2-WKuFT59MHQ" name="toChannelAnalysis">
                <ownedParameter xmi:id="_rFUtRN0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU1Ec90yEe2-WKuFT59MHQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_qU1rgN0yEe2-WKuFT59MHQ" name="reliabilitiesMet">
                <ownedParameter xmi:id="_qU1rgd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qU1rgt0yEe2-WKuFT59MHQ" name="deadlinesMet">
                <ownedParameter xmi:id="_qU1rg90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qU25oN0yEe2-WKuFT59MHQ" name="WarpPoset">
              <ownedComment xmi:id="_rNd8qN0yEe2-WKuFT59MHQ">
                <body>ConnectivityPoset extends Poset by selecting
the base station in the flow as the primary 
coordinator

@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_rFVUUN0yEe2-WKuFT59MHQ" general="_qQNDIN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMnBCd0yEe2-WKuFT59MHQ" name="WarpPoset" specification="_rFUtRd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMnBCt0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMnBC90yEe2-WKuFT59MHQ" type="_qU25oN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(workload);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMnoEN0yEe2-WKuFT59MHQ" name="findCoordinator" specification="_rHt58N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMnoEd0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMnoEt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();
		var baseName = baseStation.getName();
		var size = nodesInFlow.size();
		/* assume flow sink is the coordinator */
		Integer coordinatorIndex = size-1;

		if (baseName.equals(nodesInFlow.get(0).getName())) {
			/* flow src is coordinator, so update index */
			coordinatorIndex = 0;
		}
		return coordinatorIndex;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_rFUtRd0yEe2-WKuFT59MHQ" name="WarpPoset" visibility="package" method="_rMnBCd0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rFUtR90yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rFUtSN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rFUtRt0yEe2-WKuFT59MHQ" name="workload" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rFUtSd0yEe2-WKuFT59MHQ" type="_qU25oN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHt58N0yEe2-WKuFT59MHQ" name="findCoordinator" visibility="protected" method="_rMnoEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHt58d0yEe2-WKuFT59MHQ" name="nodesInFlow" type="_q_dV0N0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHt58t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qU4HwN0yEe2-WKuFT59MHQ" name="WarpSystem">
              <ownedComment xmi:id="_rNd8qd0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rJxIY90yEe2-WKuFT59MHQ" name="program" visibility="private" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rPPeQd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJxvcd0yEe2-WKuFT59MHQ" name="workLoad" visibility="private" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPQsYd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJxvc90yEe2-WKuFT59MHQ" name="ra" visibility="private" type="_qSDdQN0yEe2-WKuFT59MHQ" association="_rPRTcd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJyWgd0yEe2-WKuFT59MHQ" name="la" visibility="private" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rPRTdN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJyWg90yEe2-WKuFT59MHQ" name="ca" visibility="private" type="_qKrp8N0yEe2-WKuFT59MHQ" association="_rPR6gd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJy9kN0yEe2-WKuFT59MHQ" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ8Hgt0yEe2-WKuFT59MHQ" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ8Hg90yEe2-WKuFT59MHQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ8ukd0yEe2-WKuFT59MHQ" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ8ukt0yEe2-WKuFT59MHQ" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_rFVUUd0yEe2-WKuFT59MHQ" client="_qU4HwN0yEe2-WKuFT59MHQ" supplier="_qUzPQN0yEe2-WKuFT59MHQ" contract="_qUzPQN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqEUN0yEe2-WKuFT59MHQ" name="WarpSystem" specification="_rHvIEd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqEUd0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMqEUt0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMqEU90yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMqEVN0yEe2-WKuFT59MHQ" type="_qU4HwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;
 this.numChannels = numChannels;
 createProgram(workLoad, numChannels, choice);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqEVd0yEe2-WKuFT59MHQ" name="toWorkload" specification="_qU588N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqEVt0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return workLoad;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqrYN0yEe2-WKuFT59MHQ" name="toProgram" specification="_qU7yIt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqrYd0yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return program;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqrYt0yEe2-WKuFT59MHQ" name="toReliabilityAnalysis" specification="_qU8ZM90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqrY90yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);
 return ra;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqrZN0yEe2-WKuFT59MHQ" name="toSimulator" specification="_qU9AQ90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqrZd0yEe2-WKuFT59MHQ" type="_qTMswN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return null;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqrZt0yEe2-WKuFT59MHQ" name="toLatencyAnalysis" specification="_qU-OYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqrZ90yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);
 return la;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqraN0yEe2-WKuFT59MHQ" name="toChannelAnalysis" specification="_qVAqoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqrad0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);
 return ca;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMqrat0yEe2-WKuFT59MHQ" name="reliabilitiesMet" specification="_qVBRst0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMqra90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {
   ra = new ReliabilityAnalysis(program);
 }
 return ra.verifyReliabilities();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMrScN0yEe2-WKuFT59MHQ" name="deadlinesMet" specification="_qVB4xN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMrScd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;
 if (program.deadlineMisses().size() > 0) {
   result = false;
 }
 return result;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMrSct0yEe2-WKuFT59MHQ" name="createProgram" specification="_rHvvI90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMrSc90yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMrSdN0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMrSdd0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);

  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMrSdt0yEe2-WKuFT59MHQ" name="getNumFaults" specification="_qVDG4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMrSd90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMrSeN0yEe2-WKuFT59MHQ" name="getMinPacketReceptionRate" specification="_qVDt9N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMrSed0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMrSet0yEe2-WKuFT59MHQ" name="getE2e" specification="_qVEVA90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMrSe90yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMrSfN0yEe2-WKuFT59MHQ" name="getName" specification="_qVE8Et0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMrSfd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMr5gN0yEe2-WKuFT59MHQ" name="getSchedulerName" specification="_qVFjIt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMr5gd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMr5gt0yEe2-WKuFT59MHQ" name="getNumTransmissions" specification="_qVGKMt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMr5g90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMr5hN0yEe2-WKuFT59MHQ" name="getOptimizationFlag" specification="_qVGxQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMr5hd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qU588N0yEe2-WKuFT59MHQ" name="toWorkload" method="_rMqEVd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFXwkN0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU7yIt0yEe2-WKuFT59MHQ" name="toProgram" method="_rMqrYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFXwkd0yEe2-WKuFT59MHQ" type="_qQ6NwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU8ZM90yEe2-WKuFT59MHQ" name="toReliabilityAnalysis" method="_rMqrYt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFXwkt0yEe2-WKuFT59MHQ" type="_qSDdQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU9AQ90yEe2-WKuFT59MHQ" name="toSimulator" method="_rMqrZN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFXwk90yEe2-WKuFT59MHQ" type="_qTMswN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qU-OYN0yEe2-WKuFT59MHQ" name="toLatencyAnalysis" method="_rMqrZt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFYXoN0yEe2-WKuFT59MHQ" type="_qPSdIN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qVAqoN0yEe2-WKuFT59MHQ" name="toChannelAnalysis" method="_rMqraN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rFYXod0yEe2-WKuFT59MHQ" type="_qKrp8N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qVBRst0yEe2-WKuFT59MHQ" name="reliabilitiesMet" method="_rMqrat0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVB4wN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVB4xN0yEe2-WKuFT59MHQ" name="deadlinesMet" method="_rMrScN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVCf0N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVDG4t0yEe2-WKuFT59MHQ" name="getNumFaults" method="_rMrSdt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVDt8N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVDt9N0yEe2-WKuFT59MHQ" name="getMinPacketReceptionRate" method="_rMrSeN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHwWMN0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qVEVA90yEe2-WKuFT59MHQ" name="getE2e" method="_rMrSet0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHwWMd0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qVE8Et0yEe2-WKuFT59MHQ" name="getName" method="_rMrSfN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVE8E90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVFjIt0yEe2-WKuFT59MHQ" name="getSchedulerName" method="_rMr5gN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVFjI90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVGKMt0yEe2-WKuFT59MHQ" name="getNumTransmissions" method="_rMr5gt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVGKM90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVGxQN0yEe2-WKuFT59MHQ" name="getOptimizationFlag" method="_rMr5hN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVGxQd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVGxRd0yEe2-WKuFT59MHQ" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_rHvIEd0yEe2-WKuFT59MHQ" name="WarpSystem" method="_rMqEUN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHvvIN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHvvId0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHvIEt0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHvIE90yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHvIFN0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHvvIt0yEe2-WKuFT59MHQ" type="_qU4HwN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHvvI90yEe2-WKuFT59MHQ" name="createProgram" visibility="private" method="_rMrSct0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rHvvJN0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHvvJd0yEe2-WKuFT59MHQ" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHvvJt0yEe2-WKuFT59MHQ" name="choice" type="_rHU4YN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qVLCsN0yEe2-WKuFT59MHQ" name="WorkLoad">
              <ownedComment xmi:id="_rNfKwN0yEe2-WKuFT59MHQ">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name
is passed into the Constructor via the parameter inputFileName. Good default values for the
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.

@author sgoddard
@version 1.4
 *</body>
              </ownedComment>
              <generalization xmi:id="_rFcpEN0yEe2-WKuFT59MHQ" general="_qUtvsN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJ9VoN0yEe2-WKuFT59MHQ" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ98sN0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ98sd0yEe2-WKuFT59MHQ" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ98st0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ98s90yEe2-WKuFT59MHQ" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ98tN0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ98td0yEe2-WKuFT59MHQ" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ98tt0yEe2-WKuFT59MHQ" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ-jwN0yEe2-WKuFT59MHQ" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ-jwd0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ-jwt0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" type="_rHXUoN0yEe2-WKuFT59MHQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ-jw90yEe2-WKuFT59MHQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ-jxN0yEe2-WKuFT59MHQ" name="e2e" visibility="private" type="_rHXUoN0yEe2-WKuFT59MHQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ-jxd0yEe2-WKuFT59MHQ" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ_K0N0yEe2-WKuFT59MHQ" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ_K0d0yEe2-WKuFT59MHQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ_K0t0yEe2-WKuFT59MHQ" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rJ_K090yEe2-WKuFT59MHQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ_K1d0yEe2-WKuFT59MHQ" name="flows" type="_qOek0N0yEe2-WKuFT59MHQ" association="_rNfx0N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJ_x4N0yEe2-WKuFT59MHQ" name="nodes" type="_qP_AsN0yEe2-WKuFT59MHQ" association="_rNgY4N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rJ_x4d0yEe2-WKuFT59MHQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rJ_x490yEe2-WKuFT59MHQ" name="flowNamesInOriginalOrder" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rPShkN0yEe2-WKuFT59MHQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKBAAN0yEe2-WKuFT59MHQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKBnEN0yEe2-WKuFT59MHQ" name="flowNamesInPriorityOrder" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rPShk90yEe2-WKuFT59MHQ">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKC1MN0yEe2-WKuFT59MHQ" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKC1Md0yEe2-WKuFT59MHQ" name="reliabilityAnalysis" visibility="private" type="_qSDdQN0yEe2-WKuFT59MHQ" association="_rPTIod0yEe2-WKuFT59MHQ"/>
              <interfaceRealization xmi:id="_rFaz4d0yEe2-WKuFT59MHQ" client="_qVLCsN0yEe2-WKuFT59MHQ" supplier="_qSHusN0yEe2-WKuFT59MHQ" contract="_qSHusN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMsgkN0yEe2-WKuFT59MHQ" name="WorkLoad" specification="_rHxkUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMsgkd0yEe2-WKuFT59MHQ" name="m" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMsgkt0yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMsgk90yEe2-WKuFT59MHQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMsglN0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);
 setDefaultParameters();
 reliabilityAnalysis = new ReliabilityAnalysis(e2e, m);
 minPacketReceptionRate = m; // use file manager passed to this object
 this.e2e = e2e; // use populate this flows object as the input file is read
 /*
  * Read input file, build the AST of graph and the listener will build the node and flow data
  * objects
  */
 WorkLoadListener.buildNodesAndFlows(this);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMsgld0yEe2-WKuFT59MHQ" name="WorkLoad" specification="_rHyLYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMsglt0yEe2-WKuFT59MHQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMsgl90yEe2-WKuFT59MHQ" name="m" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMsgmN0yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rMsgmd0yEe2-WKuFT59MHQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMsgmt0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);
 setDefaultParameters();
 reliabilityAnalysis = new ReliabilityAnalysis(numFaults);
 this.numFaults = numFaults;
 minPacketReceptionRate = m; // use file manager passed to this object
 this.e2e = e2e; // use populate this flows object as the input file is read
 /*
  * Read input file, build the AST of graph and the listener will build the node and flow data
  * objects
  */
 WorkLoadListener.buildNodesAndFlows(this);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMsgm90yEe2-WKuFT59MHQ" name="setDefaultParameters" specification="_qVPUIN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names
 intForFlowNames = true; // default is that node names are all alpha names
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their
                                               // order
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 numFaults = DEFAULT_TX_NUM;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMsgnN0yEe2-WKuFT59MHQ" name="getE2e" specification="_qVPUId0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMsgnd0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return e2e;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMsgnt0yEe2-WKuFT59MHQ" name="getIntForFlowNames" specification="_qVPUIt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMsgn90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMsgoN0yEe2-WKuFT59MHQ" name="getName" specification="_qVP7Md0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMsgod0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHoN0yEe2-WKuFT59MHQ" name="setMinPacketReceptionRate" specification="_rH0noN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHod0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHot0yEe2-WKuFT59MHQ" name="getMaxPhase" specification="_qVP7M90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHo90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());
 return queue.poll().getPhase();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHpN0yEe2-WKuFT59MHQ" name="getMinPeriod" specification="_qVQiQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHpd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());
 return queue.poll().getPeriod();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHpt0yEe2-WKuFT59MHQ" name="setE2e" specification="_rH2c0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHp90yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>this.e2e = e2e;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHqN0yEe2-WKuFT59MHQ" name="setIntForFlowNames" specification="_qVQiQt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHqd0yEe2-WKuFT59MHQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHqt0yEe2-WKuFT59MHQ" name="setName" specification="_qVRJUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHq90yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtHrN0yEe2-WKuFT59MHQ" name="setNodeChannel" specification="_qVRJUt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtHrd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMtHrt0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object
 node.setChannel(channel);
 nodes.put(name, node); // update the nodes map with the updated object
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtusN0yEe2-WKuFT59MHQ" name="getNodeChannel" specification="_qVRwYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtusd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMtust0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object
 return node.getChannel();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtus90yEe2-WKuFT59MHQ" name="addFlow" specification="_qVRwY90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtutN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from
  * default values priority is set to the number of flows already added (index), 0 for first flow
  * This will create a default priority equal to the order listed in the input graph file. We
  * also set index to the same value so we can preserve that order as a secondary sort key. The
  * initalPriority field is probably not needed, but it might be useful in the future?? If the
  * optional flow parameters (priority, period, ...) is set, then this default priority will be
  * over written
  */
 if (flows.containsKey(flowName)) {
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;
       + &quot;It has been replaced with a new flow\n.&quot;, flowName);
 }
 var index = flows.size();
 var flowNode = new Flow(flowName, index, index);
 flows.put(flowName, flowNode);
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we
                            // only set it once
 }
 flowNamesInOriginalOrder.add(flowName);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtutd0yEe2-WKuFT59MHQ" name="isIntForNodeNames" specification="_qVRwZd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtutt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints
 return intForNodeNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtut90yEe2-WKuFT59MHQ" name="isIntForFlowNames" specification="_qVSXcd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtuuN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints
 return intForFlowNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMtuud0yEe2-WKuFT59MHQ" name="addNodeToFlow" specification="_qVTlkN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMtuut0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMtuu90yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */
   intForNodeNames = false;
 }
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have
                                     // this node already.
   /* If the node already exists, just need to add to the flow */
   var index = nodes.size(); // nodeIndex will be the order added
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node
   nodes.put(nodeName, graphNode); // add it to the map of nodes
 }
 /*
  * Node is now created and in the nodes map Next we need to get the current flow and add this
  * node to that flow by appending it to the node array for that flow
  */
 var flowNode = getFlow(flowName);
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);
 /* the priority is the node's index in the flow, which is the current array size */
 flowNode.addNode(graphNode);
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMuVwN0yEe2-WKuFT59MHQ" name="getFlowPriority" specification="_qVUMoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMuVwd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMuVwt0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMuVw90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;
 var flow = getFlow(flowName);
 Iterator&lt;Node> nodes = flow.nodes.iterator();
 while (nodes.hasNext()) {
   var node = nodes.next();
   if (node.getName() == nodeName) {
     priority = node.getPriority(); // found the src node, set its index
     break;
   }
 }
 return priority;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMuVxN0yEe2-WKuFT59MHQ" name="setFlowPriority" specification="_qVVawN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMuVxd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMuVxt0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setPriority(priority);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMu80N0yEe2-WKuFT59MHQ" name="setFlowPeriod" specification="_qVWB0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMu80d0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMu80t0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setPeriod(period);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMvj4N0yEe2-WKuFT59MHQ" name="setFlowDeadline" specification="_qVWB090yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMvj4d0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMvj4t0yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setDeadline(deadline);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMwK8N0yEe2-WKuFT59MHQ" name="setFlowPhase" specification="_qVWo4d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMwK8d0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMwK8t0yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 flowNode.setPhase(phase);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMxZEN0yEe2-WKuFT59MHQ" name="getFlowIndex" specification="_qVWo5N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMxZEd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMxZEt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.index;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMxZE90yEe2-WKuFT59MHQ" name="getFlowPriority" specification="_qVX3AN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMxZFN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMxZFd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getPriority();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMyAIN0yEe2-WKuFT59MHQ" name="getFlowPeriod" specification="_qVX3A90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMyAId0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMyAIt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getPeriod();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMyAI90yEe2-WKuFT59MHQ" name="getFlowDeadline" specification="_qVYeEd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMyAJN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMyAJd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getDeadline();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMynMN0yEe2-WKuFT59MHQ" name="getFlowPhase" specification="_qVYeFN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMynMd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMynMt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.getPhase();
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMzOQN0yEe2-WKuFT59MHQ" name="getFlowTxAttemptsPerLink" specification="_qVZFId0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rMzOQd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rMzOQt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);
 return flowNode.numTxPerLink;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMz1UN0yEe2-WKuFT59MHQ" name="setFlowsInPriorityOrder" specification="_qVZFJN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());
 // Now sort by a secondary key, which is index in this case
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))
     .collect(Collectors.toList());
 // Now sort by primary key, which is priority in this case
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))
     .collect(Collectors.toList());
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested
 // order
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMz1Ud0yEe2-WKuFT59MHQ" name="setFlowsInDMorder" specification="_qVZFJd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());
 /* Now sort by a secondary key, which is priority in this case */
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());
 /* Now sort by primary key, which is deadline in this case */
 List&lt;Flow> sortedFlows = sortedByPriority.stream()
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());
 /*
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested
  * order
  */
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rMz1Ut0yEe2-WKuFT59MHQ" name="setFlowsInRMorder" specification="_qVZsMN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());
 // Now sort by a secondary key, which is priority in this case
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());
 // Now sort by primary key, which is period in this case
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))
     .collect(Collectors.toList());
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested
 // order
 flowNamesInPriorityOrder = new ArrayList&lt;>();
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM0cYN0yEe2-WKuFT59MHQ" name="setFlowsInRealTimeHARTorder" specification="_qVZsMd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM0cYd0yEe2-WKuFT59MHQ" name="finalizeCurrentFlow" specification="_qVZsMt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM0cYt0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {
   finalizeFlowWithFixedFaultTolerance(flowName);
 } else {
   finalizeFlowWithE2eParameters(flowName);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM0cY90yEe2-WKuFT59MHQ" name="nextReleaseTime" specification="_qVZsNN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM0cZN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM0cZd0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM0cZt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);
 flow.setLastUpdateTime(currentTime);
 flow.setNextReleaseTime(currentTime);
 return flow.getReleaseTime(); // next release Time at or after currentTime
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM0cZ90yEe2-WKuFT59MHQ" name="nextAbsoluteDeadline" specification="_qVaTQt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM0caN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM0cad0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM0cat0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);
 flow.setLastUpdateTime(currentTime);
 flow.setNextReleaseTime(currentTime);
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM0ca90yEe2-WKuFT59MHQ" name="finalizeFlowWithE2eParameters" specification="_qVa6UN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM0cbN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);
 var m = minPacketReceptionRate; // shorten the name :-)
 if (flowNode != null) {
   var nodes = flowNode.nodes;
   int nHops = nodes.size();
   if (nHops &lt; 1) {
     /*
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was
      * -1 at end
      */
     nHops = 2;
   }
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum
                     // and when m == 1.0
   if (m &lt; 1.0) {
      //now compute nTXper link based on Ryan's formula: 
      //log(1 - e2e^(1/hops)) / log(1 - M) = # txs per hop
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);
   }
   /* set numTxPerLink based on M, E2E, and flow length */
   flowNode.numTxPerLink = (int) Math.ceil(nTx);
   /* Now compute nTx per link to reach E2E requirement. */
   ArrayList&lt;Integer> linkTxAndTotalCost =
       reliabilityAnalysis.numTxPerLinkAndTotalTxCost(flowNode);
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;
   flows.put(flowName, flowNode); // update flow node in Flows array
 } else { // should never happen...
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM0cbd0yEe2-WKuFT59MHQ" name="finalizeFlowWithFixedFaultTolerance" specification="_qVa6Ut0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM0cbt0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);
 if (flowNode != null) {
   // set numTxPerLink based on numFaults
   flowNode.numTxPerLink = numFaults + 1;
   // Now compute nTx per link to reach E2E requirement. */
   ArrayList&lt;Integer> linkTxAndTotalCost = reliabilityAnalysis.numTxPerLinkAndTotalTxCost(flowNode);
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;
   flows.put(flowName, flowNode); // update flow node in Flows array
 } else { // should never happen...
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1DcN0yEe2-WKuFT59MHQ" name="getNodeNamesOrderedAlphabetically" specification="_qVa6VN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1Dcd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM1Dct0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map
 String[] nodeNames = keys.toArray(new String[keys.size()]);
 Arrays.sort(nodeNames); // NodeNames are now sorted
 
 // However, if names are actually strings of integers, then the sort doesn't come out
 // the way we would like. So, handle that case
 var nodeNamesAsInts = new Integer[nodeNames.length];
 var allIntNames = true; // flag to see if all names are Ints or not
 for (int i = 0; i &lt; nodeNames.length; i++) {
   var nodeName = nodeNames[i];
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {
     // nodeName is an alpha representation of an integer
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);
   } else {
 	  //nodeName is an alpha name and not an integer, so set flag and terminate loop
     
 	  //set false because name not is a number; &amp;&amp; above 
 	  //makes sure we only set it once
 	  allIntNames = false; 
 	  
 	  break; // can stop the loop once we know not all of the names are ints
   }
 }
 if (allIntNames) {
   // If all names are ints, then we need to sort them accordingly
   // Otherwise, we get names in what appears to not be in order because
   Arrays.sort(nodeNamesAsInts); // sort the ints in ascending order
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string
   }
 }
 return nodeNames;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1Dc90yEe2-WKuFT59MHQ" name="getFlow" specification="_qVcvgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1DdN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM1Ddd0yEe2-WKuFT59MHQ" type="_qN3g0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node
 if (flow == null) {// return empty node if not found
   flow = new Flow();
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);
 }
 return flow;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1Ddt0yEe2-WKuFT59MHQ" name="getFlowNames" specification="_qVd9oN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1Dd90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM1DeN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1Ded0yEe2-WKuFT59MHQ" name="getNodeIndex" specification="_qVfy0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1Det0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM1De90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now
 if (node != null) {
   index = node.getIndex();
 }
 return index;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1DfN0yEe2-WKuFT59MHQ" name="getNodesInFlow" specification="_qVgZ4d0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1Dfd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM1Dft0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM1Df90yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the
 // nodes in the flow to create an array of the node names in
 // the same order as they exist in the flow specification (i.e., Graph file)
 var flow = flows.get(flowName);
 String[] nodes;
 if (flow != null) {
   nodes = new String[flow.nodes.size()];
   for (int i = 0; i &lt; nodes.length; i++) {
     var node = flow.nodes.get(i); // get the node from the arrayList
     nodes[i] = node.getName(); // get the name and store it in the array
   }

 } else {
   nodes = new String[0]; // return empty array
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);
 }
 return nodes;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1qgN0yEe2-WKuFT59MHQ" name="getHyperPeriod" specification="_qVhA9N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1qgd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1
 for (String flowName : getFlowNames()) {
   // var dm = new Utlitities();
   
 	//Find LCM of hyperPeriod so far and the current period,
 	//then update the hyperPeriod with that value
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); 
 }
 return hyperPeriod;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1qgt0yEe2-WKuFT59MHQ" name="getTotalTxAttemptsInFlow" specification="_qVhoAd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1qg90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM1qhN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();
 var totalCostIndex = linkTxAndTotalCost.size() - 1;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);
 return totalCost;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1qhd0yEe2-WKuFT59MHQ" name="getNumTxAttemptsPerLink" specification="_qVhoBN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1qht0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM1qh90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM1qiN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());
 var lastElement = linkTxAndTotalCost.size() - 1;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of
                                         // others
 return linkTxAndTotalCost.toArray(new Integer[0]);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1qid0yEe2-WKuFT59MHQ" name="addEdge" specification="_rFcCAd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1qit0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM1qi90yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object
 node.addEdge(edge);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM1qjN0yEe2-WKuFT59MHQ" name="maxFlowLength" specification="_qVi2IN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM1qjd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;
 for (Flow flow : flows.values()) {
   maxLength = Math.max(maxLength, flow.nodes.size());
 }
 return maxLength;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qVPUIN0yEe2-WKuFT59MHQ" name="setDefaultParameters" visibility="private" method="_rMsgm90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qVPUId0yEe2-WKuFT59MHQ" name="getE2e" method="_rMsgnN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNgY4t0yEe2-WKuFT59MHQ">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_rH0AkN0yEe2-WKuFT59MHQ" type="_rHXUoN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qVPUIt0yEe2-WKuFT59MHQ" name="getIntForFlowNames" method="_rMsgnt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_8N0yEe2-WKuFT59MHQ">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVP7MN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVP7Md0yEe2-WKuFT59MHQ" name="getName" method="_rMsgoN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_8d0yEe2-WKuFT59MHQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVP7Mt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVP7M90yEe2-WKuFT59MHQ" name="getMaxPhase" method="_rMtHot0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_890yEe2-WKuFT59MHQ">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVP7NN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVQiQN0yEe2-WKuFT59MHQ" name="getMinPeriod" method="_rMtHpN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_9N0yEe2-WKuFT59MHQ">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVQiQd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVQiQt0yEe2-WKuFT59MHQ" name="setIntForFlowNames" method="_rMtHqN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_9t0yEe2-WKuFT59MHQ">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVQiQ90yEe2-WKuFT59MHQ" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVRJUN0yEe2-WKuFT59MHQ" name="setName" method="_rMtHqt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_990yEe2-WKuFT59MHQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVRJUd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVRJUt0yEe2-WKuFT59MHQ" name="setNodeChannel" method="_rMtHrN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_-N0yEe2-WKuFT59MHQ">
                  <body>@param name the node whose channel is to be set
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVRJU90yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVRJVN0yEe2-WKuFT59MHQ" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVRwYN0yEe2-WKuFT59MHQ" name="getNodeChannel" method="_rMtusN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_-d0yEe2-WKuFT59MHQ">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVRwYd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVRwYt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVRwY90yEe2-WKuFT59MHQ" name="addFlow" method="_rMtus90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_-t0yEe2-WKuFT59MHQ">
                  <body>addFlow is a method that takes the String name of a flow and adds it to the Flows dictionary.
   * This method first gives a warning if the flow name is already in the dictionary.
   * Name, priority, and index are updated. The flowName is then added to the in order flow names list.
   * 
   * @param flowName is the String name of the flow being added</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVRwZN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVRwZd0yEe2-WKuFT59MHQ" name="isIntForNodeNames" method="_rMtutd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVSXcN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVSXcd0yEe2-WKuFT59MHQ" name="isIntForFlowNames" method="_rMtut90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVSXct0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVTlkN0yEe2-WKuFT59MHQ" name="addNodeToFlow" method="_rMtuud0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_-90yEe2-WKuFT59MHQ">
                  <body>addNodeToFlow takes a node and flow name and adds that node the specified flow.
   * If the node does not yet exist a new one is created using the default priority and the size
   * the nodes ArrayList as parameters. The node is then added to flowNode and linkTxAndTotalCost
   * is updated.
   * 
   * @param flowName is a String that specifies what flow the node is being added to
   * @param nodeName is a String that specifies what node is being added, or the name of the 
   * 				 new node that is being created</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVTlkd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVTlkt0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVUMoN0yEe2-WKuFT59MHQ" name="getFlowPriority" method="_rMuVwN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg__N0yEe2-WKuFT59MHQ">
                  <body>getFlowPriority is a method that returns the Integer value of the priority of a specified node
   * in a specified flow.
   * 
   * @param flowName is a String that is the name of the flow where the node is
   * @param nodeName is a String that is the name of the node in the flow
   * @return returns the priority as an Integer</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVUMod0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVUMot0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVUzsN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVVawN0yEe2-WKuFT59MHQ" name="setFlowPriority" method="_rMuVxN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVVawd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVVawt0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVWB0N0yEe2-WKuFT59MHQ" name="setFlowPeriod" method="_rMu80N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVWB0d0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVWB0t0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVWB090yEe2-WKuFT59MHQ" name="setFlowDeadline" method="_rMvj4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVWB1N0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVWo4N0yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVWo4d0yEe2-WKuFT59MHQ" name="setFlowPhase" method="_rMwK8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVWo4t0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVWo490yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVWo5N0yEe2-WKuFT59MHQ" name="getFlowIndex" method="_rMxZEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVXP8N0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVXP8d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVX3AN0yEe2-WKuFT59MHQ" name="getFlowPriority" method="_rMxZE90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg__d0yEe2-WKuFT59MHQ">
                  <body>getFlowPriority is a method that returns the priority of the specified flow.
   * 
   * @param flowName is the String name of the target flow
   * @return returns the priority of flowNode</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVX3Ad0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVX3At0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVX3A90yEe2-WKuFT59MHQ" name="getFlowPeriod" method="_rMyAIN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg__t0yEe2-WKuFT59MHQ">
                  <body>getFlowPeriod finds the period of a given flow returned as an Integer.
   * 
   * @param flowName is the String name of the target flow
   * @return returns the period of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVX3BN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVYeEN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVYeEd0yEe2-WKuFT59MHQ" name="getFlowDeadline" method="_rMyAI90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg__90yEe2-WKuFT59MHQ">
                  <body>getFlowDeadline finds the deadline of a given flow returned as an Integer.
   * 
   * @param flowName is the String name of the target flow
   * @return returns the deadline of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVYeEt0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVYeE90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVYeFN0yEe2-WKuFT59MHQ" name="getFlowPhase" method="_rMynMN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhAAN0yEe2-WKuFT59MHQ">
                  <body>getFlowPhase finds the phase of a given flow returned as an Integer.
   * 
   * @param flowName is the String name of the target flow
   * @return returns the phase of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVYeFd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVZFIN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVZFId0yEe2-WKuFT59MHQ" name="getFlowTxAttemptsPerLink" method="_rMzOQN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnAN0yEe2-WKuFT59MHQ">
                  <body>getFlowTxAttemptsPerLink gets and returns the numTxPerLink of the designated flow.
   * 
   * @param flowName is the String name of the target flow
   * @return returns the transmission attempts per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVZFIt0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVZFI90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVZFJN0yEe2-WKuFT59MHQ" name="setFlowsInPriorityOrder" method="_rMz1UN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnAd0yEe2-WKuFT59MHQ">
                  <body>setFlowsInPriorityOrder takes a list of flows and arranges them into a new ArrayList that
   * is in order based on their priority values.
   * This is done by creating a List of flows, sorting them by index, and then sorting that list
   * by priority. The final sorted List is then converted into an ArrayList and stored in 
   * flowNamesInPriorityOrder.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_qVZFJd0yEe2-WKuFT59MHQ" name="setFlowsInDMorder" method="_rMz1Ud0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnAt0yEe2-WKuFT59MHQ">
                  <body>setFlowsInDMOrder takes a list of flows and arranges them into a new ArrayList that
   * is in order based on their deadlines.
   * This is done by creating a List of flows, sorting them by priority, and then sorting that list
   * by deadline. The final sorted List is then converted into an ArrayList and stored in 
   * flowNamesInDMOrder.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_qVZsMN0yEe2-WKuFT59MHQ" name="setFlowsInRMorder" method="_rMz1Ut0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnA90yEe2-WKuFT59MHQ">
                  <body>setFlowsInRMOrder takes a list of flows and arranges them into a new ArrayList that
   * is in order based on their periods.
   * This is done by creating a List of flows, sorting them by priority, and then sorting that list
   * by period. The final sorted List is then converted into an ArrayList and stored in 
   * flowNamesInPriorityOrder.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_qVZsMd0yEe2-WKuFT59MHQ" name="setFlowsInRealTimeHARTorder" method="_rM0cYN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qVZsMt0yEe2-WKuFT59MHQ" name="finalizeCurrentFlow" method="_rM0cYd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVZsM90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVZsNN0yEe2-WKuFT59MHQ" name="nextReleaseTime" method="_rM0cY90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVZsNd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVaTQN0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVaTQd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVaTQt0yEe2-WKuFT59MHQ" name="nextAbsoluteDeadline" method="_rM0cZ90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVaTQ90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVaTRN0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVaTRd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVa6UN0yEe2-WKuFT59MHQ" name="finalizeFlowWithE2eParameters" visibility="private" method="_rM0ca90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVa6Ud0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVa6Ut0yEe2-WKuFT59MHQ" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_rM0cbd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVa6U90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVa6VN0yEe2-WKuFT59MHQ" name="getNodeNamesOrderedAlphabetically" method="_rM1DcN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnBN0yEe2-WKuFT59MHQ">
                  <body>getNodeNamesOrderedAlphabetically is a method that returns an array of Strings that contains
   * all of the node names in alphabetical order.
   * If the names are ints then this method puts them in ascending order and converts
   * that list of numbers into a an array of Strings.
   * 
   * @return returns an array of Strings in alphabetical order</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVa6Vd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qVbhYN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVcvgN0yEe2-WKuFT59MHQ" name="getFlow" visibility="private" method="_rM1Dc90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qVcvgd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFcCAN0yEe2-WKuFT59MHQ" type="_qN3g0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qVd9oN0yEe2-WKuFT59MHQ" name="getFlowNames" method="_rM1Ddt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnBd0yEe2-WKuFT59MHQ">
                  <body>getFlowNames returns an array of Strings that calls flowNamesInOriginalOrder
   * to order the flows in the order they were read from the graph file.
   * 
   * @return returns an array of String of flow names</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVd9od0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qVd9ot0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVfy0N0yEe2-WKuFT59MHQ" name="getNodeIndex" method="_rM1Ded0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnBt0yEe2-WKuFT59MHQ">
                  <body>getNodeIndex returns the index of a node based on its name.
   * Returns a zero if the node is null.
   * 
   * @param nodeName is a String that is the name of the desired node
   * @return returns an Integer index of that node</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVfy0d0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVgZ4N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVgZ4d0yEe2-WKuFT59MHQ" name="getNodesInFlow" method="_rM1DfN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnB90yEe2-WKuFT59MHQ">
                  <body>getNodesInFlow creates and returns an array of Strings that is made up of the nodes
   * in the flow in the same order that they exist in the flow specification.
   * 
   * @param flowName is the name of the desired flow
   * @return returns an array of ordered Strings</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVhA8N0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVhA8d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qVhA8t0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVhA9N0yEe2-WKuFT59MHQ" name="getHyperPeriod" method="_rM1qgN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnCN0yEe2-WKuFT59MHQ">
                  <body>getHyperPeriod finds and returns the Integer value of the lowest common multiple
   * of all the periods.
   * 
   * @return returns an Integer that is the LCM</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVhoAN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVhoAd0yEe2-WKuFT59MHQ" name="getTotalTxAttemptsInFlow" method="_rM1qgt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnCd0yEe2-WKuFT59MHQ">
                  <body>getTotalTxAttemptsInFlow returns the sum of all of the TX attempts in the flow as an Integer.
   * 
   * @param flowName is a String that is the name of the desired flow
   * @return returns the total cost of transmissions as an Integer</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVhoAt0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qVhoA90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVhoBN0yEe2-WKuFT59MHQ" name="getNumTxAttemptsPerLink" method="_rM1qhd0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnCt0yEe2-WKuFT59MHQ">
                  <body>getNumTxAttemptsPerLink is a method that creates an array of Integers where each value is
   * the number of transmissions needed for each link to meet the E2E target.
   * 
   * @param flowName is a String that is the name of the desire flow
   * @return returns an array of Integers that are the transmissions</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVhoBd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qViPEN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qViPEd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qVi2IN0yEe2-WKuFT59MHQ" name="maxFlowLength" method="_rM1qjN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnDN0yEe2-WKuFT59MHQ">
                  <body>maxFlowLength returns the maximum size of a node in the flow
   * 
   * @return returns an Integer that is the max flow length</body>
                </ownedComment>
                <ownedParameter xmi:id="_qVi2Id0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rFcCAd0yEe2-WKuFT59MHQ" name="addEdge" method="_rM1qid0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNhnC90yEe2-WKuFT59MHQ">
                  <body>addEdge adds a new edge to a specified node
   * 
   * @param nodeName is a String that is the name of the node that the edge is being added to
   * @param edge is the edge that is being added</body>
                </ownedComment>
                <ownedParameter xmi:id="_rFcCAt0yEe2-WKuFT59MHQ" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rFcCA90yEe2-WKuFT59MHQ" name="edge" type="_qNRD4N0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHxkUN0yEe2-WKuFT59MHQ" name="WorkLoad" visibility="package" method="_rMsgkN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHxkVN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHxkVd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHxkUd0yEe2-WKuFT59MHQ" name="m" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHxkUt0yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHxkU90yEe2-WKuFT59MHQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHxkVt0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rHyLYN0yEe2-WKuFT59MHQ" name="WorkLoad" visibility="package" method="_rMsgld0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rHyLZd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rHyycN0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_rHyLYd0yEe2-WKuFT59MHQ" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHyLYt0yEe2-WKuFT59MHQ" name="m" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHyLY90yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rHyLZN0yEe2-WKuFT59MHQ" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rHyycd0yEe2-WKuFT59MHQ" type="_qVLCsN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rH0noN0yEe2-WKuFT59MHQ" name="setMinPacketReceptionRate" method="_rMtHoN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_8t0yEe2-WKuFT59MHQ">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_rH11wN0yEe2-WKuFT59MHQ" name="minPacketReceptionRate" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rH2c0N0yEe2-WKuFT59MHQ" name="setE2e" method="_rMtHpt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNg_9d0yEe2-WKuFT59MHQ">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_rH2c0d0yEe2-WKuFT59MHQ" name="e2e" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qV1KAN0yEe2-WKuFT59MHQ" name="WarpDSL">
              <ownedComment xmi:id="_rNiOEN0yEe2-WKuFT59MHQ">
                <body>@author sgoddard
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rKEDUN0yEe2-WKuFT59MHQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKEDUd0yEe2-WKuFT59MHQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKEDUt0yEe2-WKuFT59MHQ" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKEqYN0yEe2-WKuFT59MHQ" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKEqYd0yEe2-WKuFT59MHQ" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKEqYt0yEe2-WKuFT59MHQ" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4Gxt0yEe2-WKuFT59MHQ" name="getInstructionParameters" specification="_qV7QoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM4Gx90yEe2-WKuFT59MHQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM4GyN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;
 	var dsl = new ListenerDsl();
     // Read input file and build AST of graph
     try {
     	CharStream inputInstruction = CharStreams.fromString(instruction);
     	var lexer = new WARPdslLexer(inputInstruction);
     	var instructionTokens = new CommonTokenStream(lexer);
     	var parser = new WARPdslParser(instructionTokens);
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'
     	var warp = new ParseTreeWalker();
     	warp.walk(dsl, instructionTree);
     } catch (Exception e) {
     	e.printStackTrace();
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());
     }
     instructionParametersArrayList = dsl.getInstructionParameters();
     return instructionParametersArrayList;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qV7QoN0yEe2-WKuFT59MHQ" name="getInstructionParameters" method="_rM4Gxt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qV73sN0yEe2-WKuFT59MHQ" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rH4SAN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_qV2_MN0yEe2-WKuFT59MHQ" name="InstructionParameters">
                <ownedAttribute xmi:id="_rKEqY90yEe2-WKuFT59MHQ" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKEqZN0yEe2-WKuFT59MHQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKEqZd0yEe2-WKuFT59MHQ" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKFRcN0yEe2-WKuFT59MHQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKGfkN0yEe2-WKuFT59MHQ" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKGfkd0yEe2-WKuFT59MHQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKHGoN0yEe2-WKuFT59MHQ" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKHGod0yEe2-WKuFT59MHQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKI70N0yEe2-WKuFT59MHQ" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKJi4N0yEe2-WKuFT59MHQ" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKKJ8N0yEe2-WKuFT59MHQ" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKKJ8d0yEe2-WKuFT59MHQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKKJ890yEe2-WKuFT59MHQ" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKKxAN0yEe2-WKuFT59MHQ" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM2RkN0yEe2-WKuFT59MHQ" name="getCoordinator" specification="_qV3mQN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM2Rkd0yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM24oN0yEe2-WKuFT59MHQ" name="setCoordinator" specification="_qV4NUN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM24od0yEe2-WKuFT59MHQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM3fsN0yEe2-WKuFT59MHQ" name="setName" specification="_qV4NUt0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM3fsd0yEe2-WKuFT59MHQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM3fst0yEe2-WKuFT59MHQ" name="setFlow" specification="_qV40YN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM3fs90yEe2-WKuFT59MHQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM3ftN0yEe2-WKuFT59MHQ" name="setSrc" specification="_qV40Yt0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM3ftd0yEe2-WKuFT59MHQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4GwN0yEe2-WKuFT59MHQ" name="setSnk" specification="_qV40ZN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4Gwd0yEe2-WKuFT59MHQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4Gwt0yEe2-WKuFT59MHQ" name="setChannel" specification="_qV6pkN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4Gw90yEe2-WKuFT59MHQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4GxN0yEe2-WKuFT59MHQ" name="unused" specification="_qV6pkt0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4Gxd0yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_qV3mQN0yEe2-WKuFT59MHQ" name="getCoordinator" method="_rM2RkN0yEe2-WKuFT59MHQ">
                  <ownedComment xmi:id="_rNiOEd0yEe2-WKuFT59MHQ">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_qV3mQd0yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV4NUN0yEe2-WKuFT59MHQ" name="setCoordinator" method="_rM24oN0yEe2-WKuFT59MHQ">
                  <ownedComment xmi:id="_rNiOEt0yEe2-WKuFT59MHQ">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_qV4NUd0yEe2-WKuFT59MHQ" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV4NUt0yEe2-WKuFT59MHQ" name="setName" visibility="private" method="_rM3fsN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_qV4NU90yEe2-WKuFT59MHQ" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV40YN0yEe2-WKuFT59MHQ" name="setFlow" visibility="private" method="_rM3fst0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_qV40Yd0yEe2-WKuFT59MHQ" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV40Yt0yEe2-WKuFT59MHQ" name="setSrc" visibility="private" method="_rM3ftN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_qV40Y90yEe2-WKuFT59MHQ" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV40ZN0yEe2-WKuFT59MHQ" name="setSnk" visibility="private" method="_rM4GwN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_qV6CgN0yEe2-WKuFT59MHQ" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV6pkN0yEe2-WKuFT59MHQ" name="setChannel" visibility="private" method="_rM4Gwt0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_qV6pkd0yEe2-WKuFT59MHQ" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_qV6pkt0yEe2-WKuFT59MHQ" name="unused" method="_rM4GxN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_qV6pk90yEe2-WKuFT59MHQ" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_qWAJIN0yEe2-WKuFT59MHQ" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_rH5gId0yEe2-WKuFT59MHQ" general="_rH45EN0yEe2-WKuFT59MHQ"/>
                <ownedAttribute xmi:id="_rKKxAd0yEe2-WKuFT59MHQ" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_rKKxA90yEe2-WKuFT59MHQ" name="instructionParametersArrayList" visibility="package" type="_q_dV0N0yEe2-WKuFT59MHQ" association="_rPTvsN0yEe2-WKuFT59MHQ"/>
                <ownedAttribute xmi:id="_rKL_It0yEe2-WKuFT59MHQ" name="instructionParameters" visibility="package" type="_qV2_MN0yEe2-WKuFT59MHQ" association="_rPTvs90yEe2-WKuFT59MHQ"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4Gyd0yEe2-WKuFT59MHQ" name="ListenerDsl" specification="_qWDzgN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4Gyt0yEe2-WKuFT59MHQ" type="_qWAJIN0yEe2-WKuFT59MHQ" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4Gy90yEe2-WKuFT59MHQ" name="getInstructionParameters" specification="_qWEak90yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4GzN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4Gzd0yEe2-WKuFT59MHQ" name="enterAction" specification="_rFg6gN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t0N0yEe2-WKuFT59MHQ" name="ctx" type="_rFfsYN0yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>inAction = true;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4t0d0yEe2-WKuFT59MHQ" name="exitAction" specification="_rFhhk90yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t0t0yEe2-WKuFT59MHQ" name="ctx" type="_rFfsYN0yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>inAction = false;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4t090yEe2-WKuFT59MHQ" name="exitFlowName" specification="_rFivsN0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t1N0yEe2-WKuFT59MHQ" name="ctx" type="_rFiIot0yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>if (inAction) {
             String flowName = ctx.getText(); // get the flow name
             instructionParameters.setFlow(flowName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4t1d0yEe2-WKuFT59MHQ" name="exitCmd" specification="_rFjWwd0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t1t0yEe2-WKuFT59MHQ" name="ctx" type="_rFivtd0yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name
         instructionParameters.setName(command);
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4t190yEe2-WKuFT59MHQ" name="exitSrcNode" specification="_rFj90t0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t2N0yEe2-WKuFT59MHQ" name="ctx" type="_rFj90N0yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name
         instructionParameters.setSrc(srcName);
         var command = instructionParameters.getName();
         if (command.equals(PUSH)) {
         	/* if push then coordinator is src 
         	 */
         	instructionParameters.setCoordinator(srcName);
         }else {
         	/* otherwise listener is src */
         	instructionParameters.setListener(srcName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4t2d0yEe2-WKuFT59MHQ" name="exitSnkNode" specification="_rFkk5N0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t2t0yEe2-WKuFT59MHQ" name="ctx" type="_rFkk4t0yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name
         instructionParameters.setSnk(snkName);
         var command = instructionParameters.getName();
         if (command.equals(PUSH)) {
         	/* if push then listener is snk */
         	instructionParameters.setListener(snkName);
         }else {
         	/* otherwise coordinator is snk 
         	 */
         	instructionParameters.setCoordinator(snkName);
         }
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM4t290yEe2-WKuFT59MHQ" name="exitChannel" specification="_rFlzAd0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rM4t3N0yEe2-WKuFT59MHQ" name="ctx" type="_rFlL890yEe2-WKuFT59MHQ"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name
     	String channel; // resulting channel that will be extracted from the channel string
     	Integer index = channelString.indexOf('#');
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {
     		channel = channelString.substring(index+1); // get string starting at first channel number
     	} else {
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN
     	}	
         instructionParameters.setChannel(channel); 
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_qWDzgN0yEe2-WKuFT59MHQ" name="ListenerDsl" visibility="package" method="_rM4Gyd0yEe2-WKuFT59MHQ">
                  <eAnnotations xmi:id="_qWEakN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_qWEakd0yEe2-WKuFT59MHQ" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_qWEakt0yEe2-WKuFT59MHQ" type="_qWAJIN0yEe2-WKuFT59MHQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_qWEak90yEe2-WKuFT59MHQ" name="getInstructionParameters" method="_rM4Gy90yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rH5gIN0yEe2-WKuFT59MHQ" type="_q_dV0N0yEe2-WKuFT59MHQ" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFg6gN0yEe2-WKuFT59MHQ" name="enterAction" method="_rM4Gzd0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFg6gd0yEe2-WKuFT59MHQ" name="ctx" type="_rFfsYN0yEe2-WKuFT59MHQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFhhk90yEe2-WKuFT59MHQ" name="exitAction" method="_rM4t0d0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFhhlN0yEe2-WKuFT59MHQ" name="ctx" type="_rFfsYN0yEe2-WKuFT59MHQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFivsN0yEe2-WKuFT59MHQ" name="exitFlowName" method="_rM4t090yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFivsd0yEe2-WKuFT59MHQ" name="ctx" type="_rFiIot0yEe2-WKuFT59MHQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFjWwd0yEe2-WKuFT59MHQ" name="exitCmd" method="_rM4t1d0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFjWwt0yEe2-WKuFT59MHQ" name="ctx" type="_rFivtd0yEe2-WKuFT59MHQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFj90t0yEe2-WKuFT59MHQ" name="exitSrcNode" method="_rM4t190yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFj9090yEe2-WKuFT59MHQ" name="ctx" type="_rFj90N0yEe2-WKuFT59MHQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFkk5N0yEe2-WKuFT59MHQ" name="exitSnkNode" method="_rM4t2d0yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFkk5d0yEe2-WKuFT59MHQ" name="ctx" type="_rFkk4t0yEe2-WKuFT59MHQ"/>
                </ownedOperation>
                <ownedOperation xmi:id="_rFlzAd0yEe2-WKuFT59MHQ" name="exitChannel" method="_rM4t290yEe2-WKuFT59MHQ">
                  <ownedParameter xmi:id="_rFlzAt0yEe2-WKuFT59MHQ" name="ctx" type="_rFlL890yEe2-WKuFT59MHQ"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qWKhMN0yEe2-WKuFT59MHQ" name="Warp">
              <ownedComment xmi:id="_rNiOE90yEe2-WKuFT59MHQ">
                <body>The Warp class is the main driver for the WARP project. It instantiates the work load and the parsing of 
command line flags for debugging info and configuring work load visualization.

@author sgoddard
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_rKNNQN0yEe2-WKuFT59MHQ" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKNNQd0yEe2-WKuFT59MHQ" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKNNQt0yEe2-WKuFT59MHQ" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_rHXUoN0yEe2-WKuFT59MHQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKNNQ90yEe2-WKuFT59MHQ" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKNNRN0yEe2-WKuFT59MHQ" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_rHXUoN0yEe2-WKuFT59MHQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKNNRd0yEe2-WKuFT59MHQ" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKN0UN0yEe2-WKuFT59MHQ" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKN0Ud0yEe2-WKuFT59MHQ" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKN0Ut0yEe2-WKuFT59MHQ" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_qTV2sN0yEe2-WKuFT59MHQ" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKN0U90yEe2-WKuFT59MHQ" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKN0VN0yEe2-WKuFT59MHQ" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKN0Vd0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKN0Vt0yEe2-WKuFT59MHQ" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKObYd0yEe2-WKuFT59MHQ" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKObY90yEe2-WKuFT59MHQ" name="minLQ" visibility="private" isStatic="true" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rKPpgd0yEe2-WKuFT59MHQ" name="e2e" visibility="private" isStatic="true" type="_rHXUoN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rKQQkd0yEe2-WKuFT59MHQ" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKResd0yEe2-WKuFT59MHQ" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKTT4N0yEe2-WKuFT59MHQ" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKVwIN0yEe2-WKuFT59MHQ" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKWXMd0yEe2-WKuFT59MHQ" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKWXM90yEe2-WKuFT59MHQ" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKW-QN0yEe2-WKuFT59MHQ" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKW-Qt0yEe2-WKuFT59MHQ" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKaooN0yEe2-WKuFT59MHQ" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKb2wN0yEe2-WKuFT59MHQ" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKb2wt0yEe2-WKuFT59MHQ" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKb2w90yEe2-WKuFT59MHQ" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKcd0N0yEe2-WKuFT59MHQ" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKcd0t0yEe2-WKuFT59MHQ" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKcd1N0yEe2-WKuFT59MHQ" name="schedulerSelected" visibility="private" isStatic="true" type="_qTV2sN0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM5U4N0yEe2-WKuFT59MHQ" name="main" specification="_qWM9cN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM5U4d0yEe2-WKuFT59MHQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM5U4t0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters
 setWarpParameters(args);

 // and print out the values if in verbose mode
 if (verboseMode) {
   printWarpParameters();
 }

 // Create and visualize the workload
 // inputFile string, which may be null,
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);
 if (allRequested) {
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {
     visualize(workLoad, choice); // visualize all Program choices
   }
   // Create and visualize the Warp System
   if (schedulerRequested) {
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);
     verifyPerformanceRequirements(warp);
     for (SystemChoices choice : SystemChoices.values()) {
       visualize(warp, choice); // visualize all System choices
     }
   } else { // create a system for all scheduler choices
     for (ScheduleChoices sch : ScheduleChoices.values()) {
       schedulerSelected = sch;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);
       verifyPerformanceRequirements(warp);
       for (SystemChoices choice : SystemChoices.values()) {
         visualize(warp, choice); // visualize all System choices
       }
     }
   }
 } else { // visualize warp workload, source program and other requested items
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);
   if (wfRequested) {
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);
   }
   if (gvRequested) {
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);
   }
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);
   verifyPerformanceRequirements(warp);
   visualize(warp, SystemChoices.SOURCE);
   if (caRequested) {
     visualize(warp, SystemChoices.CHANNEL);
   }
   if (laRequested) {
     visualize(warp, SystemChoices.LATENCY);
   }
   if (latencyRequested || laRequested) {
     visualize(warp, SystemChoices.LATENCY_REPORT);
   }
   if (raRequested) {
     visualize(warp, SystemChoices.RELIABILITIES);
   }
 }

  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM5U490yEe2-WKuFT59MHQ" name="visualize" specification="_rF-NgN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM5U5N0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rM5U5d0yEe2-WKuFT59MHQ" name="choice" type="_qUAlEN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var viz =
     VisualizationFactory.createWorkLoadVisualization(workLoad, outputSubDirectory, choice);
 if (viz != null) {
   if (verboseMode) {
     System.out.println(viz.toString());
   }
   viz.toFile();
   if (guiRequested) {
     viz.toDisplay();
   }
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM5U5t0yEe2-WKuFT59MHQ" name="visualize" specification="_rGBQ0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM5U590yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rM5U6N0yEe2-WKuFT59MHQ" name="choice" type="_qT6ecN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createProgramVisualization(warp, outputSubDirectory, choice);
 if (viz != null) {
   viz.toFile();
   if (guiRequested &amp;&amp; schedulerRequested) {
     /* Only display window when a specific scheduler has been requested */
     viz.toDisplay();
   }
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM578N0yEe2-WKuFT59MHQ" name="verifyPerformanceRequirements" specification="_rGB34N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM578d0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>verifyDeadlines(warp);
 verifyReliabilities(warp);
 verifyNoChannelConflicts(warp);
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM578t0yEe2-WKuFT59MHQ" name="verifyReliabilities" specification="_rGB34t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM57890yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {
   /* RealTime HART doesn't adhere to reliability targets */
   if (!warp.reliabilitiesMet()) {
     System.err.printf(
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;
             + &quot;reliability of %s under %s scheduling.\n&quot;,
         String.valueOf(e2e), schedulerSelected.toString());
   } else if (verboseMode) {
     System.out.printf(
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,
         String.valueOf(e2e), schedulerSelected.toString());
   }
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM579N0yEe2-WKuFT59MHQ" name="verifyDeadlines" specification="_rGCe8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM579d0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,
       schedulerSelected.toString());
   visualize(warp, SystemChoices.DEADLINE_REPORT);
 } else if (verboseMode) {
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,
       schedulerSelected.toString());
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM579t0yEe2-WKuFT59MHQ" name="verifyNoChannelConflicts" specification="_rGCe8t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM57990yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {
   System.err
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);
   if (!caRequested) { // only need to create the visualization if not already requested
     visualize(warp, SystemChoices.CHANNEL);
   }
 } else if (verboseMode) {
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM57-N0yEe2-WKuFT59MHQ" name="setWarpParameters" specification="_qWOyoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM57-d0yEe2-WKuFT59MHQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM57-t0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this
                                                      // function--need to set up globals?

 // create holder objects for storing results ...
 // BooleanHolder debug = new BooleanHolder();
 StringHolder schedulerSelected = new StringHolder();
 IntHolder channels = new IntHolder();
 IntHolder faults = new IntHolder();
 DoubleHolder m = new DoubleHolder();
 DoubleHolder end2end = new DoubleHolder();
 BooleanHolder gui = new BooleanHolder();
 BooleanHolder gv = new BooleanHolder();
 BooleanHolder wf = new BooleanHolder();
 BooleanHolder ra = new BooleanHolder();
 BooleanHolder la = new BooleanHolder();
 BooleanHolder ca = new BooleanHolder();
 BooleanHolder s = new BooleanHolder();
 BooleanHolder all = new BooleanHolder();
 BooleanHolder latency = new BooleanHolder();
 BooleanHolder verbose = new BooleanHolder();
 StringHolder input = new StringHolder();
 StringHolder output = new StringHolder();

 // create the parser and specify the allowed options ...
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,
     schedulerSelected);
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);
 parser.addOption(
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,
     end2end);
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,
     faults);
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);
 parser.addOption(
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,
     wf);
 parser.addOption(
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,
     ra);
 parser.addOption(
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);
 parser.addOption(
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,
     output);
 parser.addOption(
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,
     verbose);
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =
 // $HOME/Documents/WARP/&quot;, debug);


 // match the arguments ...
 parser.matchAllArgs(args);

 // Set WARP system configuration options
 if (channels.value > 0) {
   nChannels = channels.value; // set option specified
 } else {
   nChannels = NUM_CHANNELS; // set to default
 }
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge
   numFaults = faults.value; // set option specified
 } else {
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default
 }
 if (m.value > 0.0) { // global variable for minimum Link Quality in system
   minLQ = m.value; // set option specified
 } else {
   minLQ = MIN_LQ; // set to default
 }
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system
   e2e = end2end.value; // set option specified
 } else {
   e2e = E2E; // set to default
 }
 if (output.value != null) { // default output subdirectory (from working directory)
   outputSubDirectory = output.value; // set option specified
 } else {
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default
 }

 guiRequested = gui.value; // GraphVis file requested flag
 gvRequested = gv.value; // GraphVis file requested flag
 wfRequested = wf.value; // WARP file requested flag
 raRequested = ra.value; // Reliability Analysis file requested flag
 laRequested = la.value; // Latency Analysis file requested flag
 caRequested = ca.value; // Latency Analysis file requested flag
 simRequested = s.value; // Simulation file requested flag
 allRequested = all.value; // all out files requested flag
 latencyRequested = latency.value; // latency report requested flag
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)
 inputFile = input.value; // input file specified
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch
   schedulerRequested = true;
   switch (schedulerSelected.value) {
     case &quot;priority&quot;:
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;
       break;

     case &quot;rm&quot;:
       Warp.schedulerSelected = ScheduleChoices.RM;
       break;

     case &quot;dm&quot;:
       Warp.schedulerSelected = ScheduleChoices.DM;
       break;

     case &quot;rtHart&quot;:
       Warp.schedulerSelected = ScheduleChoices.RTHART;
       break;

     case &quot;poset&quot;:
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;
       break;

     default:
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;
       break;
   }
 } else { // null value when no scheduler specified; so use default
   Warp.schedulerSelected = DEFAULT_SCHEDULER;
 }
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM57-90yEe2-WKuFT59MHQ" name="printWarpParameters" specification="_qWPZsd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>// print all system configuration parameters
 // Print out each of the system configuration values
 System.out.println(&quot;WARP system configuration values:&quot;);
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);
 System.out.println(&quot;\tnChanels=&quot; + nChannels);
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);
 System.out.println(&quot;\tminLQ=&quot; + minLQ);
 System.out.println(&quot;\tE2E=&quot; + e2e);
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);
 if (inputFile != null) {
   System.out.println(&quot;\tinput file=&quot; + inputFile);
 } else {
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);
 }
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qWM9cN0yEe2-WKuFT59MHQ" name="main" isStatic="true" method="_rM5U4N0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOFN0yEe2-WKuFT59MHQ">
                  <body>The main method of class instantiates a new WorkLoad and visualizes it based on
the arguments that are specified in the command line.</body>
                </ownedComment>
                <ownedParameter xmi:id="_qWM9cd0yEe2-WKuFT59MHQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qWNkgN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qWOyoN0yEe2-WKuFT59MHQ" name="setWarpParameters" visibility="private" isStatic="true" method="_rM57-N0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNi1IN0yEe2-WKuFT59MHQ">
                  <body>the setWarpParameters method sets the parameters of the warp based on the command
   * line arguments.
   * 
   * @param args is the command line arguments given by the user</body>
                </ownedComment>
                <ownedParameter xmi:id="_qWOyod0yEe2-WKuFT59MHQ" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qWOyot0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qWPZsd0yEe2-WKuFT59MHQ" name="printWarpParameters" visibility="private" isStatic="true" method="_rM57-90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNi1Id0yEe2-WKuFT59MHQ">
                  <body>The printWarpParameters prints all of the system configuration values (all
   * command line warp configuration flags.)</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_rF-NgN0yEe2-WKuFT59MHQ" name="visualize" visibility="private" isStatic="true" method="_rM5U490yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOFd0yEe2-WKuFT59MHQ">
                  <body>The visualize method will display the visualization of provided workLoad
   * based on the guiRequested flag and the verboseMode flag.
   *  
   * @param workLoad is the WorkLoad that is to be visualized 
   * @param choice is the selected type of WorkLoad graph that will be visualized</body>
                </ownedComment>
                <ownedParameter xmi:id="_rF-0kN0yEe2-WKuFT59MHQ" name="workLoad" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rF-0kd0yEe2-WKuFT59MHQ" name="choice" type="_qUAlEN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGBQ0N0yEe2-WKuFT59MHQ" name="visualize" visibility="private" isStatic="true" method="_rM5U5t0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOFt0yEe2-WKuFT59MHQ">
                  <body>The visualize method displays the visualization of the supplied Warp Interface
   * 
   * @param warp is the warp to be visualized
   * @param choice is the type of WorkLoad graph that will be visualized</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGBQ0d0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGBQ0t0yEe2-WKuFT59MHQ" name="choice" type="_qT6ecN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGB34N0yEe2-WKuFT59MHQ" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_rM578N0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOF90yEe2-WKuFT59MHQ">
                  <body>the verifyPerformanceRequirements method verifies deadlines, reliabilities, and 
   * the absence of any channel conflicts
   * 
   * @param warp is the warp that will have its performance requirements verified</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGB34d0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGB34t0yEe2-WKuFT59MHQ" name="verifyReliabilities" visibility="private" isStatic="true" method="_rM578t0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOGN0yEe2-WKuFT59MHQ">
                  <body>verifyReliabilities method verifies the reliabilities of the supplied warp interface.
   * it will print an error message if not all flows meet end-to-end reliability.
   * 
   * @param warp is the warp that will have its reliabilities verified</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGB3490yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGCe8N0yEe2-WKuFT59MHQ" name="verifyDeadlines" visibility="private" isStatic="true" method="_rM579N0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOGd0yEe2-WKuFT59MHQ">
                  <body>The verifyDeadlines method verifies that the warp flows meet their deadlines
   * under scheduling.
   * 
   * @param warp is the warp whose flows deadlines will be verified</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGCe8d0yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGCe8t0yEe2-WKuFT59MHQ" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_rM579t0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNiOGt0yEe2-WKuFT59MHQ">
                  <body>The verifyNoChannelConflicts verifies that there are no channel conflicts
   * that exist for the given warp. It will print an error message if any conflicts are found.
   * 
   * @param warp is the warp that will be checked to verify for no channel conflicts</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGCe890yEe2-WKuFT59MHQ" name="warp" type="_qUzPQN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qWTrIN0yEe2-WKuFT59MHQ" name="WorkLoadTest" visibility="package">
              <ownedAttribute xmi:id="_rKdE4d0yEe2-WKuFT59MHQ" name="load1" isStatic="true" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPUWwd0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rKe6EN0yEe2-WKuFT59MHQ" name="load2" isStatic="true" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPUWxN0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rKfhIN0yEe2-WKuFT59MHQ" name="load3" isStatic="true" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPU90d0yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM6jAN0yEe2-WKuFT59MHQ" name="testAddFlowHelper" specification="_rGFiQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM6jAd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM6jAt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM6jA90yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>assertArrayEquals(expected, load.getFlowNames());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM6jBN0yEe2-WKuFT59MHQ" name="testAddFlow" specification="_qWU5QN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = 
			{&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;AF1&quot;, &quot;AF5&quot;, &quot;AF2&quot;, &quot;AF4&quot;, &quot;AF10&quot;, &quot;newFlow&quot;};
		load1.addFlow(&quot;newFlow&quot;);
		testAddFlowHelper(expected, load1);		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM6jBd0yEe2-WKuFT59MHQ" name="testAddFlowduplicateNames" specification="_qWVgUt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, &quot;dupName&quot;, &quot;dupName&quot;}; 
		load2.addFlow(&quot;dupName&quot;);
		load2.addFlow(&quot;dupName&quot;);
	    //System.out.println(load2.getFlowNames());         used to find &quot;%s&quot; error
		testAddFlowHelper(expected, load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM6jBt0yEe2-WKuFT59MHQ" name="testAddFlowNull" specification="_qWWucN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;, null};
		load3.addFlow(null);
		testAddFlowHelper(expected, load3);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM6jB90yEe2-WKuFT59MHQ" name="addNodeHelper" specification="_rGGJU90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM6jCN0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM6jCd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM6jCt0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rM6jC90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>assertArrayEquals(expected, load.getNodesInFlow(flowName));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM6jDN0yEe2-WKuFT59MHQ" name="testAddNodeToFlow" specification="_qWZKsN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;};
		load3.addNodeToFlow(&quot;F0&quot;, &quot;D&quot;);
		addNodeHelper(expected, load3, &quot;F0&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KEN0yEe2-WKuFT59MHQ" name="testAddNodeToFlow2" specification="_qWZxw90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;A&quot;, &quot;A&quot;};
		load2.addNodeToFlow(&quot;F0&quot;, &quot;A&quot;);
		load2.addNodeToFlow(&quot;F0&quot;, &quot;A&quot;);
		addNodeHelper(expected, load2, &quot;F0&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KEd0yEe2-WKuFT59MHQ" name="testAddNodeToFlowNull" specification="_qWa_4N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, null};
		load3.addNodeToFlow(&quot;F0&quot;, null);
		addNodeHelper(expected, load3, &quot;F0&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KEt0yEe2-WKuFT59MHQ" name="getTotalTxHelper" specification="_rGGwYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM7KE90yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM7KFN0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rM7KFd0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>assertEquals(expected, load.getTotalTxAttemptsInFlow(flowName));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KFt0yEe2-WKuFT59MHQ" name="testGetTotalTx" specification="_qWbm8t0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 4;
		getTotalTxHelper(expected, load2, &quot;F0&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KF90yEe2-WKuFT59MHQ" name="testGetTotalTx2" specification="_qWcOAt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 8;
		getTotalTxHelper(expected, load1, &quot;AF10&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KGN0yEe2-WKuFT59MHQ" name="testGetTotalTxTorture" specification="_qWc1Ed0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer[] expected = {4, 4, 4, 4, 4};
		String[] names = load3.getFlowNames();
		// i is used as an index to iterate through the expected values array and the name of string
		// these values are then passed one by one into the helper function
		for (int i=0; i&lt;names.length-1; i++) {
			getTotalTxHelper(expected[i], load3, names[i]);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7KGd0yEe2-WKuFT59MHQ" name="testGetFlowPriorityHelper" specification="_rGGwZN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM7KGt0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM7KG90yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rM7KHN0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>assertEquals(expected, load.getFlowPriority(flowName));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xIN0yEe2-WKuFT59MHQ" name="testGetFlowPriority" specification="_qWdcIN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 8;
		testGetFlowPriorityHelper(expected, load1, &quot;F8&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xId0yEe2-WKuFT59MHQ" name="testGetFlowPriority2" specification="_qWdcJN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 3;
		testGetFlowPriorityHelper(expected, load2, &quot;F3&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xIt0yEe2-WKuFT59MHQ" name="testSetFlowPriority" specification="_qWeDM90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 5;
		load1.setFlowPriority(&quot;F8&quot;, 5);
		testGetFlowPriorityHelper(expected, load1, &quot;F8&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xI90yEe2-WKuFT59MHQ" name="testSetFlowPriorityNegative" specification="_qWeqQt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = -1;
		load1.setFlowPriority(&quot;F8&quot;, -1);
		testGetFlowPriorityHelper(expected, load1, &quot;F8&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xJN0yEe2-WKuFT59MHQ" name="getFlowTxAttemptsPerLinkHelper" specification="_rGHXcN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM7xJd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM7xJt0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rM7xJ90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>assertEquals(expected, load.getFlowTxAttemptsPerLink(flowName));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xKN0yEe2-WKuFT59MHQ" name="testGetFlowTxAttemptsPerLink" specification="_qWfRUt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 3;
		getFlowTxAttemptsPerLinkHelper(expected, load2, &quot;F0&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xKd0yEe2-WKuFT59MHQ" name="testGetFlowTxAttemptsPerLink2" specification="_qWf4Y90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 3;
		load2.addNodeToFlow(&quot;F0&quot;, &quot;newNode&quot;);
		getFlowTxAttemptsPerLinkHelper(expected, load2, &quot;F0&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xKt0yEe2-WKuFT59MHQ" name="testGetFlowTxAttemptsPerLinkTorture" specification="_qWmmEN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>Integer expected = 3;
		String[] names = load1.getFlowNames();
		// expected is 3 for all flows so no array was used to iterate through
		for (int i=0; i&lt;names.length-1; i++) {
			getFlowTxAttemptsPerLinkHelper(expected, load1, names[i]);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM7xK90yEe2-WKuFT59MHQ" name="testSetFlowsInRModerTorture" specification="_qWnNId0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = 
			{&quot;F1&quot;, &quot;AF1&quot;, &quot;F2&quot;, &quot;AF2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;AF4&quot;, &quot;F5&quot;, &quot;AF5&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;AF10&quot;};
		load1.setFlowsInRMorder();
		ArrayList&lt;String> namesRM = load1.getFlowNamesInPriorityOrder();
		for (int i=0; i&lt;namesRM.size()-1; i++) {
			assertEquals(expected[i], namesRM.get(i));
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YMN0yEe2-WKuFT59MHQ" name="testGetNodeNamesOrderedAlpha" specification="_qWnNJd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;I&quot;, &quot;P&quot;, &quot;R&quot;, &quot;V&quot;, &quot;X&quot;};
		String[] actual = load3.getNodeNamesOrderedAlphabetically();
		assertArrayEquals(expected, actual);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YMd0yEe2-WKuFT59MHQ" name="testGetNodeNamesOrderedAlpha2" specification="_qWn0M90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;I&quot;, &quot;P&quot;, &quot;R&quot;, &quot;V&quot;, &quot;X&quot;, &quot;Z&quot;};
		load3.addNodeToFlow(&quot;F0&quot;, &quot;Z&quot;);
		String[] actual = load3.getNodeNamesOrderedAlphabetically();
		assertArrayEquals(expected, actual);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YMt0yEe2-WKuFT59MHQ" name="testGetNodeNamesOrderedAlpha3" specification="_qWobQ90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;G&quot;, &quot;I&quot;, &quot;M&quot;, &quot;P&quot;, &quot;R&quot;, &quot;V&quot;, &quot;X&quot;, &quot;Z&quot;};
		load3.addFlow(&quot;F6&quot;);
		load3.addNodeToFlow(&quot;F6&quot;, &quot;Z&quot;);
		load3.addNodeToFlow(&quot;F6&quot;, &quot;M&quot;);
		load3.addNodeToFlow(&quot;F0&quot;, &quot;M&quot;);
		String[] actual = load3.getNodeNamesOrderedAlphabetically();
		assertArrayEquals(expected, actual);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YM90yEe2-WKuFT59MHQ" name="initializeLoads" specification="_qWpCU90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>load1 = new WorkLoad(0.9, 0.99, &quot;StressTest.txt&quot;);
		load2 = new WorkLoad(0.9, 0.99, &quot;Example2.txt&quot;);
		load3 = new WorkLoad(0.9, 0.99, &quot;Example3.txt&quot;);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YNN0yEe2-WKuFT59MHQ" name="testGetFlowNamesHelper" specification="_rGHXdN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM8YNd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM8YNt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM8YN90yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>//assert that the array of expected flow names equals the flow names in the WorkLoad
		assertArrayEquals(expected, load.getFlowNames());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YON0yEe2-WKuFT59MHQ" name="testGetFlowNames1" specification="_qWqQcN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;AF1&quot;, &quot;AF5&quot;, &quot;AF2&quot;, &quot;AF4&quot;, &quot;AF10&quot;};
		testGetFlowNamesHelper(expected, load1);
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YOd0yEe2-WKuFT59MHQ" name="testGetFlowNames2" specification="_qWqQdN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		testGetFlowNamesHelper(expected, load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8YOt0yEe2-WKuFT59MHQ" name="testGetFlowNames3" specification="_qWq3g90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] expected = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		testGetFlowNamesHelper(expected, load3);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8_QN0yEe2-WKuFT59MHQ" name="testGetNodeIndexHelper" specification="_rGH-gd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM8_Qd0yEe2-WKuFT59MHQ" name="names">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM8_Qt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM8_Q90yEe2-WKuFT59MHQ" name="expectedIndecies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM8_RN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM8_Rd0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>//iterate through both expected arrays and the WorkLoad arrays to test they are equal
		for(int i = 0; i &lt; names.length; i++){
			assertEquals(expectedIndecies[i],load.getNodeIndex(names[i]));
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8_Rt0yEe2-WKuFT59MHQ" name="testGetNodeIndex1" specification="_qWrekt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] names= new String[] {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;A&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;N&quot;,
				&quot;O&quot;, &quot;P&quot;, &quot;M&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Y&quot;};
		int[] expectedIndecies = new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
				20, 21, 22, 23};
		testGetNodeIndexHelper(names, expectedIndecies, load1);
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8_R90yEe2-WKuFT59MHQ" name="testGetNodeIndex2" specification="_qWw-IN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] names= new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;, &quot;G&quot;,
				&quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;};
		int[] expectedIndecies = new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
				20, 21, 22};
		testGetNodeIndexHelper(names, expectedIndecies, load2);
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM8_SN0yEe2-WKuFT59MHQ" name="testGetNodeIndex3" specification="_qWzaYN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] names= new String[] {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;P&quot;, &quot;R&quot;, &quot;G&quot;, &quot;I&quot;, &quot;V&quot;, &quot;X&quot;};
		int[] expectedIndecies = new int[] {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
		testGetNodeIndexHelper(names, expectedIndecies, load3);
		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mUN0yEe2-WKuFT59MHQ" name="testGetNodesInFlowHelper" specification="_rGIlkd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM9mUd0yEe2-WKuFT59MHQ" name="flowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM9mUt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM9mU90yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM9mVN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM9mVd0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>//Create a list of expected flow values(nodes) and WorkLoad values to iterate through and test if equal
		FlowMap flows = load.getFlows();
		Collection&lt;Flow> flowList = flows.values();
		
		for(int i = 0; i &lt; flowList.size(); i++) {
			assertArrayEquals(expected[i], load.getNodesInFlow(flowNames[i]));
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mVt0yEe2-WKuFT59MHQ" name="testGetFlowsInNode1" specification="_qW0BcN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;AF1&quot;, &quot;AF5&quot;, &quot;AF2&quot;, &quot;AF4&quot;, &quot;AF10&quot;};
		String[][] expected = {
				{&quot;B&quot;, &quot;C&quot;, &quot;D&quot;},
				{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;},
				{&quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;},
				{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;},
				{&quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;},
				{&quot;B&quot;, &quot;C&quot;, &quot;D&quot;},
				{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;},
				{&quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;},
				{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;},
				{&quot;C&quot;, &quot;D&quot;, &quot;E&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;},
				{&quot;N&quot;, &quot;O&quot;, &quot;P&quot;},
				{&quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;},
				{&quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;},
				{&quot;M&quot;, &quot;N&quot;, &quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Y&quot;},
				{&quot;O&quot;, &quot;P&quot;, &quot;Q&quot;, &quot;V&quot;, &quot;W&quot;, &quot;Y&quot;}
		};
		testGetNodesInFlowHelper(flowNames, expected, load1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mV90yEe2-WKuFT59MHQ" name="testGetFlowsInNode2" specification="_qW0og90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		String[][] expected = {
				{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;},
				{&quot;C&quot;, &quot;B&quot;, &quot;A&quot;},
				{&quot;D&quot;, &quot;E&quot;, &quot;F&quot;},
				{&quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;, &quot;U&quot;},
				{&quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;, &quot;K&quot;, &quot;L&quot;},
				{&quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;, &quot;Z&quot;}
		};
		testGetNodesInFlowHelper(flowNames, expected, load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mWN0yEe2-WKuFT59MHQ" name="testGetFlowsInNode3" specification="_qW12ot0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		String[][] expected = {
				{&quot;A&quot;, &quot;B&quot;, &quot;C&quot;},
				{&quot;C&quot;, &quot;B&quot;, &quot;A&quot;},
				{&quot;D&quot;, &quot;B&quot;, &quot;F&quot;},
				{&quot;P&quot;, &quot;B&quot;, &quot;R&quot;},
				{&quot;G&quot;, &quot;B&quot;, &quot;I&quot;},
				{&quot;V&quot;, &quot;B&quot;, &quot;X&quot;}
		};
		testGetNodesInFlowHelper(flowNames, expected, load3);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mWd0yEe2-WKuFT59MHQ" name="testGetHyperPeriod1" specification="_qW4S4t0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>assertEquals(300, load1.getHyperPeriod());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mWt0yEe2-WKuFT59MHQ" name="testGetHyperPeriod2" specification="_qW5hA90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>assertEquals(100, load2.getHyperPeriod());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM9mW90yEe2-WKuFT59MHQ" name="testGetHyperPeriod3" specification="_qW6vId0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>assertEquals(100, load3.getHyperPeriod());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NYN0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLinkHelper" specification="_rGJMot0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM-NYd0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>//created an expected value that will not appear in typical program use
		//(somewhat like the example from discussion)
		
		final int EXPECTED_NUM_ATTEMPTS = 80085;
		
		FlowMap flows = load.getFlows();
		ArrayList&lt;Flow> flowList = new ArrayList&lt;Flow> (flows.values());
		
		//iterate through the flowList and put expected value in each element
		for(int i = 0; i &lt; flowList.size(); i++) {
			ArrayList&lt;Integer> expected = new ArrayList&lt;>();
			
			for(int j = 0; j &lt; flowList.size(); j++) {
				expected.add(EXPECTED_NUM_ATTEMPTS);
			}	
			
			//create copy of list to avoid reference errors
			ArrayList&lt;Integer> copy = new ArrayList&lt;>(expected);
			
			flowList.get(i).setLinkTxAndTotalCost(copy);
			
			//remove the last element (that is what the getNumTxAttemptsPerLink does)
			expected.remove(expected.size()-1);
			
			//the return type needs to be an array, so this changes it to fix that
			Object[] expectedArray = expected.toArray();
			
			//check that the flowList elements are 80085 for each link
			assertArrayEquals(expectedArray, load.getNumTxAttemptsPerLink(flowList.get(i).getName()));
		}	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NYt0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLink1" specification="_qW7WMN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>testGetNumTxAttemptsPerLinkHelper(load1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NY90yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLink2" specification="_qW7WNN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>testGetNumTxAttemptsPerLinkHelper(load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NZN0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLink3" specification="_qW_Akt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>testGetNumTxAttemptsPerLinkHelper(load3);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NZd0yEe2-WKuFT59MHQ" name="testMaxFlowLengthHelper" specification="_rGJMpN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM-NZt0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>FlowMap flows = load.getFlows();
		ArrayList&lt;Flow> flowList = new ArrayList&lt;Flow> (flows.values());
		//iterate through flowList to make it an empty list (for edge cases)
		for(int i = 0; i &lt; flowList.size(); i++) {
			flowList.get(i).setNodes(new ArrayList&lt;Node>());
		}
		//check that the array is empty (for edge case)
		assertEquals(0, load.maxFlowLength());
		
		//iterate through flowList and fill list with i amount of nodes
		for(int i = 0; i &lt; flowList.size(); i++) {
			ArrayList&lt;Node> nodeList = new ArrayList&lt;Node> ();
			for(int j = 0; j &lt; i; j++) {
				nodeList.add(new Node(&quot;test&quot;, 0, 0));
			}
			//set nodes to the created nodeList
			flowList.get(i).setNodes(nodeList);
			int expected = i;
			//check that the largest size of any flow in load is returned by maxFlowLength()
			assertEquals(expected, load.maxFlowLength());
		}	
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NZ90yEe2-WKuFT59MHQ" name="testMaxFlowLength1" specification="_qXAOsd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>testMaxFlowLengthHelper(load1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-NaN0yEe2-WKuFT59MHQ" name="testMaxFlowLength2" specification="_qXAOtd0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>testMaxFlowLengthHelper(load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-Nad0yEe2-WKuFT59MHQ" name="testMaxFlowLengt31" specification="_qXA1w90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>testMaxFlowLengthHelper(load3);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0cN0yEe2-WKuFT59MHQ" name="testGetFlowDeadlineHelper" specification="_rGJzsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM-0cd0yEe2-WKuFT59MHQ" name="flowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM-0ct0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM-0c90yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>FlowMap flows = load.getFlows();
		final int EXPECTED = 80085;
		//iterate through the flows in load and check if the flow is equal to the expected value
		//that is not likely(88085) to appear in typical program use after it is set
		//(somewhat like the example from discussion)
		Collection&lt;Flow> flowList = flows.values();
		for(int i = 0; i &lt; flowList.size(); i++) {
			flows.get(flowNames[i]).setDeadline(EXPECTED);
			assertEquals(EXPECTED, load.getFlowDeadline(flowNames[i]));
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0dN0yEe2-WKuFT59MHQ" name="testGetFlowDeadline1" specification="_qXBc0d0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;AF1&quot;, &quot;AF5&quot;, &quot;AF2&quot;, &quot;AF4&quot;, &quot;AF10&quot;};
		testGetFlowDeadlineHelper(flowNames, load1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0dd0yEe2-WKuFT59MHQ" name="testGetFlowDeadline2" specification="_qXCD4N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		testGetFlowDeadlineHelper(flowNames, load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0dt0yEe2-WKuFT59MHQ" name="testGetFlowDeadline3" specification="_qXCD5N0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		testGetFlowDeadlineHelper(flowNames, load3);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0d90yEe2-WKuFT59MHQ" name="testSetFlowDeadlineHelper" specification="_rGJztN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM-0eN0yEe2-WKuFT59MHQ" name="flowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rM-0ed0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rM-0et0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>FlowMap flows = load.getFlows();
		final int EXPECTED = 80085;
		//almost identical to testGetFlowDeadlineHelper (but need .get to check the flowNames)
		//iterate through the flows in load and check if the flow is equal to the expected value
		//that is not likely(88085) to appear in typical program use after it is set
		//(somewhat like the example from discussion)
		Collection&lt;Flow> flowList = flows.values();
		for(int i = 0; i &lt; flowList.size(); i++) {
			load.setFlowDeadline(flowNames[i], EXPECTED);
			assertEquals(EXPECTED, flows.get(flowNames[i]).getDeadline());
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0e90yEe2-WKuFT59MHQ" name="testSetFlowDeadline1" specification="_qXD5EN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;AF1&quot;, &quot;AF5&quot;, &quot;AF2&quot;, &quot;AF4&quot;, &quot;AF10&quot;};
		testGetFlowDeadlineHelper(flowNames, load1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0fN0yEe2-WKuFT59MHQ" name="testSetFlowDeadline2" specification="_qXEgIt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		testSetFlowDeadlineHelper(flowNames, load2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM-0fd0yEe2-WKuFT59MHQ" name="testSetFlowDeadline3" specification="_qXEgJt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>String[] flowNames = {&quot;F0&quot;, &quot;F1&quot;, &quot;F2&quot;, &quot;F3&quot;, &quot;F4&quot;, &quot;F5&quot;};
		testGetFlowDeadlineHelper(flowNames, load3);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qWU5QN0yEe2-WKuFT59MHQ" name="testAddFlow" visibility="package" method="_rM6jBN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWVgUt0yEe2-WKuFT59MHQ" name="testAddFlowduplicateNames" visibility="package" method="_rM6jBd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWWucN0yEe2-WKuFT59MHQ" name="testAddFlowNull" visibility="package" method="_rM6jBt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWZKsN0yEe2-WKuFT59MHQ" name="testAddNodeToFlow" visibility="package" method="_rM6jDN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWZxw90yEe2-WKuFT59MHQ" name="testAddNodeToFlow2" visibility="package" method="_rM7KEN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWa_4N0yEe2-WKuFT59MHQ" name="testAddNodeToFlowNull" visibility="package" method="_rM7KEd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWbm8t0yEe2-WKuFT59MHQ" name="testGetTotalTx" visibility="package" method="_rM7KFt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWcOAt0yEe2-WKuFT59MHQ" name="testGetTotalTx2" visibility="package" method="_rM7KF90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWc1Ed0yEe2-WKuFT59MHQ" name="testGetTotalTxTorture" visibility="package" method="_rM7KGN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWdcIN0yEe2-WKuFT59MHQ" name="testGetFlowPriority" visibility="package" method="_rM7xIN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWdcJN0yEe2-WKuFT59MHQ" name="testGetFlowPriority2" visibility="package" method="_rM7xId0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWeDM90yEe2-WKuFT59MHQ" name="testSetFlowPriority" visibility="package" method="_rM7xIt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWeqQt0yEe2-WKuFT59MHQ" name="testSetFlowPriorityNegative" visibility="package" method="_rM7xI90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWfRUt0yEe2-WKuFT59MHQ" name="testGetFlowTxAttemptsPerLink" visibility="package" method="_rM7xKN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWf4Y90yEe2-WKuFT59MHQ" name="testGetFlowTxAttemptsPerLink2" visibility="package" method="_rM7xKd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWmmEN0yEe2-WKuFT59MHQ" name="testGetFlowTxAttemptsPerLinkTorture" visibility="package" method="_rM7xKt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWnNId0yEe2-WKuFT59MHQ" name="testSetFlowsInRModerTorture" visibility="package" method="_rM7xK90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWnNJd0yEe2-WKuFT59MHQ" name="testGetNodeNamesOrderedAlpha" visibility="package" method="_rM8YMN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWn0M90yEe2-WKuFT59MHQ" name="testGetNodeNamesOrderedAlpha2" visibility="package" method="_rM8YMd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWobQ90yEe2-WKuFT59MHQ" name="testGetNodeNamesOrderedAlpha3" visibility="package" method="_rM8YMt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWpCU90yEe2-WKuFT59MHQ" name="initializeLoads" visibility="package" method="_rM8YM90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWqQcN0yEe2-WKuFT59MHQ" name="testGetFlowNames1" visibility="package" method="_rM8YON0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWqQdN0yEe2-WKuFT59MHQ" name="testGetFlowNames2" visibility="package" method="_rM8YOd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWq3g90yEe2-WKuFT59MHQ" name="testGetFlowNames3" visibility="package" method="_rM8YOt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWrekt0yEe2-WKuFT59MHQ" name="testGetNodeIndex1" visibility="package" method="_rM8_Rt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWw-IN0yEe2-WKuFT59MHQ" name="testGetNodeIndex2" visibility="package" method="_rM8_R90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qWzaYN0yEe2-WKuFT59MHQ" name="testGetNodeIndex3" visibility="package" method="_rM8_SN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW0BcN0yEe2-WKuFT59MHQ" name="testGetFlowsInNode1" visibility="package" method="_rM9mVt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW0og90yEe2-WKuFT59MHQ" name="testGetFlowsInNode2" visibility="package" method="_rM9mV90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW12ot0yEe2-WKuFT59MHQ" name="testGetFlowsInNode3" visibility="package" method="_rM9mWN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW4S4t0yEe2-WKuFT59MHQ" name="testGetHyperPeriod1" visibility="package" method="_rM9mWd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW5hA90yEe2-WKuFT59MHQ" name="testGetHyperPeriod2" visibility="package" method="_rM9mWt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW6vId0yEe2-WKuFT59MHQ" name="testGetHyperPeriod3" visibility="package" method="_rM9mW90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW7WMN0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLink1" visibility="package" method="_rM-NYt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW7WNN0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLink2" visibility="package" method="_rM-NY90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qW_Akt0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLink3" visibility="package" method="_rM-NZN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXAOsd0yEe2-WKuFT59MHQ" name="testMaxFlowLength1" visibility="package" method="_rM-NZ90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXAOtd0yEe2-WKuFT59MHQ" name="testMaxFlowLength2" visibility="package" method="_rM-NaN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXA1w90yEe2-WKuFT59MHQ" name="testMaxFlowLengt31" visibility="package" method="_rM-Nad0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXBc0d0yEe2-WKuFT59MHQ" name="testGetFlowDeadline1" visibility="package" method="_rM-0dN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXCD4N0yEe2-WKuFT59MHQ" name="testGetFlowDeadline2" visibility="package" method="_rM-0dd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXCD5N0yEe2-WKuFT59MHQ" name="testGetFlowDeadline3" visibility="package" method="_rM-0dt0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXD5EN0yEe2-WKuFT59MHQ" name="testSetFlowDeadline1" visibility="package" method="_rM-0e90yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXEgIt0yEe2-WKuFT59MHQ" name="testSetFlowDeadline2" visibility="package" method="_rM-0fN0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXEgJt0yEe2-WKuFT59MHQ" name="testSetFlowDeadline3" visibility="package" method="_rM-0fd0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_rGFiQN0yEe2-WKuFT59MHQ" name="testAddFlowHelper" visibility="package" method="_rM6jAN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGGJUN0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGGJUt0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGGJUd0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGGJU90yEe2-WKuFT59MHQ" name="addNodeHelper" visibility="package" method="_rM6jB90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGGJVN0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGGJV90yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGGJVd0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGGJVt0yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGGwYN0yEe2-WKuFT59MHQ" name="getTotalTxHelper" visibility="package" method="_rM7KEt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGGwYd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGGwYt0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGGwY90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGGwZN0yEe2-WKuFT59MHQ" name="testGetFlowPriorityHelper" visibility="package" method="_rM7KGd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGGwZd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGGwZt0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGGwZ90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGHXcN0yEe2-WKuFT59MHQ" name="getFlowTxAttemptsPerLinkHelper" visibility="package" method="_rM7xJN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGHXcd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGHXct0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGHXc90yEe2-WKuFT59MHQ" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGHXdN0yEe2-WKuFT59MHQ" name="testGetFlowNamesHelper" visibility="package" method="_rM8YNN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGHXdd0yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGH-gN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGHXdt0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGH-gd0yEe2-WKuFT59MHQ" name="testGetNodeIndexHelper" visibility="package" method="_rM8_QN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGH-gt0yEe2-WKuFT59MHQ" name="names">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGH-hd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGH-g90yEe2-WKuFT59MHQ" name="expectedIndecies">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGH-ht0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGH-hN0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGIlkd0yEe2-WKuFT59MHQ" name="testGetNodesInFlowHelper" visibility="package" method="_rM9mUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGIlkt0yEe2-WKuFT59MHQ" name="flowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGIlld0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGIlk90yEe2-WKuFT59MHQ" name="expected">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGJMoN0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGIllN0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGJMot0yEe2-WKuFT59MHQ" name="testGetNumTxAttemptsPerLinkHelper" visibility="package" method="_rM-NYN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGJMo90yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGJMpN0yEe2-WKuFT59MHQ" name="testMaxFlowLengthHelper" visibility="package" method="_rM-NZd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGJMpd0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGJzsN0yEe2-WKuFT59MHQ" name="testGetFlowDeadlineHelper" visibility="package" method="_rM-0cN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGJzsd0yEe2-WKuFT59MHQ" name="flowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGJzs90yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGJzst0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGJztN0yEe2-WKuFT59MHQ" name="testSetFlowDeadlineHelper" visibility="package" method="_rM-0d90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGJztd0yEe2-WKuFT59MHQ" name="flowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rGKawd0yEe2-WKuFT59MHQ" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGKawN0yEe2-WKuFT59MHQ" name="load" type="_qVLCsN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_qXJ_sN0yEe2-WKuFT59MHQ" name="SchedulableObject" visibility="public" isAbstract="true">
              <ownedAttribute xmi:id="_rKgvQN0yEe2-WKuFT59MHQ" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKgvQd0yEe2-WKuFT59MHQ" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKgvQt0yEe2-WKuFT59MHQ" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKgvQ90yEe2-WKuFT59MHQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKhWUN0yEe2-WKuFT59MHQ" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKhWUd0yEe2-WKuFT59MHQ" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKhWUt0yEe2-WKuFT59MHQ" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKhWU90yEe2-WKuFT59MHQ" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKhWVN0yEe2-WKuFT59MHQ" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKikcN0yEe2-WKuFT59MHQ" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKjLgN0yEe2-WKuFT59MHQ" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKjykd0yEe2-WKuFT59MHQ" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKkZoN0yEe2-WKuFT59MHQ" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKlAsN0yEe2-WKuFT59MHQ" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKlAsd0yEe2-WKuFT59MHQ" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKlAs90yEe2-WKuFT59MHQ" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKlnwd0yEe2-WKuFT59MHQ" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKlnw90yEe2-WKuFT59MHQ" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKlnxN0yEe2-WKuFT59MHQ" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_rKmO0N0yEe2-WKuFT59MHQ" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_rKmO0d0yEe2-WKuFT59MHQ" name="predecessor" type="_qXJ_sN0yEe2-WKuFT59MHQ" association="_rNi1It0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rKm14N0yEe2-WKuFT59MHQ" name="endTimes" visibility="private" type="_qR5sQN0yEe2-WKuFT59MHQ" association="_rPVk4N0yEe2-WKuFT59MHQ"/>
              <ownedAttribute xmi:id="_rKnc8t0yEe2-WKuFT59MHQ" name="subObjects" type="_rGLo4d0yEe2-WKuFT59MHQ" isReadOnly="true" association="_rPVk490yEe2-WKuFT59MHQ"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rM_bgN0yEe2-WKuFT59MHQ" name="SchedulableObject" specification="_qXO4MN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rM_bgd0yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = -1; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNACkN0yEe2-WKuFT59MHQ" name="SchedulableObject" specification="_rGM3AN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNACkd0yEe2-WKuFT59MHQ" name="obj" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNACkt0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACk90yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();
		this.priority = obj.getPriority();
		this.period = obj.getPeriod();
		this.deadline = obj.getDeadline();
		this.phase = obj.getPhase();
		this.startTime = obj.getStartTime();
		this.endTime = obj.getEndTime();
		this.releaseTime = obj.getReleaseTime(); // initialize parameters
		this.lastUpdateTime = time; // reset lastUpdate 
		this.predecessor = obj.getPredecessor();
		this.endTimes = new PriorityQueue&lt;Integer>(); 
		this.endTimes.addAll(obj.getAllEndTimes());
		this.subObjects = new LinkedList&lt;SchedulableObject>();
		this.subObjects.addAll(obj.getSubObjects());
		
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNAClN0yEe2-WKuFT59MHQ" name="SchedulableObject" specification="_qXQGUN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNACld0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNAClt0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACl90yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACmN0yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACmd0yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		this.priority = priority;
		this.period = period;
		this.deadline = deadline;
		this.phase = phase;
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNACmt0yEe2-WKuFT59MHQ" name="SchedulableObject" specification="_qXQtZN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNACm90yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACnN0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACnd0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACnt0yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACn90yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNACoN0yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();
		this.name = name;
		this.priority = priority;
		this.period = period;
		this.deadline = deadline;
		this.phase = phase;
		setNextReleaseTime(0); // initialize parameters
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNACod0yEe2-WKuFT59MHQ" name="setDefaultParameters" specification="_qXRUd90yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>this.name = UNKNOWN;
		this.priority = DEFAULT;
		this.period = DEFAULT_PERIOD;
		this.deadline = DEFAULT_DEADLINE;
		this.phase = DEFAULT;
		this.startTime = BEFORE_START;
		this.endTime = BEFORE_START;
		this.predecessor = null; 
		this.endTimes = new PriorityQueue&lt;Integer>(); 
		this.subObjects = new LinkedList&lt;SchedulableObject>();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNACot0yEe2-WKuFT59MHQ" name="getAllEndTimes" specification="_qXRUeN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNACo90yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
                <language>java</language>
                <body>return endTimes;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNACpN0yEe2-WKuFT59MHQ" name="addToEndTimes" specification="_qXTwsN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNACpd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q
		 * so that we can track predecessor endTimes
		 * and make sure successors don't start before 
		 * predecessors
		 */
		endTimes.add(time);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNApoN0yEe2-WKuFT59MHQ" name="peekEndTimes" specification="_qXUXwN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNApod0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNApot0yEe2-WKuFT59MHQ" name="pollEndTimes" specification="_qXUXwt0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>endTimes.poll();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNApo90yEe2-WKuFT59MHQ" name="addSubObject" specification="_rGNeFN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNAppN0yEe2-WKuFT59MHQ" name="obj" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <language>java</language>
                <body>subObjects.add(obj);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNAppd0yEe2-WKuFT59MHQ" name="getName" specification="_qXU-0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNAppt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNApp90yEe2-WKuFT59MHQ" name="setName" specification="_qXU-0t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNApqN0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNApqd0yEe2-WKuFT59MHQ" name="getReleaseTime" specification="_qXVl4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNApqt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNApq90yEe2-WKuFT59MHQ" name="getPhase" specification="_qXVl4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNAprN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQsN0yEe2-WKuFT59MHQ" name="getStartTime" specification="_qXWM8N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQsd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQst0yEe2-WKuFT59MHQ" name="setEndTime" specification="_qXWM8t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQs90yEe2-WKuFT59MHQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQtN0yEe2-WKuFT59MHQ" name="setStartTime" specification="_qXWM9N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQtd0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQtt0yEe2-WKuFT59MHQ" name="setReleaseTime" specification="_qXW0AN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQt90yEe2-WKuFT59MHQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQuN0yEe2-WKuFT59MHQ" name="setPeriod" specification="_qXW0At0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQud0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQut0yEe2-WKuFT59MHQ" name="setPhase" specification="_qXW0BN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQu90yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNBQvN0yEe2-WKuFT59MHQ" name="setNextReleaseTime" specification="_qXXbEN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNBQvd0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {
			// released every (j*period)+phase, for all j >=0
			Integer j = 0;
			if (period > 0) {
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor
			} 
			Integer nextRelease = (j*period)+phase ;
			releaseTime = nextRelease;
			lastUpdateTime = currentTime;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNB3wN0yEe2-WKuFT59MHQ" name="maxPhaseComparison" specification="_rGOFIN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNB3wd0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB3wt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNB3w90yEe2-WKuFT59MHQ" name="maxPhaseComparison" specification="_rGOFI90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNB3xN0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB3xd0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB3xt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNB3x90yEe2-WKuFT59MHQ" name="deadlineComparison" specification="_rGOFJ90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNB3yN0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB3yd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNB3yt0yEe2-WKuFT59MHQ" name="deadlineComparison" specification="_rGOsMt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNB3y90yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB3zN0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB3zd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNB3zt0yEe2-WKuFT59MHQ" name="periodComparison" specification="_rGOsNt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNB3z90yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNB30N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNCe0N0yEe2-WKuFT59MHQ" name="periodComparison" specification="_rGPTQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNCe0d0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe0t0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe090yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNCe1N0yEe2-WKuFT59MHQ" name="priorityComparison" specification="_rGPTRN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNCe1d0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe1t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNCe190yEe2-WKuFT59MHQ" name="priorityComparison" specification="_rGPTR90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNCe2N0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe2d0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe2t0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNCe290yEe2-WKuFT59MHQ" name="releaseTimeComparison" specification="_rGP6UN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNCe3N0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe3d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNCe3t0yEe2-WKuFT59MHQ" name="releaseTimeComparison" specification="_rGP6U90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNCe390yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe4N0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe4d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNCe4t0yEe2-WKuFT59MHQ" name="LatestReleaseTimeComparison" specification="_rGP6V90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNCe490yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNCe5N0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNDF4N0yEe2-WKuFT59MHQ" name="LatestReleaseTimeComparison" specification="_rGQhYd0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNDF4d0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNDF4t0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rNDF490yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNDF5N0yEe2-WKuFT59MHQ" name="compareAscendingOrder" specification="_qXZQQN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNDF5d0yEe2-WKuFT59MHQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNDF5t0yEe2-WKuFT59MHQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNDF590yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)
			return -1; 
		else if (v1 > v2)
			return 1; 
		return 0; // tied: values are the same 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNDF6N0yEe2-WKuFT59MHQ" name="compareDescendingOrder" specification="_qXZQRN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNDF6d0yEe2-WKuFT59MHQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNDF6t0yEe2-WKuFT59MHQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rNDF690yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)
			return 1; 
		else if (v1 > v2)
			return -1; 
		return 0; // tied: values are the same 
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNDF7N0yEe2-WKuFT59MHQ" name="print" specification="_qXZ3Ud0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rNDF7d0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);
		print();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rNDF7t0yEe2-WKuFT59MHQ" name="print" specification="_qXaeYN0yEe2-WKuFT59MHQ">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qXO4MN0yEe2-WKuFT59MHQ" name="SchedulableObject" visibility="package" method="_rM_bgN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qXPfQN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qXPfQd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qXPfQt0yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qXQGUN0yEe2-WKuFT59MHQ" name="SchedulableObject" visibility="package" method="_rNAClN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qXQtYd0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qXQtYt0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qXQGUd0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXQGUt0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXQGU90yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXQtYN0yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXQtY90yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qXQtZN0yEe2-WKuFT59MHQ" name="SchedulableObject" visibility="package" method="_rNACmt0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_qXRUdN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_qXRUdd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_qXQtZd0yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXRUcN0yEe2-WKuFT59MHQ" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXRUcd0yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXRUct0yEe2-WKuFT59MHQ" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXRUc90yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXRUdt0yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qXRUd90yEe2-WKuFT59MHQ" name="setDefaultParameters" visibility="private" method="_rNACod0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXRUeN0yEe2-WKuFT59MHQ" name="getAllEndTimes" method="_rNACot0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcMN0yEe2-WKuFT59MHQ">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGNeE90yEe2-WKuFT59MHQ" type="_qR5sQN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qXTwsN0yEe2-WKuFT59MHQ" name="addToEndTimes" method="_rNACpN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qXTwsd0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXUXwN0yEe2-WKuFT59MHQ" name="peekEndTimes" method="_rNApoN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qXUXwd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXUXwt0yEe2-WKuFT59MHQ" name="pollEndTimes" method="_rNApot0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_qXU-0N0yEe2-WKuFT59MHQ" name="getName" method="_rNAppd0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcMd0yEe2-WKuFT59MHQ">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXU-0d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXU-0t0yEe2-WKuFT59MHQ" name="setName" method="_rNApp90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcMt0yEe2-WKuFT59MHQ">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXU-090yEe2-WKuFT59MHQ" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXVl4N0yEe2-WKuFT59MHQ" name="getReleaseTime" method="_rNApqd0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcM90yEe2-WKuFT59MHQ">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXVl4d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXVl4t0yEe2-WKuFT59MHQ" name="getPhase" method="_rNApq90yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcNN0yEe2-WKuFT59MHQ">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXVl490yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXWM8N0yEe2-WKuFT59MHQ" name="getStartTime" method="_rNBQsN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcNd0yEe2-WKuFT59MHQ">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXWM8d0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXWM8t0yEe2-WKuFT59MHQ" name="setEndTime" method="_rNBQst0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcNt0yEe2-WKuFT59MHQ">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXWM890yEe2-WKuFT59MHQ" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXWM9N0yEe2-WKuFT59MHQ" name="setStartTime" method="_rNBQtN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcN90yEe2-WKuFT59MHQ">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXWM9d0yEe2-WKuFT59MHQ" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXW0AN0yEe2-WKuFT59MHQ" name="setReleaseTime" method="_rNBQtt0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcON0yEe2-WKuFT59MHQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXW0Ad0yEe2-WKuFT59MHQ" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXW0At0yEe2-WKuFT59MHQ" name="setPeriod" method="_rNBQuN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcOd0yEe2-WKuFT59MHQ">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXW0A90yEe2-WKuFT59MHQ" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXW0BN0yEe2-WKuFT59MHQ" name="setPhase" method="_rNBQut0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcOt0yEe2-WKuFT59MHQ">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXW0Bd0yEe2-WKuFT59MHQ" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXXbEN0yEe2-WKuFT59MHQ" name="setNextReleaseTime" method="_rNBQvN0yEe2-WKuFT59MHQ">
                <ownedComment xmi:id="_rNjcO90yEe2-WKuFT59MHQ">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_qXXbEd0yEe2-WKuFT59MHQ" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXZQQN0yEe2-WKuFT59MHQ" name="compareAscendingOrder" method="_rNDF5N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qXZQQd0yEe2-WKuFT59MHQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXZQQt0yEe2-WKuFT59MHQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXZQQ90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXZQRN0yEe2-WKuFT59MHQ" name="compareDescendingOrder" method="_rNDF6N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qXZQRd0yEe2-WKuFT59MHQ" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXZQRt0yEe2-WKuFT59MHQ" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qXZ3UN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXZ3Ud0yEe2-WKuFT59MHQ" name="print" method="_rNDF7N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_qXZ3Ut0yEe2-WKuFT59MHQ" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qXaeYN0yEe2-WKuFT59MHQ" name="print" method="_rNDF7t0yEe2-WKuFT59MHQ"/>
              <ownedOperation xmi:id="_rGM3AN0yEe2-WKuFT59MHQ" name="SchedulableObject" visibility="package" method="_rNACkN0yEe2-WKuFT59MHQ">
                <eAnnotations xmi:id="_rGNeEN0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_rGNeEd0yEe2-WKuFT59MHQ" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_rNi1JN0yEe2-WKuFT59MHQ">
                  <body>Constructor that creates a copy of schedulable 
	 * parameters of the input obj, but setting its
	 * lastUpdateTime to input time.
	 * 
	 * @param obj
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_rGM3Ad0yEe2-WKuFT59MHQ" name="obj" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGM3At0yEe2-WKuFT59MHQ" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_rGNeEt0yEe2-WKuFT59MHQ" type="_qXJ_sN0yEe2-WKuFT59MHQ" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGNeFN0yEe2-WKuFT59MHQ" name="addSubObject" method="_rNApo90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGNeFd0yEe2-WKuFT59MHQ" name="obj" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
              </ownedOperation>
              <ownedOperation xmi:id="_rGOFIN0yEe2-WKuFT59MHQ" name="maxPhaseComparison" method="_rNB3wN0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGOFId0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOFIt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGOFI90yEe2-WKuFT59MHQ" name="maxPhaseComparison" method="_rNB3w90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGOFJN0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOFJd0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOFJt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGOFJ90yEe2-WKuFT59MHQ" name="deadlineComparison" method="_rNB3x90yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGOsMN0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOsMd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGOsMt0yEe2-WKuFT59MHQ" name="deadlineComparison" method="_rNB3yt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGOsM90yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOsNN0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOsNd0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGOsNt0yEe2-WKuFT59MHQ" name="periodComparison" method="_rNB3zt0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGOsN90yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGOsON0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGPTQN0yEe2-WKuFT59MHQ" name="periodComparison" method="_rNCe0N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGPTQd0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGPTQt0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGPTQ90yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGPTRN0yEe2-WKuFT59MHQ" name="priorityComparison" method="_rNCe1N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGPTRd0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGPTRt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGPTR90yEe2-WKuFT59MHQ" name="priorityComparison" method="_rNCe190yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGPTSN0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGPTSd0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGPTSt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGP6UN0yEe2-WKuFT59MHQ" name="releaseTimeComparison" method="_rNCe290yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGP6Ud0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGP6Ut0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGP6U90yEe2-WKuFT59MHQ" name="releaseTimeComparison" method="_rNCe3t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGP6VN0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGP6Vd0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGP6Vt0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGP6V90yEe2-WKuFT59MHQ" name="LatestReleaseTimeComparison" method="_rNCe4t0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGP6WN0yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGQhYN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_rGQhYd0yEe2-WKuFT59MHQ" name="LatestReleaseTimeComparison" method="_rNDF4N0yEe2-WKuFT59MHQ">
                <ownedParameter xmi:id="_rGQhYt0yEe2-WKuFT59MHQ" name="obj1" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGQhY90yEe2-WKuFT59MHQ" name="obj2" type="_qXJ_sN0yEe2-WKuFT59MHQ"/>
                <ownedParameter xmi:id="_rGQhZN0yEe2-WKuFT59MHQ" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_rG8d4N0yEe2-WKuFT59MHQ" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rHROAN0yEe2-WKuFT59MHQ" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rHU4YN0yEe2-WKuFT59MHQ" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rHlXEN0yEe2-WKuFT59MHQ" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rHl-Jt0yEe2-WKuFT59MHQ" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_rNOFAN0yEe2-WKuFT59MHQ" name="" memberEnd="_rI17VN0yEe2-WKuFT59MHQ _rNSWcN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rNSWcN0yEe2-WKuFT59MHQ" name="" type="_qNRD4N0yEe2-WKuFT59MHQ" association="_rNOFAN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rNfx0N0yEe2-WKuFT59MHQ" name="" memberEnd="_rJ_K1d0yEe2-WKuFT59MHQ _rNfx0d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rNfx0d0yEe2-WKuFT59MHQ" name="" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rNfx0N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rNgY4N0yEe2-WKuFT59MHQ" name="" memberEnd="_rJ_x4N0yEe2-WKuFT59MHQ _rNgY4d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rNgY4d0yEe2-WKuFT59MHQ" name="" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rNgY4N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rNi1It0yEe2-WKuFT59MHQ" name="" memberEnd="_rKmO0d0yEe2-WKuFT59MHQ _rNi1I90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rNi1I90yEe2-WKuFT59MHQ" name="" type="_qXJ_sN0yEe2-WKuFT59MHQ" association="_rNi1It0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOoaQN0yEe2-WKuFT59MHQ" name="" memberEnd="_rOoaQd0yEe2-WKuFT59MHQ _rILM8N0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOoaQd0yEe2-WKuFT59MHQ" name="" type="_qI2d8N0yEe2-WKuFT59MHQ" association="_rOoaQN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOt50N0yEe2-WKuFT59MHQ" name="" memberEnd="_rOt50d0yEe2-WKuFT59MHQ _rINCIN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOt50d0yEe2-WKuFT59MHQ" name="" type="_qI2d8N0yEe2-WKuFT59MHQ" association="_rOt50N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOvH8N0yEe2-WKuFT59MHQ" name="" memberEnd="_rOvH8d0yEe2-WKuFT59MHQ _rINpMd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOvH8d0yEe2-WKuFT59MHQ" name="" type="_qI2d8N0yEe2-WKuFT59MHQ" association="_rOvH8N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOvvAN0yEe2-WKuFT59MHQ" name="" memberEnd="_rOvvAd0yEe2-WKuFT59MHQ _rITIwN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOvvAd0yEe2-WKuFT59MHQ" name="" type="_qKrp8N0yEe2-WKuFT59MHQ" association="_rOvvAN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOvvA90yEe2-WKuFT59MHQ" name="" memberEnd="_rOvvBN0yEe2-WKuFT59MHQ _rITv0d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOvvBN0yEe2-WKuFT59MHQ" name="" type="_qKrp8N0yEe2-WKuFT59MHQ" association="_rOvvA90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOwWEd0yEe2-WKuFT59MHQ" name="" memberEnd="_rOwWEt0yEe2-WKuFT59MHQ _rIU99N0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOwWEt0yEe2-WKuFT59MHQ" name="" type="_qK66gN0yEe2-WKuFT59MHQ" association="_rOwWEd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOw9Id0yEe2-WKuFT59MHQ" name="" memberEnd="_rOw9It0yEe2-WKuFT59MHQ _rIVlAd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOw9It0yEe2-WKuFT59MHQ" name="" type="_qK66gN0yEe2-WKuFT59MHQ" association="_rOw9Id0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOw9JN0yEe2-WKuFT59MHQ" name="" memberEnd="_rOw9Jd0yEe2-WKuFT59MHQ _rIWzI90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOw9Jd0yEe2-WKuFT59MHQ" name="" type="_qLCPQN0yEe2-WKuFT59MHQ" association="_rOw9JN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOxkMd0yEe2-WKuFT59MHQ" name="" memberEnd="_rOxkMt0yEe2-WKuFT59MHQ _rIYoUN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOxkMt0yEe2-WKuFT59MHQ" name="" type="_qLwoAN0yEe2-WKuFT59MHQ" association="_rOxkMd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOyLQN0yEe2-WKuFT59MHQ" name="" memberEnd="_rOyLQd0yEe2-WKuFT59MHQ _rIZPY90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOyLQd0yEe2-WKuFT59MHQ" name="" type="_qLwoAN0yEe2-WKuFT59MHQ" association="_rOyLQN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOyLQ90yEe2-WKuFT59MHQ" name="" memberEnd="_rOyLRN0yEe2-WKuFT59MHQ _rIy4AN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOyLRN0yEe2-WKuFT59MHQ" name="" type="_qMrOAN0yEe2-WKuFT59MHQ" association="_rOyLQ90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOyyUd0yEe2-WKuFT59MHQ" name="" memberEnd="_rOyyUt0yEe2-WKuFT59MHQ _rI0tMd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOyyUt0yEe2-WKuFT59MHQ" name="" type="_qMrOAN0yEe2-WKuFT59MHQ" association="_rOyyUd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOzZYN0yEe2-WKuFT59MHQ" name="" memberEnd="_rOzZYd0yEe2-WKuFT59MHQ _rI8pAt0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOzZYd0yEe2-WKuFT59MHQ" name="" type="_qN3g0N0yEe2-WKuFT59MHQ" association="_rOzZYN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rOzZY90yEe2-WKuFT59MHQ" name="" memberEnd="_rOzZZN0yEe2-WKuFT59MHQ _rI93Id0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rOzZZN0yEe2-WKuFT59MHQ" name="" type="_qN3g0N0yEe2-WKuFT59MHQ" association="_rOzZY90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO0Acd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO0Act0yEe2-WKuFT59MHQ _rI-eMd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO0Act0yEe2-WKuFT59MHQ" name="" type="_qN3g0N0yEe2-WKuFT59MHQ" association="_rO0Acd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO0ngd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO0ngt0yEe2-WKuFT59MHQ _rI_FQd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO0ngt0yEe2-WKuFT59MHQ" name="" type="_qN3g0N0yEe2-WKuFT59MHQ" association="_rO0ngd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO0nhN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO0nhd0yEe2-WKuFT59MHQ _rI_FQ90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO0nhd0yEe2-WKuFT59MHQ" name="" type="_qN3g0N0yEe2-WKuFT59MHQ" association="_rO0nhN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO1Okd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO1Okt0yEe2-WKuFT59MHQ _rJBhg90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO1Okt0yEe2-WKuFT59MHQ" name="" type="_qOi2QN0yEe2-WKuFT59MHQ" association="_rO1Okd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO11od0yEe2-WKuFT59MHQ" name="" memberEnd="_rO11ot0yEe2-WKuFT59MHQ _rJCIlN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO11ot0yEe2-WKuFT59MHQ" name="" type="_qOi2QN0yEe2-WKuFT59MHQ" association="_rO11od0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO2csN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO2csd0yEe2-WKuFT59MHQ _rJCvod0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO2csd0yEe2-WKuFT59MHQ" name="" type="_qOw4sN0yEe2-WKuFT59MHQ" association="_rO2csN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO2cs90yEe2-WKuFT59MHQ" name="" memberEnd="_rO2ctN0yEe2-WKuFT59MHQ _rJDWsd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO2ctN0yEe2-WKuFT59MHQ" name="" type="_qOz8AN0yEe2-WKuFT59MHQ" association="_rO2cs90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO3Dwd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO3Dwt0yEe2-WKuFT59MHQ _rJDWs90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO3Dwt0yEe2-WKuFT59MHQ" name="" type="_qOz8AN0yEe2-WKuFT59MHQ" association="_rO3Dwd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO3q0N0yEe2-WKuFT59MHQ" name="" memberEnd="_rO3q0d0yEe2-WKuFT59MHQ _rJD9w90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO3q0d0yEe2-WKuFT59MHQ" name="" type="_qPFo0N0yEe2-WKuFT59MHQ" association="_rO3q0N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO3q090yEe2-WKuFT59MHQ" name="" memberEnd="_rO3q1N0yEe2-WKuFT59MHQ _rJI2QN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO3q1N0yEe2-WKuFT59MHQ" name="" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rO3q090yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO4R4d0yEe2-WKuFT59MHQ" name="" memberEnd="_rO4R4t0yEe2-WKuFT59MHQ _rJJdUN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO4R4t0yEe2-WKuFT59MHQ" name="" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rO4R4d0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO448N0yEe2-WKuFT59MHQ" name="" memberEnd="_rO448d0yEe2-WKuFT59MHQ _rJJdUt0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO448d0yEe2-WKuFT59MHQ" name="" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rO448N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO44890yEe2-WKuFT59MHQ" name="" memberEnd="_rO449N0yEe2-WKuFT59MHQ _rJJdVN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO449N0yEe2-WKuFT59MHQ" name="" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rO44890yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO5gAd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO5gAt0yEe2-WKuFT59MHQ _rJKEYd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO5gAt0yEe2-WKuFT59MHQ" name="" type="_qPSdIN0yEe2-WKuFT59MHQ" association="_rO5gAd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO6HEN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO6HEd0yEe2-WKuFT59MHQ _rJLSg90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO6HEd0yEe2-WKuFT59MHQ" name="" type="_qPX8sN0yEe2-WKuFT59MHQ" association="_rO6HEN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO6HE90yEe2-WKuFT59MHQ" name="" memberEnd="_rO6HFN0yEe2-WKuFT59MHQ _rJL5kd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO6HFN0yEe2-WKuFT59MHQ" name="" type="_qPX8sN0yEe2-WKuFT59MHQ" association="_rO6HE90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO6uId0yEe2-WKuFT59MHQ" name="" memberEnd="_rO6uIt0yEe2-WKuFT59MHQ _rJMgot0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO6uIt0yEe2-WKuFT59MHQ" name="" type="_qPji4N0yEe2-WKuFT59MHQ" association="_rO6uId0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO7VMN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO7VMd0yEe2-WKuFT59MHQ _rJO85N0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO7VMd0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO7VMN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO7VM90yEe2-WKuFT59MHQ" name="" memberEnd="_rO7VNN0yEe2-WKuFT59MHQ _rJPj8d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO7VNN0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO7VM90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO78Qd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO78Qt0yEe2-WKuFT59MHQ _rJQLAN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO78Qt0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO78Qd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO8jUN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO8jUd0yEe2-WKuFT59MHQ _rJSAMd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO8jUd0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO8jUN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO9KYd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO9KYt0yEe2-WKuFT59MHQ _rJTOUN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO9KYt0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO9KYd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO9xcd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO9xct0yEe2-WKuFT59MHQ _rJTOUt0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO9xct0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO9xcd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO-YgN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO-Ygd0yEe2-WKuFT59MHQ _rJT1Yt0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO-Ygd0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO-YgN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO-Yg90yEe2-WKuFT59MHQ" name="" memberEnd="_rO-YhN0yEe2-WKuFT59MHQ _rJVqkN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO-YhN0yEe2-WKuFT59MHQ" name="" type="_qQNDIN0yEe2-WKuFT59MHQ" association="_rO-Yg90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO-_kd0yEe2-WKuFT59MHQ" name="" memberEnd="_rO-_kt0yEe2-WKuFT59MHQ _rJW4td0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO-_kt0yEe2-WKuFT59MHQ" name="" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rO-_kd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO_moN0yEe2-WKuFT59MHQ" name="" memberEnd="_rO_mod0yEe2-WKuFT59MHQ _rJXfwd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO_mod0yEe2-WKuFT59MHQ" name="" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rO_moN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rO_mo90yEe2-WKuFT59MHQ" name="" memberEnd="_rO_mpN0yEe2-WKuFT59MHQ _rJXfw90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rO_mpN0yEe2-WKuFT59MHQ" name="" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rO_mo90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPANsd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPANst0yEe2-WKuFT59MHQ _rJc_U90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPANst0yEe2-WKuFT59MHQ" name="" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rPANsd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPA0wd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPA0wt0yEe2-WKuFT59MHQ _rJfbkd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPA0wt0yEe2-WKuFT59MHQ" name="" type="_qQ6NwN0yEe2-WKuFT59MHQ" association="_rPA0wd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPBb0d0yEe2-WKuFT59MHQ" name="" memberEnd="_rPBb0t0yEe2-WKuFT59MHQ _rJhQwN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPBb0t0yEe2-WKuFT59MHQ" name="" type="_qRk8IN0yEe2-WKuFT59MHQ" association="_rPBb0d0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPBb1N0yEe2-WKuFT59MHQ" name="" memberEnd="_rPBb1d0yEe2-WKuFT59MHQ _rJhQwt0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPBb1d0yEe2-WKuFT59MHQ" name="" type="_qRk8IN0yEe2-WKuFT59MHQ" association="_rPBb1N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPCC4d0yEe2-WKuFT59MHQ" name="" memberEnd="_rPCC4t0yEe2-WKuFT59MHQ _rJkUE90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPCC4t0yEe2-WKuFT59MHQ" name="" type="_qSYNYN0yEe2-WKuFT59MHQ" association="_rPCC4d0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPCp8d0yEe2-WKuFT59MHQ" name="" memberEnd="_rPCp8t0yEe2-WKuFT59MHQ _rJkUFd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPCp8t0yEe2-WKuFT59MHQ" name="" type="_qSYNYN0yEe2-WKuFT59MHQ" association="_rPCp8d0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPCp9N0yEe2-WKuFT59MHQ" name="" memberEnd="_rPCp9d0yEe2-WKuFT59MHQ _rJk7I90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPCp9d0yEe2-WKuFT59MHQ" name="" type="_qSgJMd0yEe2-WKuFT59MHQ" association="_rPCp9N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPDRAd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPDRAt0yEe2-WKuFT59MHQ _rJnXY90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPDRAt0yEe2-WKuFT59MHQ" name="" type="_qSxO8N0yEe2-WKuFT59MHQ" association="_rPDRAd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPD4Ed0yEe2-WKuFT59MHQ" name="" memberEnd="_rPD4Et0yEe2-WKuFT59MHQ _rJn-cN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPD4Et0yEe2-WKuFT59MHQ" name="" type="_qSxO8N0yEe2-WKuFT59MHQ" association="_rPD4Ed0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPEfIN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPEfId0yEe2-WKuFT59MHQ _rJpzot0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPEfId0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPEfIN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPEfI90yEe2-WKuFT59MHQ" name="" memberEnd="_rPEfJN0yEe2-WKuFT59MHQ _rJqasN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPEfJN0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPEfI90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPFGMd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPFGMt0yEe2-WKuFT59MHQ _rJqast0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPFGMt0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPFGMd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPFtQN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPFtQd0yEe2-WKuFT59MHQ _rJsP4d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPFtQd0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPFtQN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPFtQ90yEe2-WKuFT59MHQ" name="" memberEnd="_rPFtRN0yEe2-WKuFT59MHQ _rJs28d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPFtRN0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPFtQ90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPGUUd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPGUUt0yEe2-WKuFT59MHQ _rJs29N0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPGUUt0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPGUUd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPG7Yd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPG7Yt0yEe2-WKuFT59MHQ _rJteAd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPG7Yt0yEe2-WKuFT59MHQ" name="" type="_qUK9IN0yEe2-WKuFT59MHQ" association="_rPG7Yd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPG7ZN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPG7Zd0yEe2-WKuFT59MHQ _rJteA90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPG7Zd0yEe2-WKuFT59MHQ" name="" type="_qUfGMN0yEe2-WKuFT59MHQ" association="_rPG7ZN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPHicd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPHict0yEe2-WKuFT59MHQ _rJvTMd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPHict0yEe2-WKuFT59MHQ" name="" type="_qUqsYN0yEe2-WKuFT59MHQ" association="_rPHicd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPIJgN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPIJgd0yEe2-WKuFT59MHQ _rJwhUt0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPIJgd0yEe2-WKuFT59MHQ" name="" type="_qUtvsN0yEe2-WKuFT59MHQ" association="_rPIJgN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPOQIN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPOQId0yEe2-WKuFT59MHQ _rJxIYN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPOQId0yEe2-WKuFT59MHQ" name="" type="_qUtvsN0yEe2-WKuFT59MHQ" association="_rPOQIN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPPeQd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPPeQt0yEe2-WKuFT59MHQ _rJxIY90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPPeQt0yEe2-WKuFT59MHQ" name="" type="_qU4HwN0yEe2-WKuFT59MHQ" association="_rPPeQd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPQsYd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPQsYt0yEe2-WKuFT59MHQ _rJxvcd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPQsYt0yEe2-WKuFT59MHQ" name="" type="_qU4HwN0yEe2-WKuFT59MHQ" association="_rPQsYd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPRTcd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPRTct0yEe2-WKuFT59MHQ _rJxvc90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPRTct0yEe2-WKuFT59MHQ" name="" type="_qU4HwN0yEe2-WKuFT59MHQ" association="_rPRTcd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPRTdN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPRTdd0yEe2-WKuFT59MHQ _rJyWgd0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPRTdd0yEe2-WKuFT59MHQ" name="" type="_qU4HwN0yEe2-WKuFT59MHQ" association="_rPRTdN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPR6gd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPR6gt0yEe2-WKuFT59MHQ _rJyWg90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPR6gt0yEe2-WKuFT59MHQ" name="" type="_qU4HwN0yEe2-WKuFT59MHQ" association="_rPR6gd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPShkN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPShkd0yEe2-WKuFT59MHQ _rJ_x490yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPShkd0yEe2-WKuFT59MHQ" name="" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPShkN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPShk90yEe2-WKuFT59MHQ" name="" memberEnd="_rPShlN0yEe2-WKuFT59MHQ _rKBnEN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPShlN0yEe2-WKuFT59MHQ" name="" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPShk90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPTIod0yEe2-WKuFT59MHQ" name="" memberEnd="_rPTIot0yEe2-WKuFT59MHQ _rKC1Md0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPTIot0yEe2-WKuFT59MHQ" name="" type="_qVLCsN0yEe2-WKuFT59MHQ" association="_rPTIod0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPTvsN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPTvsd0yEe2-WKuFT59MHQ _rKKxA90yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPTvsd0yEe2-WKuFT59MHQ" name="" type="_qWAJIN0yEe2-WKuFT59MHQ" association="_rPTvsN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPTvs90yEe2-WKuFT59MHQ" name="" memberEnd="_rPTvtN0yEe2-WKuFT59MHQ _rKL_It0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPTvtN0yEe2-WKuFT59MHQ" name="" type="_qWAJIN0yEe2-WKuFT59MHQ" association="_rPTvs90yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPUWwd0yEe2-WKuFT59MHQ" name="" memberEnd="_rPUWwt0yEe2-WKuFT59MHQ _rKdE4d0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPUWwt0yEe2-WKuFT59MHQ" name="" type="_qWTrIN0yEe2-WKuFT59MHQ" association="_rPUWwd0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPUWxN0yEe2-WKuFT59MHQ" name="" memberEnd="_rPUWxd0yEe2-WKuFT59MHQ _rKe6EN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPUWxd0yEe2-WKuFT59MHQ" name="" type="_qWTrIN0yEe2-WKuFT59MHQ" association="_rPUWxN0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPU90d0yEe2-WKuFT59MHQ" name="" memberEnd="_rPU90t0yEe2-WKuFT59MHQ _rKfhIN0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPU90t0yEe2-WKuFT59MHQ" name="" type="_qWTrIN0yEe2-WKuFT59MHQ" association="_rPU90d0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPVk4N0yEe2-WKuFT59MHQ" name="" memberEnd="_rPVk4d0yEe2-WKuFT59MHQ _rKm14N0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPVk4d0yEe2-WKuFT59MHQ" name="" type="_qXJ_sN0yEe2-WKuFT59MHQ" association="_rPVk4N0yEe2-WKuFT59MHQ"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_rPVk490yEe2-WKuFT59MHQ" name="" memberEnd="_rPVk5N0yEe2-WKuFT59MHQ _rKnc8t0yEe2-WKuFT59MHQ">
              <ownedEnd xmi:id="_rPVk5N0yEe2-WKuFT59MHQ" name="" type="_qXJ_sN0yEe2-WKuFT59MHQ" association="_rPVk490yEe2-WKuFT59MHQ"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qA9tQd0yEe2-WKuFT59MHQ" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_rA-Yw90yEe2-WKuFT59MHQ" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rBBcEN0yEe2-WKuFT59MHQ" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rBBcEt0yEe2-WKuFT59MHQ" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rH45EN0yEe2-WKuFT59MHQ" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qC4Y0N0yEe2-WKuFT59MHQ" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_rDCOQN0yEe2-WKuFT59MHQ" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_p9AaUN0yEe2-WKuFT59MHQ" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_p9BBYN0yEe2-WKuFT59MHQ" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_p_XKwN0yEe2-WKuFT59MHQ" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_rAMVoN0yEe2-WKuFT59MHQ" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qEXmkN0yEe2-WKuFT59MHQ" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_rFaM0d0yEe2-WKuFT59MHQ" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_qR5sQN0yEe2-WKuFT59MHQ" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_q-4HAN0yEe2-WKuFT59MHQ" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_q_dV0N0yEe2-WKuFT59MHQ" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_q_ej8N0yEe2-WKuFT59MHQ" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_q_fLAN0yEe2-WKuFT59MHQ" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_q_fyEd0yEe2-WKuFT59MHQ" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rAepgN0yEe2-WKuFT59MHQ" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rCpzwN0yEe2-WKuFT59MHQ" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rDEDcN0yEe2-WKuFT59MHQ" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rEJBgN0yEe2-WKuFT59MHQ" name="Collections"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rEQ9UN0yEe2-WKuFT59MHQ" name="Vector"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rFZlwN0yEe2-WKuFT59MHQ" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rGLB0N0yEe2-WKuFT59MHQ" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rGLo4d0yEe2-WKuFT59MHQ" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qARwwd0yEe2-WKuFT59MHQ" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_rAlXMd0yEe2-WKuFT59MHQ" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rAlXM90yEe2-WKuFT59MHQ" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBumsN0yEe2-WKuFT59MHQ" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rB0tUN0yEe2-WKuFT59MHQ" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qASX0N0yEe2-WKuFT59MHQ" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_qASX0d0yEe2-WKuFT59MHQ" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_rAl-Qd0yEe2-WKuFT59MHQ" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rAmlUd0yEe2-WKuFT59MHQ" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_rAmlU90yEe2-WKuFT59MHQ" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qBl_YN0yEe2-WKuFT59MHQ" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_rBkOoN0yEe2-WKuFT59MHQ" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rGnGsN0yEe2-WKuFT59MHQ" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_rGntwN0yEe2-WKuFT59MHQ" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rHFAwN0yEe2-WKuFT59MHQ" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_rHXUoN0yEe2-WKuFT59MHQ" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qAP7kN0yEe2-WKuFT59MHQ" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_qARJsN0yEe2-WKuFT59MHQ" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_qARwwN0yEe2-WKuFT59MHQ" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_rAkwIN0yEe2-WKuFT59MHQ" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qAS-4N0yEe2-WKuFT59MHQ" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_qAS-4d0yEe2-WKuFT59MHQ" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_qBnNgN0yEe2-WKuFT59MHQ" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_rBmq4N0yEe2-WKuFT59MHQ" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_rBnR8N0yEe2-WKuFT59MHQ" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_rAoagN0yEe2-WKuFT59MHQ" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBk1sd0yEe2-WKuFT59MHQ" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBlcwd0yEe2-WKuFT59MHQ" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_rBlcw90yEe2-WKuFT59MHQ" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qA6p8N0yEe2-WKuFT59MHQ" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_qA8fIN0yEe2-WKuFT59MHQ" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_qA8fId0yEe2-WKuFT59MHQ" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_qA9GMN0yEe2-WKuFT59MHQ" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_qA9tQN0yEe2-WKuFT59MHQ" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_rA9xsd0yEe2-WKuFT59MHQ" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_rA-Ywd0yEe2-WKuFT59MHQ" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_rA5gQN0yEe2-WKuFT59MHQ" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rA7Vcd0yEe2-WKuFT59MHQ" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_rA78gd0yEe2-WKuFT59MHQ" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qDZWMN0yEe2-WKuFT59MHQ" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_qDZ9QN0yEe2-WKuFT59MHQ" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_qDZ9Qd0yEe2-WKuFT59MHQ" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_rEe_wN0yEe2-WKuFT59MHQ" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_rEiqIN0yEe2-WKuFT59MHQ" name="Test"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_rGE7Md0yEe2-WKuFT59MHQ" name="BeforeEach"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_rGEUIN0yEe2-WKuFT59MHQ" name="Before"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qBX88N0yEe2-WKuFT59MHQ" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_rBFGcd0yEe2-WKuFT59MHQ" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBKmAd0yEe2-WKuFT59MHQ" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBSh0N0yEe2-WKuFT59MHQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBYoct0yEe2-WKuFT59MHQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBado90yEe2-WKuFT59MHQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rBfWIN0yEe2-WKuFT59MHQ" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFLjUt0yEe2-WKuFT59MHQ" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFNYgN0yEe2-WKuFT59MHQ" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFN_kt0yEe2-WKuFT59MHQ" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFOmo90yEe2-WKuFT59MHQ" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qEoFQN0yEe2-WKuFT59MHQ" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_rFfsYN0yEe2-WKuFT59MHQ" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFiIot0yEe2-WKuFT59MHQ" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFivtd0yEe2-WKuFT59MHQ" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFj90N0yEe2-WKuFT59MHQ" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFkk4t0yEe2-WKuFT59MHQ" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFlL890yEe2-WKuFT59MHQ" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qEwoIN0yEe2-WKuFT59MHQ" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_rFnoMN0yEe2-WKuFT59MHQ" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFoPQN0yEe2-WKuFT59MHQ" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rFqrgN0yEe2-WKuFT59MHQ" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rF7KMN0yEe2-WKuFT59MHQ" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rF9mcN0yEe2-WKuFT59MHQ" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_nkj8QN0yEe2-WKuFT59MHQ">
      <eAnnotations xmi:id="_nkzM0N0yEe2-WKuFT59MHQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_nlXNgN0yEe2-WKuFT59MHQ" base_Package="_myzvMN0yEe2-WKuFT59MHQ">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_qIJTUN0yEe2-WKuFT59MHQ" genericsValue="T,E" base_Element="_qHwRwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qJO4cN0yEe2-WKuFT59MHQ" base_Element="_qJORYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qJaeoN0yEe2-WKuFT59MHQ" base_Element="_qJORYN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qJewEN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qJhzYN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_qJglQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qJmr4N0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_qJjokN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qJpvMN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_qJnS8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qJtZkN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_qJq9UN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qJ0HQN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_qJuAoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qLapwN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_qLY0kN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qMK3sN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_qMJpkd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qMvfcN0yEe2-WKuFT59MHQ" base_Element="_qMu4YN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qMzw4N0yEe2-WKuFT59MHQ" base_Element="_qMu4YN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qM0_AN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qM2NIN0yEe2-WKuFT59MHQ" base_Element="_qM1mEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qM4CUN0yEe2-WKuFT59MHQ" base_Element="_qM1mEN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qM4CUd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qM4pYN0yEe2-WKuFT59MHQ" base_Element="_qM4CUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qM5QcN0yEe2-WKuFT59MHQ" base_Element="_qM4CUt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qM5Qcd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qNGEwN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qNCaYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qNP1wt0yEe2-WKuFT59MHQ" base_Element="_qNP1wN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qNQc0N0yEe2-WKuFT59MHQ" base_Element="_qNP1wN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qNQc0d0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qNZmwN0yEe2-WKuFT59MHQ" base_Element="_qNTgIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qNmbEN0yEe2-WKuFT59MHQ" base_Element="_qNl0AN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qNnCIN0yEe2-WKuFT59MHQ" base_Element="_qNl0AN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qNnCId0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qNnpMt0yEe2-WKuFT59MHQ" base_Element="_qNnpMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qNo3UN0yEe2-WKuFT59MHQ" base_Element="_qNnpMN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qNo3Ud0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qNpeYN0yEe2-WKuFT59MHQ" base_Element="_qNo3Ut0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qNpeYd0yEe2-WKuFT59MHQ" base_Element="_qNo3Ut0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qNpeYt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qOGxYN0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_qOEVIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qOImkN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_qOH_gN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qOQiYN0yEe2-WKuFT59MHQ" genericsValue="Integer" base_Element="_qOM4AN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qOXQEN0yEe2-WKuFT59MHQ" base_Element="_qOWB8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qOX3IN0yEe2-WKuFT59MHQ" base_Element="_qOWB8N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qOX3Id0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qOl5kN0yEe2-WKuFT59MHQ" base_Element="_qOkrcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qOl5kd0yEe2-WKuFT59MHQ" base_Element="_qOkrcN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qOl5kt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qPClgN0yEe2-WKuFT59MHQ" dimensions="2" base_Element="_qO8e4t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qPbnEN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qPaY8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qPhGoN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qPeDUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qPmmMd0yEe2-WKuFT59MHQ" base_Element="_qPl_It0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qPnNQN0yEe2-WKuFT59MHQ" base_Element="_qPl_It0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qPn0UN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qPqQkN0yEe2-WKuFT59MHQ" base_Element="_qPppgt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qPq3oN0yEe2-WKuFT59MHQ" base_Element="_qPppgt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qPq3od0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qPsFwN0yEe2-WKuFT59MHQ" base_Element="_qPq3ot0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qPsFwd0yEe2-WKuFT59MHQ" base_Element="_qPq3ot0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qPsFwt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qQIxsd0yEe2-WKuFT59MHQ" base_Element="_qQIxsN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qQJYwN0yEe2-WKuFT59MHQ" base_Element="_qQIxsN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qQJYwd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qQLN8N0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qQJ_0N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qQUX4N0yEe2-WKuFT59MHQ" genericsValue="String, Integer" base_Element="_qQQGcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qQZQYN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_qQW0IN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qQeI4N0yEe2-WKuFT59MHQ" base_Element="_qQZ3cN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qQuAgN0yEe2-WKuFT59MHQ" base_Element="_qQtZcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qQunkN0yEe2-WKuFT59MHQ" base_Element="_qQtZcN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qQvOoN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qQ3xgN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qQ0uMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRIQMd0yEe2-WKuFT59MHQ" base_Element="_qRHCEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRI3QN0yEe2-WKuFT59MHQ" base_Element="_qRHCEN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRI3Qd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRJeU90yEe2-WKuFT59MHQ" base_Element="_qRJeUd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRKFYN0yEe2-WKuFT59MHQ" base_Element="_qRJeUd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRKFYd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRKFZN0yEe2-WKuFT59MHQ" base_Element="_qRKFYt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRKscN0yEe2-WKuFT59MHQ" base_Element="_qRKFYt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRKscd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRLTgd0yEe2-WKuFT59MHQ" base_Element="_qRLTgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRPk8N0yEe2-WKuFT59MHQ" base_Element="_qRLTgN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRQzEN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRSoQN0yEe2-WKuFT59MHQ" base_Element="_qRRaIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRTPUN0yEe2-WKuFT59MHQ" base_Element="_qRRaIN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRTPUd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRT2Yd0yEe2-WKuFT59MHQ" base_Element="_qRTPUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRT2Yt0yEe2-WKuFT59MHQ" base_Element="_qRTPUt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRT2Y90yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRUdcd0yEe2-WKuFT59MHQ" base_Element="_qRT2ZN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRVEgN0yEe2-WKuFT59MHQ" base_Element="_qRT2ZN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRVEgd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRWSod0yEe2-WKuFT59MHQ" base_Element="_qRVrkd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRWSot0yEe2-WKuFT59MHQ" base_Element="_qRVrkd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRWSo90yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qRXgwN0yEe2-WKuFT59MHQ" genericsValue="String, Integer" base_Element="_qRWSpN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRmKQd0yEe2-WKuFT59MHQ" base_Element="_qRmKQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRmxUN0yEe2-WKuFT59MHQ" base_Element="_qRmKQN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRmxUd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRomgN0yEe2-WKuFT59MHQ" base_Element="_qRnYYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRpNkN0yEe2-WKuFT59MHQ" base_Element="_qRnYYN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRpNkd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRtfAN0yEe2-WKuFT59MHQ" base_Element="_qRp0oN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRutIN0yEe2-WKuFT59MHQ" base_Element="_qRp0oN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRutId0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qRvUMt0yEe2-WKuFT59MHQ" dimensions="1" base_Element="_qRutIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRwiUN0yEe2-WKuFT59MHQ" base_Element="_qRutIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRwiUd0yEe2-WKuFT59MHQ" base_Element="_qRutIt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRwiUt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qRxJYt0yEe2-WKuFT59MHQ" dimensions="2" base_Element="_qRwiU90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qRxJY90yEe2-WKuFT59MHQ" base_Element="_qRwiU90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qRxwcN0yEe2-WKuFT59MHQ" base_Element="_qRwiU90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qRxwcd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qR0zwN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qR0MsN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qR33EN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qR2o8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_qR66YN0yEe2-WKuFT59MHQ" base_Element="_qR5sQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qSAZ8N0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_qR-kwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qSbQsN0yEe2-WKuFT59MHQ" base_Element="_qSaCkN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qSbQsd0yEe2-WKuFT59MHQ" base_Element="_qSaCkN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qSbQst0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qSce0N0yEe2-WKuFT59MHQ" base_Element="_qSbQs90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qSce0d0yEe2-WKuFT59MHQ" base_Element="_qSbQs90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qSdF4N0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qSe7EN0yEe2-WKuFT59MHQ" base_Element="_qSds8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qSfiIN0yEe2-WKuFT59MHQ" base_Element="_qSds8N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qSfiId0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qSfiI90yEe2-WKuFT59MHQ" base_Element="_qSfiIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qSfiJN0yEe2-WKuFT59MHQ" base_Element="_qSfiIt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qSgJMN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qSh-YN0yEe2-WKuFT59MHQ" base_Element="_qShXUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qSilcN0yEe2-WKuFT59MHQ" base_Element="_qShXUN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qSilcd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qSlBsN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_qSkaoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qSsWcN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qSrvYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qSuysN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_qSuLoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qTPJAN0yEe2-WKuFT59MHQ" genericsValue="T extends SchedulableObject" base_Element="_qTN64N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qTUBgN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_qTTacN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qTZhEN0yEe2-WKuFT59MHQ" base_Element="_qTV2sN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qTpYsN0yEe2-WKuFT59MHQ" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_qToxoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qT7skN0yEe2-WKuFT59MHQ" base_Element="_qT6ecN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUBMIN0yEe2-WKuFT59MHQ" base_Element="_qUAlEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUQcsN0yEe2-WKuFT59MHQ" base_Element="_qUNZYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qURq0N0yEe2-WKuFT59MHQ" base_Element="_qUNZYN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qUSR4N0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUS48N0yEe2-WKuFT59MHQ" base_Element="_qUSR4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qUTgAN0yEe2-WKuFT59MHQ" base_Element="_qUSR4d0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qUUHEN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUUuId0yEe2-WKuFT59MHQ" base_Element="_qUUHEd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qUVVMN0yEe2-WKuFT59MHQ" base_Element="_qUUHEd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qUV8QN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qUlz4N0yEe2-WKuFT59MHQ" base_Element="_qUlM0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qUma8d0yEe2-WKuFT59MHQ" dimensions="2" base_Element="_qUlz4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUvk4d0yEe2-WKuFT59MHQ" base_Element="_qUvk4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qUvk4t0yEe2-WKuFT59MHQ" base_Element="_qUvk4N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qUvk490yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUwL8d0yEe2-WKuFT59MHQ" base_Element="_qUwL8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qUwzAN0yEe2-WKuFT59MHQ" base_Element="_qUwL8N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qUwzAd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUxaEN0yEe2-WKuFT59MHQ" base_Element="_qUwzAt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qUxaEd0yEe2-WKuFT59MHQ" base_Element="_qUwzAt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qUxaEt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qUyBId0yEe2-WKuFT59MHQ" base_Element="_qUxaFd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qUyBI90yEe2-WKuFT59MHQ" base_Element="_qUyBIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qU6kAN0yEe2-WKuFT59MHQ" base_Element="_qU588N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qU7yIN0yEe2-WKuFT59MHQ" base_Element="_qU588N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qU7yId0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qU8ZMN0yEe2-WKuFT59MHQ" base_Element="_qU7yIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qU8ZMd0yEe2-WKuFT59MHQ" base_Element="_qU7yIt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qU8ZMt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qU9AQN0yEe2-WKuFT59MHQ" base_Element="_qU8ZM90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qU9AQd0yEe2-WKuFT59MHQ" base_Element="_qU8ZM90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qU9AQt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qU9nUN0yEe2-WKuFT59MHQ" base_Element="_qU9AQ90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qU9nUd0yEe2-WKuFT59MHQ" base_Element="_qU9AQ90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qU9nUt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qU-1cN0yEe2-WKuFT59MHQ" base_Element="_qU-OYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVADkN0yEe2-WKuFT59MHQ" base_Element="_qU-OYN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVADkd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVAqod0yEe2-WKuFT59MHQ" base_Element="_qVAqoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVBRsN0yEe2-WKuFT59MHQ" base_Element="_qVAqoN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVBRsd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVB4wd0yEe2-WKuFT59MHQ" base_Element="_qVBRst0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVB4wt0yEe2-WKuFT59MHQ" base_Element="_qVBRst0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVB4w90yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVCf0d0yEe2-WKuFT59MHQ" base_Element="_qVB4xN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVDG4N0yEe2-WKuFT59MHQ" base_Element="_qVB4xN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVDG4d0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVDt8d0yEe2-WKuFT59MHQ" base_Element="_qVDG4t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVDt8t0yEe2-WKuFT59MHQ" base_Element="_qVDG4t0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVDt890yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVEVAN0yEe2-WKuFT59MHQ" base_Element="_qVDt9N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVEVAd0yEe2-WKuFT59MHQ" base_Element="_qVDt9N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVEVAt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVEVBN0yEe2-WKuFT59MHQ" base_Element="_qVEVA90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVE8EN0yEe2-WKuFT59MHQ" base_Element="_qVEVA90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVE8Ed0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVE8FN0yEe2-WKuFT59MHQ" base_Element="_qVE8Et0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVFjIN0yEe2-WKuFT59MHQ" base_Element="_qVE8Et0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVFjId0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVFjJN0yEe2-WKuFT59MHQ" base_Element="_qVFjIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVGKMN0yEe2-WKuFT59MHQ" base_Element="_qVFjIt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVGKMd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVGKNN0yEe2-WKuFT59MHQ" base_Element="_qVGKMt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVGKNd0yEe2-WKuFT59MHQ" base_Element="_qVGKMt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVGKNt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVGxQt0yEe2-WKuFT59MHQ" base_Element="_qVGxQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVGxQ90yEe2-WKuFT59MHQ" base_Element="_qVGxQN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVGxRN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qVHYUN0yEe2-WKuFT59MHQ" base_Element="_qVGxRd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qVHYUd0yEe2-WKuFT59MHQ" base_Element="_qVGxRd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qVHYUt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_qVcIcN0yEe2-WKuFT59MHQ" base_Element="_qVa6VN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qVfLwN0yEe2-WKuFT59MHQ" base_Element="_qVd9oN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qVhA890yEe2-WKuFT59MHQ" dimensions="1" base_Element="_qVgZ4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qViPEt0yEe2-WKuFT59MHQ" base_Element="_qVhoBN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qV-T8N0yEe2-WKuFT59MHQ" genericsValue="InstructionParameters" base_Element="_qV7QoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_qWFosN0yEe2-WKuFT59MHQ" genericsValue="InstructionParameters" base_Element="_qWEak90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qWNkgd0yEe2-WKuFT59MHQ" dimensions="1" base_Element="_qWM9cd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_qWPZsN0yEe2-WKuFT59MHQ" dimensions="1" base_Element="_qWOyod0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWU5Qd0yEe2-WKuFT59MHQ" base_Element="_qWU5QN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWVgUN0yEe2-WKuFT59MHQ" base_Element="_qWU5QN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWVgUd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWVgU90yEe2-WKuFT59MHQ" base_Element="_qWVgUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWWHYN0yEe2-WKuFT59MHQ" base_Element="_qWVgUt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWWHYd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWX8kN0yEe2-WKuFT59MHQ" base_Element="_qWWucN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWYjoN0yEe2-WKuFT59MHQ" base_Element="_qWWucN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWYjod0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWZxwN0yEe2-WKuFT59MHQ" base_Element="_qWZKsN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWZxwd0yEe2-WKuFT59MHQ" base_Element="_qWZKsN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWZxwt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWaY0N0yEe2-WKuFT59MHQ" base_Element="_qWZxw90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWaY0d0yEe2-WKuFT59MHQ" base_Element="_qWZxw90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWaY0t0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWa_4d0yEe2-WKuFT59MHQ" base_Element="_qWa_4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWbm8N0yEe2-WKuFT59MHQ" base_Element="_qWa_4N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWbm8d0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWbm890yEe2-WKuFT59MHQ" base_Element="_qWbm8t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWcOAN0yEe2-WKuFT59MHQ" base_Element="_qWbm8t0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWcOAd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWcOA90yEe2-WKuFT59MHQ" base_Element="_qWcOAt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWcOBN0yEe2-WKuFT59MHQ" base_Element="_qWcOAt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWc1EN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWc1Et0yEe2-WKuFT59MHQ" base_Element="_qWc1Ed0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWc1E90yEe2-WKuFT59MHQ" base_Element="_qWc1Ed0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWc1FN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWdcId0yEe2-WKuFT59MHQ" base_Element="_qWdcIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWdcIt0yEe2-WKuFT59MHQ" base_Element="_qWdcIN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWdcI90yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWeDMN0yEe2-WKuFT59MHQ" base_Element="_qWdcJN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWeDMd0yEe2-WKuFT59MHQ" base_Element="_qWdcJN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWeDMt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWeDNN0yEe2-WKuFT59MHQ" base_Element="_qWeDM90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWeqQN0yEe2-WKuFT59MHQ" base_Element="_qWeDM90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWeqQd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWeqQ90yEe2-WKuFT59MHQ" base_Element="_qWeqQt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWfRUN0yEe2-WKuFT59MHQ" base_Element="_qWeqQt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWfRUd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWf4YN0yEe2-WKuFT59MHQ" base_Element="_qWfRUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWf4Yd0yEe2-WKuFT59MHQ" base_Element="_qWfRUt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWf4Yt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWjiwN0yEe2-WKuFT59MHQ" base_Element="_qWf4Y90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWlX8N0yEe2-WKuFT59MHQ" base_Element="_qWf4Y90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWl_AN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWmmEd0yEe2-WKuFT59MHQ" base_Element="_qWmmEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWmmEt0yEe2-WKuFT59MHQ" base_Element="_qWmmEN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWnNIN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWnNIt0yEe2-WKuFT59MHQ" base_Element="_qWnNId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWnNI90yEe2-WKuFT59MHQ" base_Element="_qWnNId0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWnNJN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWn0MN0yEe2-WKuFT59MHQ" base_Element="_qWnNJd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWn0Md0yEe2-WKuFT59MHQ" base_Element="_qWnNJd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWn0Mt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWobQN0yEe2-WKuFT59MHQ" base_Element="_qWn0M90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWobQd0yEe2-WKuFT59MHQ" base_Element="_qWn0M90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWobQt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWpCUN0yEe2-WKuFT59MHQ" base_Element="_qWobQ90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWpCUd0yEe2-WKuFT59MHQ" base_Element="_qWobQ90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWpCUt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWppYN0yEe2-WKuFT59MHQ" base_Element="_qWpCU90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWppYd0yEe2-WKuFT59MHQ" base_Element="_qWpCU90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWppYt0yEe2-WKuFT59MHQ" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWqQcd0yEe2-WKuFT59MHQ" base_Element="_qWqQcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWqQct0yEe2-WKuFT59MHQ" base_Element="_qWqQcN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWqQc90yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWq3gN0yEe2-WKuFT59MHQ" base_Element="_qWqQdN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWq3gd0yEe2-WKuFT59MHQ" base_Element="_qWqQdN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWq3gt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWq3hN0yEe2-WKuFT59MHQ" base_Element="_qWq3g90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWrekN0yEe2-WKuFT59MHQ" base_Element="_qWq3g90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWrekd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWrek90yEe2-WKuFT59MHQ" base_Element="_qWrekt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWuh4N0yEe2-WKuFT59MHQ" base_Element="_qWrekt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWvI8N0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWyzUN0yEe2-WKuFT59MHQ" base_Element="_qWw-IN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWyzUd0yEe2-WKuFT59MHQ" base_Element="_qWw-IN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWyzUt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qWzaYd0yEe2-WKuFT59MHQ" base_Element="_qWzaYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qWzaYt0yEe2-WKuFT59MHQ" base_Element="_qWzaYN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qWzaY90yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW0ogN0yEe2-WKuFT59MHQ" base_Element="_qW0BcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW0ogd0yEe2-WKuFT59MHQ" base_Element="_qW0BcN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW0ogt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW1PkN0yEe2-WKuFT59MHQ" base_Element="_qW0og90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW12oN0yEe2-WKuFT59MHQ" base_Element="_qW0og90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW12od0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW3r0N0yEe2-WKuFT59MHQ" base_Element="_qW12ot0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW4S4N0yEe2-WKuFT59MHQ" base_Element="_qW12ot0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW4S4d0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW5hAN0yEe2-WKuFT59MHQ" base_Element="_qW4S4t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW5hAd0yEe2-WKuFT59MHQ" base_Element="_qW4S4t0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW5hAt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW6IEN0yEe2-WKuFT59MHQ" base_Element="_qW5hA90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW6IEd0yEe2-WKuFT59MHQ" base_Element="_qW5hA90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW6vIN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW6vIt0yEe2-WKuFT59MHQ" base_Element="_qW6vId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW6vI90yEe2-WKuFT59MHQ" base_Element="_qW6vId0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW6vJN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW7WMd0yEe2-WKuFT59MHQ" base_Element="_qW7WMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW7WMt0yEe2-WKuFT59MHQ" base_Element="_qW7WMN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW7WM90yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW79QN0yEe2-WKuFT59MHQ" base_Element="_qW7WNN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW_AkN0yEe2-WKuFT59MHQ" base_Element="_qW7WNN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qW_Akd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qW_noN0yEe2-WKuFT59MHQ" base_Element="_qW_Akt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qW_nod0yEe2-WKuFT59MHQ" base_Element="_qW_Akt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXAOsN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXAOst0yEe2-WKuFT59MHQ" base_Element="_qXAOsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXAOs90yEe2-WKuFT59MHQ" base_Element="_qXAOsd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXAOtN0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXA1wN0yEe2-WKuFT59MHQ" base_Element="_qXAOtd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXA1wd0yEe2-WKuFT59MHQ" base_Element="_qXAOtd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXA1wt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXA1xN0yEe2-WKuFT59MHQ" base_Element="_qXA1w90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXA1xd0yEe2-WKuFT59MHQ" base_Element="_qXA1w90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXBc0N0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXBc0t0yEe2-WKuFT59MHQ" base_Element="_qXBc0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXBc090yEe2-WKuFT59MHQ" base_Element="_qXBc0d0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXBc1N0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXCD4d0yEe2-WKuFT59MHQ" base_Element="_qXCD4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXCD4t0yEe2-WKuFT59MHQ" base_Element="_qXCD4N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXCD490yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXDSAN0yEe2-WKuFT59MHQ" base_Element="_qXCD5N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXDSAd0yEe2-WKuFT59MHQ" base_Element="_qXCD5N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXDSAt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXD5Ed0yEe2-WKuFT59MHQ" base_Element="_qXD5EN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXEgIN0yEe2-WKuFT59MHQ" base_Element="_qXD5EN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXEgId0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXEgI90yEe2-WKuFT59MHQ" base_Element="_qXEgIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXEgJN0yEe2-WKuFT59MHQ" base_Element="_qXEgIt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXEgJd0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qXFHMN0yEe2-WKuFT59MHQ" base_Element="_qXEgJt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_qXFHMd0yEe2-WKuFT59MHQ" base_Element="_qXEgJt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_qXFHMt0yEe2-WKuFT59MHQ" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qXSikN0yEe2-WKuFT59MHQ" genericsValue="Integer" base_Element="_qXRUeN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_q_Ka4N0yEe2-WKuFT59MHQ" base_Element="_q-4HAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_q_d84N0yEe2-WKuFT59MHQ" base_Element="_q_dV0N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_q_ej8d0yEe2-WKuFT59MHQ" base_Element="_q_ej8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_q_fyEN0yEe2-WKuFT59MHQ" base_Element="_q_fLAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_q_gZIN0yEe2-WKuFT59MHQ" base_Element="_q_fyEd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_q_2XYN0yEe2-WKuFT59MHQ" base_Element="_q_zUEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_q_5asN0yEe2-WKuFT59MHQ" base_Element="_q_zUEN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_q_6BwN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q_8eAN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_q_728N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rAB9kN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rAAvcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rAFn8N0yEe2-WKuFT59MHQ" genericsValue="String, Activation" base_Element="_rAFA4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rANjwN0yEe2-WKuFT59MHQ" base_Element="_rAMVoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rAU4gN0yEe2-WKuFT59MHQ" base_Element="_rAURcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rAU4gd0yEe2-WKuFT59MHQ" base_Element="_rAURcN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rAU4gt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rAfQkN0yEe2-WKuFT59MHQ" base_Element="_rAepgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rAi68d0yEe2-WKuFT59MHQ" base_Element="_rAiT4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rAjiAN0yEe2-WKuFT59MHQ" base_Element="_rAiT4N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rAjiAd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rAlXMN0yEe2-WKuFT59MHQ" base_Element="_rAkwIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rAlXMt0yEe2-WKuFT59MHQ" base_Element="_rAlXMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rAl-QN0yEe2-WKuFT59MHQ" base_Element="_rAlXM90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rAmlUN0yEe2-WKuFT59MHQ" base_Element="_rAl-Qd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rAmlUt0yEe2-WKuFT59MHQ" base_Element="_rAmlUd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rAnMYN0yEe2-WKuFT59MHQ" base_Element="_rAmlU90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rApooN0yEe2-WKuFT59MHQ" base_Element="_rAoagN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rAwWUN0yEe2-WKuFT59MHQ" base_Element="_rAt6EN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rAw9YN0yEe2-WKuFT59MHQ" base_Element="_rAt6EN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rAw9Yd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rA1O0N0yEe2-WKuFT59MHQ" genericsValue="String, Flow" base_Element="_rA0nwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rA114d0yEe2-WKuFT59MHQ" genericsValue="Node, Activation" base_Element="_rA114N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rA7VcN0yEe2-WKuFT59MHQ" base_Element="_rA5gQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rA78gN0yEe2-WKuFT59MHQ" base_Element="_rA7Vcd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rA9xsN0yEe2-WKuFT59MHQ" base_Element="_rA78gd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rA-YwN0yEe2-WKuFT59MHQ" base_Element="_rA9xsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rA-Ywt0yEe2-WKuFT59MHQ" base_Element="_rA-Ywd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBA1AN0yEe2-WKuFT59MHQ" base_Element="_rA-Yw90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBBcEd0yEe2-WKuFT59MHQ" base_Element="_rBBcEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBCDIN0yEe2-WKuFT59MHQ" base_Element="_rBBcEt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBGUkN0yEe2-WKuFT59MHQ" base_Element="_rBFGcd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rBJX4N0yEe2-WKuFT59MHQ" base_Element="_rBG7oN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rBJ-8N0yEe2-WKuFT59MHQ" base_Element="_rBG7oN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rBKmAN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rBMbMN0yEe2-WKuFT59MHQ" base_Element="_rBKmAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rBQsoN0yEe2-WKuFT59MHQ" base_Element="_rBNCQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rBR6wN0yEe2-WKuFT59MHQ" base_Element="_rBNCQN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rBR6wd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rBUXAN0yEe2-WKuFT59MHQ" base_Element="_rBSh0N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rBXaUN0yEe2-WKuFT59MHQ" base_Element="_rBU-EN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rBYocN0yEe2-WKuFT59MHQ" base_Element="_rBU-EN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rBYocd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rBZ2kN0yEe2-WKuFT59MHQ" base_Element="_rBYoct0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rBadoN0yEe2-WKuFT59MHQ" base_Element="_rBZ2kd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rBadod0yEe2-WKuFT59MHQ" base_Element="_rBZ2kd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rBadot0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rBbrwN0yEe2-WKuFT59MHQ" base_Element="_rBado90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rBdg8N0yEe2-WKuFT59MHQ" base_Element="_rBbrwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rBevEN0yEe2-WKuFT59MHQ" base_Element="_rBbrwd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rBevEd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rBgkQN0yEe2-WKuFT59MHQ" base_Element="_rBfWIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rBhLUd0yEe2-WKuFT59MHQ" base_Element="_rBgkQd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rBhyYN0yEe2-WKuFT59MHQ" base_Element="_rBgkQd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rBhyYd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rBk1sN0yEe2-WKuFT59MHQ" base_Element="_rBkOoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBlcwN0yEe2-WKuFT59MHQ" base_Element="_rBk1sd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBlcwt0yEe2-WKuFT59MHQ" base_Element="_rBlcwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBmD0N0yEe2-WKuFT59MHQ" base_Element="_rBlcw90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBmq4d0yEe2-WKuFT59MHQ" base_Element="_rBmq4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBnR8d0yEe2-WKuFT59MHQ" base_Element="_rBnR8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rBzfMN0yEe2-WKuFT59MHQ" base_Element="_rBumsN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rB0tUd0yEe2-WKuFT59MHQ" base_Element="_rB0tUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rCD94N0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rB_FYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rCIPUN0yEe2-WKuFT59MHQ" base_Element="_rCGaIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rChQ4N0yEe2-WKuFT59MHQ" base_Element="_rCe0oN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rCifAN0yEe2-WKuFT59MHQ" base_Element="_rCe0oN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rCifAd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rCliUN0yEe2-WKuFT59MHQ" genericsValue="String, Node" base_Element="_rCkUMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rCusQN0yEe2-WKuFT59MHQ" base_Element="_rCpzwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC6ScN0yEe2-WKuFT59MHQ" base_Element="_rC5rYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rC65gN0yEe2-WKuFT59MHQ" base_Element="_rC5rYN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rC7gkN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rC8usN0yEe2-WKuFT59MHQ" genericsValue="ScheduleTime" base_Element="_rC8HoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rC_K8t0yEe2-WKuFT59MHQ" base_Element="_rC-j5N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rC_yAN0yEe2-WKuFT59MHQ" base_Element="_rC-j5N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rC_yAd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rDDcYN0yEe2-WKuFT59MHQ" base_Element="_rDCOQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rDEqgN0yEe2-WKuFT59MHQ" base_Element="_rDEDcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rD_QgN0yEe2-WKuFT59MHQ" genericsValue="String,InstructionTimeSlot" base_Element="_rD6YAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rEIacN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rEHMUd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rEQWQN0yEe2-WKuFT59MHQ" base_Element="_rEJBgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rERkYN0yEe2-WKuFT59MHQ" base_Element="_rEQ9UN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rEUAoN0yEe2-WKuFT59MHQ" genericsValue="Integer" base_Element="_rESygN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rEXrAN0yEe2-WKuFT59MHQ" genericsValue="Double" base_Element="_rEWc4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rEaHQN0yEe2-WKuFT59MHQ" genericsValue="Double,ReliabilityRow" base_Element="_rEY5IN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rEg08N0yEe2-WKuFT59MHQ" base_Element="_rEe_wN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rEjRMN0yEe2-WKuFT59MHQ" base_Element="_rEiqIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rE0W8N0yEe2-WKuFT59MHQ" genericsValue="Activation,Row&lt;Activation>" base_Element="_rExToN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rE2zMN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rE2MId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rE52gN0yEe2-WKuFT59MHQ" base_Element="_rE3aQd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rE7rsN0yEe2-WKuFT59MHQ" base_Element="_rE7EoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rE8SwN0yEe2-WKuFT59MHQ" base_Element="_rE7rsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFFcsN0yEe2-WKuFT59MHQ" base_Element="_rFEOkt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFGDwN0yEe2-WKuFT59MHQ" base_Element="_rFEOkt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFGq0N0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFK8QN0yEe2-WKuFT59MHQ" base_Element="_rFJuIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFLjUN0yEe2-WKuFT59MHQ" base_Element="_rFJuIN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFLjUd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFMKYN0yEe2-WKuFT59MHQ" base_Element="_rFLjUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFMxct0yEe2-WKuFT59MHQ" base_Element="_rFMxcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFMxc90yEe2-WKuFT59MHQ" base_Element="_rFMxcN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFMxdN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFNYgd0yEe2-WKuFT59MHQ" base_Element="_rFNYgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFNYhN0yEe2-WKuFT59MHQ" base_Element="_rFNYgt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFN_kN0yEe2-WKuFT59MHQ" base_Element="_rFNYgt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFN_kd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFN_k90yEe2-WKuFT59MHQ" base_Element="_rFN_kt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFOmoN0yEe2-WKuFT59MHQ" base_Element="_rFN_lN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFOmod0yEe2-WKuFT59MHQ" base_Element="_rFN_lN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFOmot0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFPNsN0yEe2-WKuFT59MHQ" base_Element="_rFOmo90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFPNs90yEe2-WKuFT59MHQ" base_Element="_rFPNsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFPNtN0yEe2-WKuFT59MHQ" base_Element="_rFPNsd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFP0wN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFP0w90yEe2-WKuFT59MHQ" base_Element="_rFP0wd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFP0xN0yEe2-WKuFT59MHQ" base_Element="_rFP0wd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFP0xd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFQb0N0yEe2-WKuFT59MHQ" base_Element="_rFP0xt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFQb0d0yEe2-WKuFT59MHQ" base_Element="_rFP0xt0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFQb0t0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFSRAN0yEe2-WKuFT59MHQ" base_Element="_rFQb090yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFS4EN0yEe2-WKuFT59MHQ" base_Element="_rFQb090yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFS4Ed0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFaM0N0yEe2-WKuFT59MHQ" base_Element="_rFZlwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rFaz4N0yEe2-WKuFT59MHQ" base_Element="_rFaM0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rFgTcN0yEe2-WKuFT59MHQ" base_Element="_rFfsYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFhhkN0yEe2-WKuFT59MHQ" base_Element="_rFg6gN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFhhkd0yEe2-WKuFT59MHQ" base_Element="_rFg6gN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFhhkt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFhhld0yEe2-WKuFT59MHQ" base_Element="_rFhhk90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFiIoN0yEe2-WKuFT59MHQ" base_Element="_rFhhk90yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFiIod0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFiIo90yEe2-WKuFT59MHQ" base_Element="_rFiIot0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFivst0yEe2-WKuFT59MHQ" base_Element="_rFivsN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFivs90yEe2-WKuFT59MHQ" base_Element="_rFivsN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFivtN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFjWwN0yEe2-WKuFT59MHQ" base_Element="_rFivtd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFjWw90yEe2-WKuFT59MHQ" base_Element="_rFjWwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFjWxN0yEe2-WKuFT59MHQ" base_Element="_rFjWwd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFjWxd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFj90d0yEe2-WKuFT59MHQ" base_Element="_rFj90N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFj91N0yEe2-WKuFT59MHQ" base_Element="_rFj90t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFkk4N0yEe2-WKuFT59MHQ" base_Element="_rFj90t0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFkk4d0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFkk490yEe2-WKuFT59MHQ" base_Element="_rFkk4t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFlL8N0yEe2-WKuFT59MHQ" base_Element="_rFkk5N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFlL8d0yEe2-WKuFT59MHQ" base_Element="_rFkk5N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFlL8t0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFlzAN0yEe2-WKuFT59MHQ" base_Element="_rFlL890yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rFlzA90yEe2-WKuFT59MHQ" base_Element="_rFlzAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rFmaEN0yEe2-WKuFT59MHQ" base_Element="_rFlzAd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rFmaEd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rFnoMd0yEe2-WKuFT59MHQ" base_Element="_rFnoMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rFqEcN0yEe2-WKuFT59MHQ" base_Element="_rFoPQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rFrSkN0yEe2-WKuFT59MHQ" base_Element="_rFqrgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rF8_YN0yEe2-WKuFT59MHQ" base_Element="_rF7KMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rF9mcd0yEe2-WKuFT59MHQ" base_Element="_rF9mcN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rGE7MN0yEe2-WKuFT59MHQ" base_Element="_rGEUIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rGE7Mt0yEe2-WKuFT59MHQ" base_Element="_rGE7Md0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_rGIlkN0yEe2-WKuFT59MHQ" dimensions="1" base_Element="_rGH-g90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_rGJMod0yEe2-WKuFT59MHQ" dimensions="2" base_Element="_rGIlk90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rGLo4N0yEe2-WKuFT59MHQ" base_Element="_rGLB0N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rGMP8N0yEe2-WKuFT59MHQ" base_Element="_rGLo4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGlRgN0yEe2-WKuFT59MHQ" genericsValue="T, E" base_Element="_rGfx8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rGoU0N0yEe2-WKuFT59MHQ" base_Element="_rGntwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGpi8N0yEe2-WKuFT59MHQ" genericsValue="Activation" base_Element="_rGoU0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGsmQN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rGrYId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGt0YN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rGtNUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGubcN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rGt0Yt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGvCgN0yEe2-WKuFT59MHQ" genericsValue="ScheduleTime" base_Element="_rGubct0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGwQod0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rGwQoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGyF0N0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rGxewt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGys4N0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rGxew90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGzT8N0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rGys490yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rGz7AN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rGzT8t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rG0iEd0yEe2-WKuFT59MHQ" genericsValue="Activation" base_Element="_rG0iEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rG1wM90yEe2-WKuFT59MHQ" base_Element="_rG1wMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rG5akN0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rG1wMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rG6BoN0yEe2-WKuFT59MHQ" base_Element="_rG1wMN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rG6Bod0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rG720N0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rG7PwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rG9E8N0yEe2-WKuFT59MHQ" base_Element="_rG8d4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rG9sAd0yEe2-WKuFT59MHQ" base_Element="_rG9E8d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rG9sAt0yEe2-WKuFT59MHQ" base_Element="_rG9E8d0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rG9sA90yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rG-TEd0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rG-TEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rG-6Id0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rG-6IN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHAvUN0yEe2-WKuFT59MHQ" genericsValue="Flow" base_Element="_rHAIQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHB9cN0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rHBWZN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHCkgt0yEe2-WKuFT59MHQ" genericsValue="Integer" base_Element="_rHCkgd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rHFn0N0yEe2-WKuFT59MHQ" base_Element="_rHFAwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHJSMN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHIrIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHJ5RN0yEe2-WKuFT59MHQ" base_Element="_rHJ5QN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rHKgUN0yEe2-WKuFT59MHQ" base_Element="_rHJ5QN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rHKgUd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rHLHYN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHKgUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHLHZd0yEe2-WKuFT59MHQ" base_Element="_rHLHYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rHLucN0yEe2-WKuFT59MHQ" base_Element="_rHLHYd0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rHLucd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rHMVgN0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rHLuct0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHNjoN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHM8kN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHNjpd0yEe2-WKuFT59MHQ" base_Element="_rHNjod0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rHOKsN0yEe2-WKuFT59MHQ" base_Element="_rHNjod0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rHOKsd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rHPY0N0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rHOxwt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_rHPY1d0yEe2-WKuFT59MHQ" base_Element="_rHPY0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHQm8N0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rHPY0t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rHR1EN0yEe2-WKuFT59MHQ" base_Element="_rHROAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHScId0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHScIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHURUN0yEe2-WKuFT59MHQ" base_Element="_rHTDMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rHURUd0yEe2-WKuFT59MHQ" base_Element="_rHTDMN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rHURUt0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rHU4Yd0yEe2-WKuFT59MHQ" base_Element="_rHU4YN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rHYiwN0yEe2-WKuFT59MHQ" base_Element="_rHXUoN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHaX8d0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHaX8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHa_BN0yEe2-WKuFT59MHQ" base_Element="_rHa_AN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rHbmEN0yEe2-WKuFT59MHQ" base_Element="_rHa_AN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rHbmEd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_rHfQcN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHepZt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHgekN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHf3gd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHhFod0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHgekt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHhssN0yEe2-WKuFT59MHQ" genericsValue="T" base_Element="_rHgek90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHkwAN0yEe2-WKuFT59MHQ" genericsValue="E" base_Element="_rHkI8d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rHlXEd0yEe2-WKuFT59MHQ" base_Element="_rHlXEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rHmlMN0yEe2-WKuFT59MHQ" base_Element="_rHl-Jt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_rHnzUN0yEe2-WKuFT59MHQ" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_rHnMRN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHrdsN0yEe2-WKuFT59MHQ" base_Element="_rHnMRN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rHuhAN0yEe2-WKuFT59MHQ" base_Element="_rHt58N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rHuhAd0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rHt58d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Annotations xmi:id="_rHuhAt0yEe2-WKuFT59MHQ" base_Element="_rHt58N0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rHvIEN0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_rH45Ed0yEe2-WKuFT59MHQ" base_Element="_rH45EN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rIL0AN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rILM8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rINpMN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rINCIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rIOQQN0yEe2-WKuFT59MHQ" genericsValue="ScheduleTime" base_Element="_rINpMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rITv0N0yEe2-WKuFT59MHQ" base_Element="_rITIwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rITv0t0yEe2-WKuFT59MHQ" base_Element="_rITv0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIUW4d0yEe2-WKuFT59MHQ" base_Element="_rIUW4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIVlAN0yEe2-WKuFT59MHQ" base_Element="_rIU99N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIVlAt0yEe2-WKuFT59MHQ" base_Element="_rIVlAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIWzIN0yEe2-WKuFT59MHQ" base_Element="_rIWMEt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIWzIt0yEe2-WKuFT59MHQ" base_Element="_rIWzId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rIXaMN0yEe2-WKuFT59MHQ" genericsValue="ChannelSet" base_Element="_rIWzI90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIXaMd0yEe2-WKuFT59MHQ" base_Element="_rIWzI90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rIYoUd0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rIYoUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIZPYN0yEe2-WKuFT59MHQ" base_Element="_rIYoUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIZPYt0yEe2-WKuFT59MHQ" base_Element="_rIZPYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rIZ2cN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rIZPY90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIZ2cd0yEe2-WKuFT59MHQ" base_Element="_rIZPY90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIgkIN0yEe2-WKuFT59MHQ" base_Element="_rIadgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIsxYN0yEe2-WKuFT59MHQ" base_Element="_rImqwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rIzfEN0yEe2-WKuFT59MHQ" base_Element="_rIy4AN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI0GId0yEe2-WKuFT59MHQ" base_Element="_rI0GIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI0tMN0yEe2-WKuFT59MHQ" base_Element="_rI0GIt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI0tMt0yEe2-WKuFT59MHQ" base_Element="_rI0tMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI4-oN0yEe2-WKuFT59MHQ" base_Element="_rI4Xkd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI8B8t0yEe2-WKuFT59MHQ" base_Element="_rI8B8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI8B9N0yEe2-WKuFT59MHQ" base_Element="_rI8B890yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI8pAd0yEe2-WKuFT59MHQ" base_Element="_rI8pAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rI9QEN0yEe2-WKuFT59MHQ" genericsValue="Node" base_Element="_rI8pAt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI93IN0yEe2-WKuFT59MHQ" base_Element="_rI8pAt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rI93It0yEe2-WKuFT59MHQ" genericsValue="Integer" base_Element="_rI93Id0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI-eMN0yEe2-WKuFT59MHQ" base_Element="_rI93Id0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rI-eMt0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rI-eMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI_FQN0yEe2-WKuFT59MHQ" base_Element="_rI-eMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI_FQt0yEe2-WKuFT59MHQ" base_Element="_rI_FQd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rI_sUN0yEe2-WKuFT59MHQ" base_Element="_rI_FQ90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJBhgN0yEe2-WKuFT59MHQ" base_Element="_rJA6dd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJBhgt0yEe2-WKuFT59MHQ" base_Element="_rJBhgd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJBhhN0yEe2-WKuFT59MHQ" base_Element="_rJBhg90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJCIkd0yEe2-WKuFT59MHQ" base_Element="_rJCIkN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJCIk90yEe2-WKuFT59MHQ" base_Element="_rJCIkt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJCvoN0yEe2-WKuFT59MHQ" base_Element="_rJCIlN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJDWsN0yEe2-WKuFT59MHQ" base_Element="_rJCvod0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJDWst0yEe2-WKuFT59MHQ" base_Element="_rJDWsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJD9wN0yEe2-WKuFT59MHQ" base_Element="_rJDWs90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJEk0N0yEe2-WKuFT59MHQ" base_Element="_rJD9w90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJEk090yEe2-WKuFT59MHQ" base_Element="_rJEk0t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJFL4t0yEe2-WKuFT59MHQ" base_Element="_rJFL4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJHBEN0yEe2-WKuFT59MHQ" base_Element="_rJGaAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJHoIN0yEe2-WKuFT59MHQ" base_Element="_rJHBEd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJI2Qd0yEe2-WKuFT59MHQ" base_Element="_rJI2QN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJJdUd0yEe2-WKuFT59MHQ" base_Element="_rJJdUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJJdU90yEe2-WKuFT59MHQ" base_Element="_rJJdUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJKEYN0yEe2-WKuFT59MHQ" base_Element="_rJJdVN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rJKEYt0yEe2-WKuFT59MHQ" genericsValue="String, Integer" base_Element="_rJKEYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJKrcN0yEe2-WKuFT59MHQ" base_Element="_rJKEYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJL5kN0yEe2-WKuFT59MHQ" base_Element="_rJLSg90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJL5kt0yEe2-WKuFT59MHQ" base_Element="_rJL5kd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rJNHsN0yEe2-WKuFT59MHQ" genericsValue="Edge" base_Element="_rJMgot0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJPj8N0yEe2-WKuFT59MHQ" base_Element="_rJO85N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJPj8t0yEe2-WKuFT59MHQ" base_Element="_rJPj8d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJSAMN0yEe2-WKuFT59MHQ" base_Element="_rJQLAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJSnQt0yEe2-WKuFT59MHQ" base_Element="_rJSAMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJTOUd0yEe2-WKuFT59MHQ" base_Element="_rJTOUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rJT1YN0yEe2-WKuFT59MHQ" genericsValue="Activation" base_Element="_rJTOUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJT1Yd0yEe2-WKuFT59MHQ" base_Element="_rJTOUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rJUccN0yEe2-WKuFT59MHQ" genericsValue="String, Integer" base_Element="_rJT1Yt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJVDgN0yEe2-WKuFT59MHQ" base_Element="_rJT1Yt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJVqkd0yEe2-WKuFT59MHQ" base_Element="_rJVqkN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJXfwN0yEe2-WKuFT59MHQ" base_Element="_rJW4td0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJXfwt0yEe2-WKuFT59MHQ" base_Element="_rJXfwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJbKIN0yEe2-WKuFT59MHQ" base_Element="_rJXfw90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJbxMN0yEe2-WKuFT59MHQ" base_Element="_rJbKId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJcYQN0yEe2-WKuFT59MHQ" base_Element="_rJbxMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJcYQt0yEe2-WKuFT59MHQ" base_Element="_rJcYQd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJc_UN0yEe2-WKuFT59MHQ" base_Element="_rJcYQ90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJc_Ut0yEe2-WKuFT59MHQ" base_Element="_rJc_Ud0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJc_VN0yEe2-WKuFT59MHQ" base_Element="_rJc_U90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJdmYd0yEe2-WKuFT59MHQ" base_Element="_rJdmYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJe0gd0yEe2-WKuFT59MHQ" base_Element="_rJe0gN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJfbkN0yEe2-WKuFT59MHQ" base_Element="_rJe0gt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJfbkt0yEe2-WKuFT59MHQ" base_Element="_rJfbkd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJhQwd0yEe2-WKuFT59MHQ" base_Element="_rJhQwN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJhQw90yEe2-WKuFT59MHQ" base_Element="_rJhQwt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJh30d0yEe2-WKuFT59MHQ" base_Element="_rJh30N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJie4d0yEe2-WKuFT59MHQ" base_Element="_rJie4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJie5N0yEe2-WKuFT59MHQ" base_Element="_rJie4t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJjF8d0yEe2-WKuFT59MHQ" base_Element="_rJie5d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJjF9N0yEe2-WKuFT59MHQ" base_Element="_rJjF8t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJkUFN0yEe2-WKuFT59MHQ" base_Element="_rJkUE90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJk7IN0yEe2-WKuFT59MHQ" base_Element="_rJkUFd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJliMN0yEe2-WKuFT59MHQ" base_Element="_rJk7I90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJliMt0yEe2-WKuFT59MHQ" base_Element="_rJliMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJmwUd0yEe2-WKuFT59MHQ" base_Element="_rJmwUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJmwU90yEe2-WKuFT59MHQ" base_Element="_rJmwUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJnXYN0yEe2-WKuFT59MHQ" base_Element="_rJmwVN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJnXYt0yEe2-WKuFT59MHQ" base_Element="_rJnXYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJnXZN0yEe2-WKuFT59MHQ" base_Element="_rJnXY90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJn-cd0yEe2-WKuFT59MHQ" base_Element="_rJn-cN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJn-c90yEe2-WKuFT59MHQ" base_Element="_rJn-ct0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJolgN0yEe2-WKuFT59MHQ" base_Element="_rJn-dN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJpzo90yEe2-WKuFT59MHQ" base_Element="_rJpzot0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJqasd0yEe2-WKuFT59MHQ" base_Element="_rJqasN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJqas90yEe2-WKuFT59MHQ" base_Element="_rJqast0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJrBwN0yEe2-WKuFT59MHQ" base_Element="_rJqatN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJro0N0yEe2-WKuFT59MHQ" base_Element="_rJrBwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJsP4N0yEe2-WKuFT59MHQ" base_Element="_rJro0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJs28N0yEe2-WKuFT59MHQ" base_Element="_rJsP4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJs2890yEe2-WKuFT59MHQ" base_Element="_rJs28d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJteAN0yEe2-WKuFT59MHQ" base_Element="_rJs29N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJteAt0yEe2-WKuFT59MHQ" base_Element="_rJteAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJuFEN0yEe2-WKuFT59MHQ" base_Element="_rJteA90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJuFEt0yEe2-WKuFT59MHQ" base_Element="_rJuFEd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJusIN0yEe2-WKuFT59MHQ" base_Element="_rJuFE90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Array xmi:id="_rJusJd0yEe2-WKuFT59MHQ" dimensions="2" base_Element="_rJusI90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJvTMN0yEe2-WKuFT59MHQ" base_Element="_rJusI90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJvTMt0yEe2-WKuFT59MHQ" base_Element="_rJvTMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJv6QN0yEe2-WKuFT59MHQ" base_Element="_rJvTM90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJwhU90yEe2-WKuFT59MHQ" base_Element="_rJwhUt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJwhVd0yEe2-WKuFT59MHQ" base_Element="_rJwhVN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJxIYd0yEe2-WKuFT59MHQ" base_Element="_rJxIYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJxvcN0yEe2-WKuFT59MHQ" base_Element="_rJxIY90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJxvct0yEe2-WKuFT59MHQ" base_Element="_rJxvcd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJyWgN0yEe2-WKuFT59MHQ" base_Element="_rJxvc90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJyWgt0yEe2-WKuFT59MHQ" base_Element="_rJyWgd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJyWhN0yEe2-WKuFT59MHQ" base_Element="_rJyWg90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJzkoN0yEe2-WKuFT59MHQ" base_Element="_rJy9kN0yEe2-WKuFT59MHQ">
    <associatedElement xmi:type="uml:Operation" xmi:id="_rJ5EMN0yEe2-WKuFT59MHQ" name="getNumChannels" method="_rMoPIN0yEe2-WKuFT59MHQ">
      <ownedParameter xmi:id="_rJ65YN0yEe2-WKuFT59MHQ" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_rJ8HgN0yEe2-WKuFT59MHQ" base_Element="_rJ5EMN0yEe2-WKuFT59MHQ">
    <annotations xmi:id="_rJ8Hgd0yEe2-WKuFT59MHQ" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJ8ukN0yEe2-WKuFT59MHQ" base_Element="_rJ8Hgt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJ8uk90yEe2-WKuFT59MHQ" base_Element="_rJ8ukd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJ-jxt0yEe2-WKuFT59MHQ" base_Element="_rJ-jxN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJ_K1N0yEe2-WKuFT59MHQ" base_Element="_rJ_K0t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rJ_x4t0yEe2-WKuFT59MHQ" base_Element="_rJ_x4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rKAY8N0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rJ_x490yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rKCOIN0yEe2-WKuFT59MHQ" genericsValue="String" base_Element="_rKBnEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKDcQN0yEe2-WKuFT59MHQ" base_Element="_rKC1Md0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKKJ8t0yEe2-WKuFT59MHQ" base_Element="_rKKJ8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKKxAt0yEe2-WKuFT59MHQ" base_Element="_rKKxAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rKL_IN0yEe2-WKuFT59MHQ" genericsValue="InstructionParameters" base_Element="_rKKxA90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKL_Id0yEe2-WKuFT59MHQ" base_Element="_rKKxA90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKMmMN0yEe2-WKuFT59MHQ" base_Element="_rKL_It0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKObYN0yEe2-WKuFT59MHQ" base_Element="_rKN0Vt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKObYt0yEe2-WKuFT59MHQ" base_Element="_rKObYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKPpgN0yEe2-WKuFT59MHQ" base_Element="_rKObY90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKQQkN0yEe2-WKuFT59MHQ" base_Element="_rKPpgd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKResN0yEe2-WKuFT59MHQ" base_Element="_rKQQkd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKSs0N0yEe2-WKuFT59MHQ" base_Element="_rKResd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKVJEN0yEe2-WKuFT59MHQ" base_Element="_rKTT4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKWXMN0yEe2-WKuFT59MHQ" base_Element="_rKVwIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKWXMt0yEe2-WKuFT59MHQ" base_Element="_rKWXMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKWXNN0yEe2-WKuFT59MHQ" base_Element="_rKWXM90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKW-Qd0yEe2-WKuFT59MHQ" base_Element="_rKW-QN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKYzcN0yEe2-WKuFT59MHQ" base_Element="_rKW-Qt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKbPsN0yEe2-WKuFT59MHQ" base_Element="_rKaooN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKb2wd0yEe2-WKuFT59MHQ" base_Element="_rKb2wN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKb2xN0yEe2-WKuFT59MHQ" base_Element="_rKb2wt0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKcd0d0yEe2-WKuFT59MHQ" base_Element="_rKcd0N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKcd090yEe2-WKuFT59MHQ" base_Element="_rKcd0t0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKdE4N0yEe2-WKuFT59MHQ" base_Element="_rKcd1N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKdr8N0yEe2-WKuFT59MHQ" base_Element="_rKdE4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKe6Ed0yEe2-WKuFT59MHQ" base_Element="_rKe6EN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKfhId0yEe2-WKuFT59MHQ" base_Element="_rKfhIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKjykN0yEe2-WKuFT59MHQ" base_Element="_rKjLgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKlAst0yEe2-WKuFT59MHQ" base_Element="_rKlAsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKlnwN0yEe2-WKuFT59MHQ" base_Element="_rKlAs90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKlnwt0yEe2-WKuFT59MHQ" base_Element="_rKlnwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rKnc8N0yEe2-WKuFT59MHQ" genericsValue="Integer" base_Element="_rKm14N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rKnc8d0yEe2-WKuFT59MHQ" base_Element="_rKm14N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Generics xmi:id="_rKoEAN0yEe2-WKuFT59MHQ" genericsValue="SchedulableObject" base_Element="_rKnc8t0yEe2-WKuFT59MHQ"/>
  <uml:OpaqueBehavior xmi:id="_rMoPIN0yEe2-WKuFT59MHQ" name="getNumChannels" specification="_rJ5EMN0yEe2-WKuFT59MHQ">
    <ownedParameter xmi:id="_rMpdQN0yEe2-WKuFT59MHQ" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_rOsrsN0yEe2-WKuFT59MHQ" base_Element="_rOoaQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOug4N0yEe2-WKuFT59MHQ" base_Element="_rOt50N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOvH8t0yEe2-WKuFT59MHQ" base_Element="_rOvH8N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOvvAt0yEe2-WKuFT59MHQ" base_Element="_rOvvAN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOwWEN0yEe2-WKuFT59MHQ" base_Element="_rOvvA90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOw9IN0yEe2-WKuFT59MHQ" base_Element="_rOwWEd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOw9I90yEe2-WKuFT59MHQ" base_Element="_rOw9Id0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOxkMN0yEe2-WKuFT59MHQ" base_Element="_rOw9JN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOxkM90yEe2-WKuFT59MHQ" base_Element="_rOxkMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOyLQt0yEe2-WKuFT59MHQ" base_Element="_rOyLQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOyyUN0yEe2-WKuFT59MHQ" base_Element="_rOyLQ90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOyyU90yEe2-WKuFT59MHQ" base_Element="_rOyyUd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rOzZYt0yEe2-WKuFT59MHQ" base_Element="_rOzZYN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO0AcN0yEe2-WKuFT59MHQ" base_Element="_rOzZY90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO0ngN0yEe2-WKuFT59MHQ" base_Element="_rO0Acd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO0ng90yEe2-WKuFT59MHQ" base_Element="_rO0ngd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO1OkN0yEe2-WKuFT59MHQ" base_Element="_rO0nhN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO11oN0yEe2-WKuFT59MHQ" base_Element="_rO1Okd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO11o90yEe2-WKuFT59MHQ" base_Element="_rO11od0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO2cst0yEe2-WKuFT59MHQ" base_Element="_rO2csN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO3DwN0yEe2-WKuFT59MHQ" base_Element="_rO2cs90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO3Dw90yEe2-WKuFT59MHQ" base_Element="_rO3Dwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO3q0t0yEe2-WKuFT59MHQ" base_Element="_rO3q0N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO4R4N0yEe2-WKuFT59MHQ" base_Element="_rO3q090yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO4R490yEe2-WKuFT59MHQ" base_Element="_rO4R4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO448t0yEe2-WKuFT59MHQ" base_Element="_rO448N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO5gAN0yEe2-WKuFT59MHQ" base_Element="_rO44890yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO5gA90yEe2-WKuFT59MHQ" base_Element="_rO5gAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO6HEt0yEe2-WKuFT59MHQ" base_Element="_rO6HEN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO6uIN0yEe2-WKuFT59MHQ" base_Element="_rO6HE90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO6uI90yEe2-WKuFT59MHQ" base_Element="_rO6uId0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO7VMt0yEe2-WKuFT59MHQ" base_Element="_rO7VMN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO78QN0yEe2-WKuFT59MHQ" base_Element="_rO7VM90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO78Q90yEe2-WKuFT59MHQ" base_Element="_rO78Qd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO9KYN0yEe2-WKuFT59MHQ" base_Element="_rO8jUN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO9xcN0yEe2-WKuFT59MHQ" base_Element="_rO9KYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO9xc90yEe2-WKuFT59MHQ" base_Element="_rO9xcd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO-Ygt0yEe2-WKuFT59MHQ" base_Element="_rO-YgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO-_kN0yEe2-WKuFT59MHQ" base_Element="_rO-Yg90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO-_k90yEe2-WKuFT59MHQ" base_Element="_rO-_kd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rO_mot0yEe2-WKuFT59MHQ" base_Element="_rO_moN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPANsN0yEe2-WKuFT59MHQ" base_Element="_rO_mo90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPA0wN0yEe2-WKuFT59MHQ" base_Element="_rPANsd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPBb0N0yEe2-WKuFT59MHQ" base_Element="_rPA0wd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPBb090yEe2-WKuFT59MHQ" base_Element="_rPBb0d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPCC4N0yEe2-WKuFT59MHQ" base_Element="_rPBb1N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPCp8N0yEe2-WKuFT59MHQ" base_Element="_rPCC4d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPCp890yEe2-WKuFT59MHQ" base_Element="_rPCp8d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPDRAN0yEe2-WKuFT59MHQ" base_Element="_rPCp9N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPD4EN0yEe2-WKuFT59MHQ" base_Element="_rPDRAd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPD4E90yEe2-WKuFT59MHQ" base_Element="_rPD4Ed0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPEfIt0yEe2-WKuFT59MHQ" base_Element="_rPEfIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPFGMN0yEe2-WKuFT59MHQ" base_Element="_rPEfI90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPFGM90yEe2-WKuFT59MHQ" base_Element="_rPFGMd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPFtQt0yEe2-WKuFT59MHQ" base_Element="_rPFtQN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPGUUN0yEe2-WKuFT59MHQ" base_Element="_rPFtQ90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPG7YN0yEe2-WKuFT59MHQ" base_Element="_rPGUUd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPG7Y90yEe2-WKuFT59MHQ" base_Element="_rPG7Yd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPHicN0yEe2-WKuFT59MHQ" base_Element="_rPG7ZN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPHic90yEe2-WKuFT59MHQ" base_Element="_rPHicd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPNpEN0yEe2-WKuFT59MHQ" base_Element="_rPIJgN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPPeQN0yEe2-WKuFT59MHQ" base_Element="_rPOQIN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPQsYN0yEe2-WKuFT59MHQ" base_Element="_rPPeQd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPRTcN0yEe2-WKuFT59MHQ" base_Element="_rPQsYd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPRTc90yEe2-WKuFT59MHQ" base_Element="_rPRTcd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPR6gN0yEe2-WKuFT59MHQ" base_Element="_rPRTdN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPR6g90yEe2-WKuFT59MHQ" base_Element="_rPR6gd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPShkt0yEe2-WKuFT59MHQ" base_Element="_rPShkN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPTIoN0yEe2-WKuFT59MHQ" base_Element="_rPShk90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPTIo90yEe2-WKuFT59MHQ" base_Element="_rPTIod0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPTvst0yEe2-WKuFT59MHQ" base_Element="_rPTvsN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPUWwN0yEe2-WKuFT59MHQ" base_Element="_rPTvs90yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPUWw90yEe2-WKuFT59MHQ" base_Element="_rPUWwd0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPU90N0yEe2-WKuFT59MHQ" base_Element="_rPUWxN0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPU9090yEe2-WKuFT59MHQ" base_Element="_rPU90d0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPVk4t0yEe2-WKuFT59MHQ" base_Element="_rPVk4N0yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Reference xmi:id="_rPWL8N0yEe2-WKuFT59MHQ" base_Element="_rPVk490yEe2-WKuFT59MHQ"/>
  <UMLLabProfile:Patch xmi:id="_uW7A4N0yEe2-WKuFT59MHQ" base_Element="_qNRD4N0yEe2-WKuFT59MHQ" patchText="@@ -337,26 +337,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0A%09%09RELEASE&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_uXwuYN0yEe2-WKuFT59MHQ" base_Element="_qPSdIN0yEe2-WKuFT59MHQ" patchText="@@ -242,22 +242,25 @@&#xA;  MISS%22;%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_uX7tgN0yEe2-WKuFT59MHQ" base_Element="_qTUokN0yEe2-WKuFT59MHQ" patchText="@@ -109,18 +109,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0A%09    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_uX-w0N0yEe2-WKuFT59MHQ" base_Element="_qT3bIN0yEe2-WKuFT59MHQ" patchText="@@ -134,26 +134,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0A    SOURC&#xA;@@ -269,18 +269,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0A    I&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_uYDpUN0yEe2-WKuFT59MHQ" base_Element="_qWTrIN0yEe2-WKuFT59MHQ" patchText="@@ -355,22 +355,26 @@&#xA; dTest %7B%0A&#xA;-public&#xA;+%09%0A%09private&#xA;  static &#xA;@@ -389,22 +389,24 @@&#xA;  load1;%0A&#xA;-public&#xA;+%09private&#xA;  static &#xA;@@ -425,14 +425,16 @@&#xA; d2;%0A&#xA;-public&#xA;+%09private&#xA;  sta&#xA;" conflicting="false"/>
</xmi:XMI>
